### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests
  commentId: T:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests
  id: DiscordGatewayClientTests
  parent: Remora.Discord.Gateway.Tests.Tests
  children:
  - Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  - Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanConnectAndResumeUsingProvidedGatewaySessionAsync
  - Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanConnectAsync
  - Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAfterExceptionAsync
  - Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAfterReconnectInsteadOfHelloAsync
  - Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAndCreateNewSessionAsync
  - Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAndResumeAsync
  - Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrieveGatewaySessionAsync
  - Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrySessionCreationIfInvalidatedAsync
  - Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrySessionCreationIfReconnectRequestedAsync
  langs:
  - csharp
  - vb
  name: DiscordGatewayClientTests
  nameWithType: DiscordGatewayClientTests
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests
  type: Class
  source:
    id: DiscordGatewayClientTests
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Tests\DiscordGatewayClientTests.cs
    startLine: 54
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Tests
  summary: Tests the <xref href="Remora.Discord.Gateway.DiscordGatewayClient" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public class DiscordGatewayClientTests
    content.vb: Public Class DiscordGatewayClientTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  commentId: M:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  id: '#ctor(Xunit.Abstractions.ITestOutputHelper)'
  parent: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests
  langs:
  - csharp
  - vb
  name: DiscordGatewayClientTests(ITestOutputHelper)
  nameWithType: DiscordGatewayClientTests.DiscordGatewayClientTests(ITestOutputHelper)
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.DiscordGatewayClientTests(Xunit.Abstractions.ITestOutputHelper)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Tests\DiscordGatewayClientTests.cs
    startLine: 62
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Tests
  summary: Initializes a new instance of the <xref href="Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public DiscordGatewayClientTests(ITestOutputHelper testOutput)
    parameters:
    - id: testOutput
      type: Xunit.Abstractions.ITestOutputHelper
      description: The output helper.
    content.vb: Public Sub New(testOutput As ITestOutputHelper)
  overload: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.#ctor*
  nameWithType.vb: DiscordGatewayClientTests.New(ITestOutputHelper)
  fullName.vb: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.New(Xunit.Abstractions.ITestOutputHelper)
  name.vb: New(ITestOutputHelper)
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanConnectAsync
  commentId: M:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanConnectAsync
  id: CanConnectAsync
  parent: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests
  langs:
  - csharp
  - vb
  name: CanConnectAsync()
  nameWithType: DiscordGatewayClientTests.CanConnectAsync()
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanConnectAsync()
  type: Method
  source:
    id: CanConnectAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Tests\DiscordGatewayClientTests.cs
    startLine: 71
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Tests
  summary: Tests whether the client can send the correct sequence of events in order to connect normally.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanConnectAsync()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanConnectAsync() As Task
  overload: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanConnectAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAndResumeAsync
  commentId: M:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAndResumeAsync
  id: CanReconnectAndResumeAsync
  parent: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests
  langs:
  - csharp
  - vb
  name: CanReconnectAndResumeAsync()
  nameWithType: DiscordGatewayClientTests.CanReconnectAndResumeAsync()
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAndResumeAsync()
  type: Method
  source:
    id: CanReconnectAndResumeAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Tests\DiscordGatewayClientTests.cs
    startLine: 135
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Tests
  summary: Tests whether the client can reconnect and resume properly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanReconnectAndResumeAsync()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanReconnectAndResumeAsync() As Task
  overload: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAndResumeAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanConnectAndResumeUsingProvidedGatewaySessionAsync
  commentId: M:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanConnectAndResumeUsingProvidedGatewaySessionAsync
  id: CanConnectAndResumeUsingProvidedGatewaySessionAsync
  parent: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests
  langs:
  - csharp
  - vb
  name: CanConnectAndResumeUsingProvidedGatewaySessionAsync()
  nameWithType: DiscordGatewayClientTests.CanConnectAndResumeUsingProvidedGatewaySessionAsync()
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanConnectAndResumeUsingProvidedGatewaySessionAsync()
  type: Method
  source:
    id: CanConnectAndResumeUsingProvidedGatewaySessionAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Tests\DiscordGatewayClientTests.cs
    startLine: 215
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Tests
  summary: Tests whether the client can connect and resume when provided with a pre-existing gateway session information.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanConnectAndResumeUsingProvidedGatewaySessionAsync()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanConnectAndResumeUsingProvidedGatewaySessionAsync() As Task
  overload: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanConnectAndResumeUsingProvidedGatewaySessionAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrieveGatewaySessionAsync
  commentId: M:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrieveGatewaySessionAsync
  id: CanRetrieveGatewaySessionAsync
  parent: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests
  langs:
  - csharp
  - vb
  name: CanRetrieveGatewaySessionAsync()
  nameWithType: DiscordGatewayClientTests.CanRetrieveGatewaySessionAsync()
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrieveGatewaySessionAsync()
  type: Method
  source:
    id: CanRetrieveGatewaySessionAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Tests\DiscordGatewayClientTests.cs
    startLine: 275
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Tests
  summary: Tests that the client preserves session information when it is disconnected.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanRetrieveGatewaySessionAsync()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanRetrieveGatewaySessionAsync() As Task
  overload: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrieveGatewaySessionAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAndCreateNewSessionAsync
  commentId: M:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAndCreateNewSessionAsync
  id: CanReconnectAndCreateNewSessionAsync
  parent: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests
  langs:
  - csharp
  - vb
  name: CanReconnectAndCreateNewSessionAsync()
  nameWithType: DiscordGatewayClientTests.CanReconnectAndCreateNewSessionAsync()
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAndCreateNewSessionAsync()
  type: Method
  source:
    id: CanReconnectAndCreateNewSessionAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Tests\DiscordGatewayClientTests.cs
    startLine: 346
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Tests
  summary: Tests whether the client can reconnect and create a new session properly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanReconnectAndCreateNewSessionAsync()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanReconnectAndCreateNewSessionAsync() As Task
  overload: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAndCreateNewSessionAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrySessionCreationIfInvalidatedAsync
  commentId: M:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrySessionCreationIfInvalidatedAsync
  id: CanRetrySessionCreationIfInvalidatedAsync
  parent: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests
  langs:
  - csharp
  - vb
  name: CanRetrySessionCreationIfInvalidatedAsync()
  nameWithType: DiscordGatewayClientTests.CanRetrySessionCreationIfInvalidatedAsync()
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrySessionCreationIfInvalidatedAsync()
  type: Method
  source:
    id: CanRetrySessionCreationIfInvalidatedAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Tests\DiscordGatewayClientTests.cs
    startLine: 447
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Tests
  summary: Tests whether the client can retry session creation if the attempt is invalidated.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanRetrySessionCreationIfInvalidatedAsync()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanRetrySessionCreationIfInvalidatedAsync() As Task
  overload: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrySessionCreationIfInvalidatedAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrySessionCreationIfReconnectRequestedAsync
  commentId: M:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrySessionCreationIfReconnectRequestedAsync
  id: CanRetrySessionCreationIfReconnectRequestedAsync
  parent: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests
  langs:
  - csharp
  - vb
  name: CanRetrySessionCreationIfReconnectRequestedAsync()
  nameWithType: DiscordGatewayClientTests.CanRetrySessionCreationIfReconnectRequestedAsync()
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrySessionCreationIfReconnectRequestedAsync()
  type: Method
  source:
    id: CanRetrySessionCreationIfReconnectRequestedAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Tests\DiscordGatewayClientTests.cs
    startLine: 529
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Tests
  summary: Tests whether the client can retry session creation if reconnection is immediately requested.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanRetrySessionCreationIfReconnectRequestedAsync()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanRetrySessionCreationIfReconnectRequestedAsync() As Task
  overload: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrySessionCreationIfReconnectRequestedAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAfterExceptionAsync
  commentId: M:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAfterExceptionAsync
  id: CanReconnectAfterExceptionAsync
  parent: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests
  langs:
  - csharp
  - vb
  name: CanReconnectAfterExceptionAsync()
  nameWithType: DiscordGatewayClientTests.CanReconnectAfterExceptionAsync()
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAfterExceptionAsync()
  type: Method
  source:
    id: CanReconnectAfterExceptionAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Tests\DiscordGatewayClientTests.cs
    startLine: 611
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Tests
  summary: Tests whether the gateway can successfully reconnect and re-establish a connection, after a network exception.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanReconnectAfterExceptionAsync()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanReconnectAfterExceptionAsync() As Task
  overload: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAfterExceptionAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAfterReconnectInsteadOfHelloAsync
  commentId: M:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAfterReconnectInsteadOfHelloAsync
  id: CanReconnectAfterReconnectInsteadOfHelloAsync
  parent: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests
  langs:
  - csharp
  - vb
  name: CanReconnectAfterReconnectInsteadOfHelloAsync()
  nameWithType: DiscordGatewayClientTests.CanReconnectAfterReconnectInsteadOfHelloAsync()
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAfterReconnectInsteadOfHelloAsync()
  type: Method
  source:
    id: CanReconnectAfterReconnectInsteadOfHelloAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Tests\DiscordGatewayClientTests.cs
    startLine: 717
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Tests
  summary: Tests whether the client can reconnect after being sent a Reconnect instead of Hello.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanReconnectAfterReconnectInsteadOfHelloAsync()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanReconnectAfterReconnectInsteadOfHelloAsync() As Task
  overload: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAfterReconnectInsteadOfHelloAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: Remora.Discord.Gateway.DiscordGatewayClient
  commentId: T:Remora.Discord.Gateway.DiscordGatewayClient
  parent: Remora.Discord.Gateway
  href: Remora.Discord.Gateway.DiscordGatewayClient.html
  name: DiscordGatewayClient
  nameWithType: DiscordGatewayClient
  fullName: Remora.Discord.Gateway.DiscordGatewayClient
- uid: Remora.Discord.Gateway.Tests.Tests
  commentId: N:Remora.Discord.Gateway.Tests.Tests
  href: Remora.html
  name: Remora.Discord.Gateway.Tests.Tests
  nameWithType: Remora.Discord.Gateway.Tests.Tests
  fullName: Remora.Discord.Gateway.Tests.Tests
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Tests
    name: Tests
    href: Remora.Discord.Gateway.Tests.html
  - name: .
  - uid: Remora.Discord.Gateway.Tests.Tests
    name: Tests
    href: Remora.Discord.Gateway.Tests.Tests.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Tests
    name: Tests
    href: Remora.Discord.Gateway.Tests.html
  - name: .
  - uid: Remora.Discord.Gateway.Tests.Tests
    name: Tests
    href: Remora.Discord.Gateway.Tests.Tests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Remora.Discord.Gateway
  commentId: N:Remora.Discord.Gateway
  href: Remora.html
  name: Remora.Discord.Gateway
  nameWithType: Remora.Discord.Gateway
  fullName: Remora.Discord.Gateway
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests
  commentId: T:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests
  href: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.html
  name: DiscordGatewayClientTests
  nameWithType: DiscordGatewayClientTests
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.#ctor*
  commentId: Overload:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.#ctor
  href: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.html#Remora_Discord_Gateway_Tests_Tests_DiscordGatewayClientTests__ctor_Xunit_Abstractions_ITestOutputHelper_
  name: DiscordGatewayClientTests
  nameWithType: DiscordGatewayClientTests.DiscordGatewayClientTests
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.DiscordGatewayClientTests
  nameWithType.vb: DiscordGatewayClientTests.New
  fullName.vb: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.New
  name.vb: New
- uid: Xunit.Abstractions.ITestOutputHelper
  commentId: T:Xunit.Abstractions.ITestOutputHelper
  parent: Xunit.Abstractions
  isExternal: true
  name: ITestOutputHelper
  nameWithType: ITestOutputHelper
  fullName: Xunit.Abstractions.ITestOutputHelper
- uid: Xunit.Abstractions
  commentId: N:Xunit.Abstractions
  isExternal: true
  name: Xunit.Abstractions
  nameWithType: Xunit.Abstractions
  fullName: Xunit.Abstractions
  spec.csharp:
  - uid: Xunit
    name: Xunit
    isExternal: true
  - name: .
  - uid: Xunit.Abstractions
    name: Abstractions
    isExternal: true
  spec.vb:
  - uid: Xunit
    name: Xunit
    isExternal: true
  - name: .
  - uid: Xunit.Abstractions
    name: Abstractions
    isExternal: true
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanConnectAsync*
  commentId: Overload:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanConnectAsync
  href: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.html#Remora_Discord_Gateway_Tests_Tests_DiscordGatewayClientTests_CanConnectAsync
  name: CanConnectAsync
  nameWithType: DiscordGatewayClientTests.CanConnectAsync
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanConnectAsync
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAndResumeAsync*
  commentId: Overload:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAndResumeAsync
  href: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.html#Remora_Discord_Gateway_Tests_Tests_DiscordGatewayClientTests_CanReconnectAndResumeAsync
  name: CanReconnectAndResumeAsync
  nameWithType: DiscordGatewayClientTests.CanReconnectAndResumeAsync
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAndResumeAsync
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanConnectAndResumeUsingProvidedGatewaySessionAsync*
  commentId: Overload:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanConnectAndResumeUsingProvidedGatewaySessionAsync
  href: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.html#Remora_Discord_Gateway_Tests_Tests_DiscordGatewayClientTests_CanConnectAndResumeUsingProvidedGatewaySessionAsync
  name: CanConnectAndResumeUsingProvidedGatewaySessionAsync
  nameWithType: DiscordGatewayClientTests.CanConnectAndResumeUsingProvidedGatewaySessionAsync
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanConnectAndResumeUsingProvidedGatewaySessionAsync
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrieveGatewaySessionAsync*
  commentId: Overload:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrieveGatewaySessionAsync
  href: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.html#Remora_Discord_Gateway_Tests_Tests_DiscordGatewayClientTests_CanRetrieveGatewaySessionAsync
  name: CanRetrieveGatewaySessionAsync
  nameWithType: DiscordGatewayClientTests.CanRetrieveGatewaySessionAsync
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrieveGatewaySessionAsync
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAndCreateNewSessionAsync*
  commentId: Overload:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAndCreateNewSessionAsync
  href: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.html#Remora_Discord_Gateway_Tests_Tests_DiscordGatewayClientTests_CanReconnectAndCreateNewSessionAsync
  name: CanReconnectAndCreateNewSessionAsync
  nameWithType: DiscordGatewayClientTests.CanReconnectAndCreateNewSessionAsync
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAndCreateNewSessionAsync
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrySessionCreationIfInvalidatedAsync*
  commentId: Overload:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrySessionCreationIfInvalidatedAsync
  href: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.html#Remora_Discord_Gateway_Tests_Tests_DiscordGatewayClientTests_CanRetrySessionCreationIfInvalidatedAsync
  name: CanRetrySessionCreationIfInvalidatedAsync
  nameWithType: DiscordGatewayClientTests.CanRetrySessionCreationIfInvalidatedAsync
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrySessionCreationIfInvalidatedAsync
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrySessionCreationIfReconnectRequestedAsync*
  commentId: Overload:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrySessionCreationIfReconnectRequestedAsync
  href: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.html#Remora_Discord_Gateway_Tests_Tests_DiscordGatewayClientTests_CanRetrySessionCreationIfReconnectRequestedAsync
  name: CanRetrySessionCreationIfReconnectRequestedAsync
  nameWithType: DiscordGatewayClientTests.CanRetrySessionCreationIfReconnectRequestedAsync
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanRetrySessionCreationIfReconnectRequestedAsync
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAfterExceptionAsync*
  commentId: Overload:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAfterExceptionAsync
  href: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.html#Remora_Discord_Gateway_Tests_Tests_DiscordGatewayClientTests_CanReconnectAfterExceptionAsync
  name: CanReconnectAfterExceptionAsync
  nameWithType: DiscordGatewayClientTests.CanReconnectAfterExceptionAsync
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAfterExceptionAsync
- uid: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAfterReconnectInsteadOfHelloAsync*
  commentId: Overload:Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAfterReconnectInsteadOfHelloAsync
  href: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.html#Remora_Discord_Gateway_Tests_Tests_DiscordGatewayClientTests_CanReconnectAfterReconnectInsteadOfHelloAsync
  name: CanReconnectAfterReconnectInsteadOfHelloAsync
  nameWithType: DiscordGatewayClientTests.CanReconnectAfterReconnectInsteadOfHelloAsync
  fullName: Remora.Discord.Gateway.Tests.Tests.DiscordGatewayClientTests.CanReconnectAfterReconnectInsteadOfHelloAsync
