### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  commentId: T:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  id: CommandTreeExtensionTests.CreateApplicationCommands.Failures
  parent: Remora.Discord.Commands.Tests.Extensions
  children:
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsACollectionParameter
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsASwitchParameter
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandDescriptionIsTooLong
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandHasTooManyParameters
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandIsTooLong
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAGroupHasTooManyCommands
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAParameterDescriptionIsTooLong
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasDescription
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasInvalidParameters
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasNoParameters
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuIsNested
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfGroupsAreTooDeeplyNested
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalid
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalid
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultDMPermissionAttribute
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultPermissionAttribute
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasAnNsfwPermissionAttribute
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsAtTheRootLevel
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsInAGroup
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreTooManyRootLevelCommands
  langs:
  - csharp
  - vb
  name: CommandTreeExtensionTests.CreateApplicationCommands.Failures
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  type: Class
  source:
    id: Failures
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 56
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests various failing cases.
  example: []
  syntax:
    content: public class CommandTreeExtensionTests.CreateApplicationCommands.Failures
    content.vb: Public Class CommandTreeExtensionTests.CreateApplicationCommands.Failures
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfGroupsAreTooDeeplyNested
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfGroupsAreTooDeeplyNested
  id: ThrowsIfGroupsAreTooDeeplyNested
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfGroupsAreTooDeeplyNested()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfGroupsAreTooDeeplyNested()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfGroupsAreTooDeeplyNested()
  type: Method
  source:
    id: ThrowsIfGroupsAreTooDeeplyNested
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 61
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfGroupsAreTooDeeplyNested()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfGroupsAreTooDeeplyNested()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfGroupsAreTooDeeplyNested*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandHasTooManyParameters
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandHasTooManyParameters
  id: ThrowsIfACommandHasTooManyParameters
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfACommandHasTooManyParameters()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandHasTooManyParameters()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandHasTooManyParameters()
  type: Method
  source:
    id: ThrowsIfACommandHasTooManyParameters
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 75
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfACommandHasTooManyParameters()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfACommandHasTooManyParameters()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandHasTooManyParameters*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreTooManyRootLevelCommands
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreTooManyRootLevelCommands
  id: ThrowsIfThereAreTooManyRootLevelCommands
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfThereAreTooManyRootLevelCommands()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreTooManyRootLevelCommands()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreTooManyRootLevelCommands()
  type: Method
  source:
    id: ThrowsIfThereAreTooManyRootLevelCommands
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 89
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfThereAreTooManyRootLevelCommands()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfThereAreTooManyRootLevelCommands()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreTooManyRootLevelCommands*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAGroupHasTooManyCommands
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAGroupHasTooManyCommands
  id: ThrowsIfAGroupHasTooManyCommands
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfAGroupHasTooManyCommands()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAGroupHasTooManyCommands()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAGroupHasTooManyCommands()
  type: Method
  source:
    id: ThrowsIfAGroupHasTooManyCommands
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 103
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfAGroupHasTooManyCommands()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfAGroupHasTooManyCommands()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAGroupHasTooManyCommands*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsACollectionParameter
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsACollectionParameter
  id: ThrowsIfACommandContainsACollectionParameter
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfACommandContainsACollectionParameter()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsACollectionParameter()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsACollectionParameter()
  type: Method
  source:
    id: ThrowsIfACommandContainsACollectionParameter
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 117
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfACommandContainsACollectionParameter()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfACommandContainsACollectionParameter()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsACollectionParameter*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsASwitchParameter
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsASwitchParameter
  id: ThrowsIfACommandContainsASwitchParameter
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfACommandContainsASwitchParameter()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsASwitchParameter()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsASwitchParameter()
  type: Method
  source:
    id: ThrowsIfACommandContainsASwitchParameter
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 131
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfACommandContainsASwitchParameter()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfACommandContainsASwitchParameter()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsASwitchParameter*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsAtTheRootLevel
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsAtTheRootLevel
  id: ThrowsIfThereAreOverloadsAtTheRootLevel
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfThereAreOverloadsAtTheRootLevel()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsAtTheRootLevel()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsAtTheRootLevel()
  type: Method
  source:
    id: ThrowsIfThereAreOverloadsAtTheRootLevel
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 145
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfThereAreOverloadsAtTheRootLevel()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfThereAreOverloadsAtTheRootLevel()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsAtTheRootLevel*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsInAGroup
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsInAGroup
  id: ThrowsIfThereAreOverloadsInAGroup
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfThereAreOverloadsInAGroup()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsInAGroup()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsInAGroup()
  type: Method
  source:
    id: ThrowsIfThereAreOverloadsInAGroup
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 159
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfThereAreOverloadsInAGroup()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfThereAreOverloadsInAGroup()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsInAGroup*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandIsTooLong
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandIsTooLong
  id: ThrowsIfACommandIsTooLong
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfACommandIsTooLong()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandIsTooLong()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandIsTooLong()
  type: Method
  source:
    id: ThrowsIfACommandIsTooLong
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 173
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfACommandIsTooLong()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfACommandIsTooLong()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandIsTooLong*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandDescriptionIsTooLong
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandDescriptionIsTooLong
  id: ThrowsIfACommandDescriptionIsTooLong
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfACommandDescriptionIsTooLong()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandDescriptionIsTooLong()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandDescriptionIsTooLong()
  type: Method
  source:
    id: ThrowsIfACommandDescriptionIsTooLong
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 187
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfACommandDescriptionIsTooLong()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfACommandDescriptionIsTooLong()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandDescriptionIsTooLong*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAParameterDescriptionIsTooLong
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAParameterDescriptionIsTooLong
  id: ThrowsIfAParameterDescriptionIsTooLong
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfAParameterDescriptionIsTooLong()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAParameterDescriptionIsTooLong()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAParameterDescriptionIsTooLong()
  type: Method
  source:
    id: ThrowsIfAParameterDescriptionIsTooLong
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 201
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfAParameterDescriptionIsTooLong()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfAParameterDescriptionIsTooLong()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAParameterDescriptionIsTooLong*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute
  id: ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute()
  type: Method
  source:
    id: ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 215
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute
  id: ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute()
  type: Method
  source:
    id: ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 230
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultPermissionAttribute
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultPermissionAttribute
  id: ThrowsIfNestedCommandHasADefaultPermissionAttribute
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfNestedCommandHasADefaultPermissionAttribute()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultPermissionAttribute()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultPermissionAttribute()
  type: Method
  source:
    id: ThrowsIfNestedCommandHasADefaultPermissionAttribute
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 244
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfNestedCommandHasADefaultPermissionAttribute()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfNestedCommandHasADefaultPermissionAttribute()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultPermissionAttribute*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute
  id: ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute()
  type: Method
  source:
    id: ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 258
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute
  id: ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute()
  type: Method
  source:
    id: ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 273
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultDMPermissionAttribute
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultDMPermissionAttribute
  id: ThrowsIfNestedCommandHasADefaultDMPermissionAttribute
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfNestedCommandHasADefaultDMPermissionAttribute()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultDMPermissionAttribute()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultDMPermissionAttribute()
  type: Method
  source:
    id: ThrowsIfNestedCommandHasADefaultDMPermissionAttribute
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 287
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfNestedCommandHasADefaultDMPermissionAttribute()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfNestedCommandHasADefaultDMPermissionAttribute()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultDMPermissionAttribute*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute
  id: ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute()
  type: Method
  source:
    id: ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 301
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute
  id: ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute()
  type: Method
  source:
    id: ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 316
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasAnNsfwPermissionAttribute
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasAnNsfwPermissionAttribute
  id: ThrowsIfNestedCommandHasAnNsfwPermissionAttribute
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfNestedCommandHasAnNsfwPermissionAttribute()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasAnNsfwPermissionAttribute()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasAnNsfwPermissionAttribute()
  type: Method
  source:
    id: ThrowsIfNestedCommandHasAnNsfwPermissionAttribute
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 330
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfNestedCommandHasAnNsfwPermissionAttribute()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfNestedCommandHasAnNsfwPermissionAttribute()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasAnNsfwPermissionAttribute*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasDescription
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasDescription
  id: ThrowsIfContextMenuHasDescription
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfContextMenuHasDescription()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasDescription()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasDescription()
  type: Method
  source:
    id: ThrowsIfContextMenuHasDescription
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 344
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfContextMenuHasDescription()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfContextMenuHasDescription()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasDescription*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuIsNested
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuIsNested
  id: ThrowsIfContextMenuIsNested
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfContextMenuIsNested()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuIsNested()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuIsNested()
  type: Method
  source:
    id: ThrowsIfContextMenuIsNested
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 358
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfContextMenuIsNested()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfContextMenuIsNested()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuIsNested*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasInvalidParameters
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasInvalidParameters
  id: ThrowsIfContextMenuHasInvalidParameters
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfContextMenuHasInvalidParameters()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasInvalidParameters()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasInvalidParameters()
  type: Method
  source:
    id: ThrowsIfContextMenuHasInvalidParameters
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 372
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfContextMenuHasInvalidParameters()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfContextMenuHasInvalidParameters()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasInvalidParameters*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasNoParameters
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasNoParameters
  id: ThrowsIfContextMenuHasNoParameters
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfContextMenuHasNoParameters()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasNoParameters()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasNoParameters()
  type: Method
  source:
    id: ThrowsIfContextMenuHasNoParameters
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 386
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfContextMenuHasNoParameters()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfContextMenuHasNoParameters()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasNoParameters*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter
  id: ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter()
  type: Method
  source:
    id: ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 400
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalid
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalid
  id: ThrowsIfMinLengthConstraintIsInvalid
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfMinLengthConstraintIsInvalid()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalid()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalid()
  type: Method
  source:
    id: ThrowsIfMinLengthConstraintIsInvalid
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 414
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfMinLengthConstraintIsInvalid()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfMinLengthConstraintIsInvalid()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalid*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalid
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalid
  id: ThrowsIfMaxLengthConstraintIsInvalid
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfMaxLengthConstraintIsInvalid()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalid()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalid()
  type: Method
  source:
    id: ThrowsIfMaxLengthConstraintIsInvalid
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 428
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfMaxLengthConstraintIsInvalid()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfMaxLengthConstraintIsInvalid()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalid*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid
  id: ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid()
  type: Method
  source:
    id: ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 442
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid
  id: ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid()
  type: Method
  source:
    id: ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 456
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType
  id: ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType()
  type: Method
  source:
    id: ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 470
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType
  id: ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures
  langs:
  - csharp
  - vb
  name: ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType()
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType()
  type: Method
  source:
    id: ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 484
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a failure case.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType()
    content.vb: >-
      <Fact>

      Public Sub ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: Remora.Discord.Commands.Tests.Extensions
  commentId: N:Remora.Discord.Commands.Tests.Extensions
  href: Remora.html
  name: Remora.Discord.Commands.Tests.Extensions
  nameWithType: Remora.Discord.Commands.Tests.Extensions
  fullName: Remora.Discord.Commands.Tests.Extensions
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Extensions
    name: Extensions
    href: Remora.Discord.Commands.Tests.Extensions.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Extensions
    name: Extensions
    href: Remora.Discord.Commands.Tests.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfGroupsAreTooDeeplyNested*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfGroupsAreTooDeeplyNested
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfGroupsAreTooDeeplyNested
  name: ThrowsIfGroupsAreTooDeeplyNested
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfGroupsAreTooDeeplyNested
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfGroupsAreTooDeeplyNested
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandHasTooManyParameters*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandHasTooManyParameters
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfACommandHasTooManyParameters
  name: ThrowsIfACommandHasTooManyParameters
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandHasTooManyParameters
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandHasTooManyParameters
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreTooManyRootLevelCommands*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreTooManyRootLevelCommands
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfThereAreTooManyRootLevelCommands
  name: ThrowsIfThereAreTooManyRootLevelCommands
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreTooManyRootLevelCommands
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreTooManyRootLevelCommands
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAGroupHasTooManyCommands*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAGroupHasTooManyCommands
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfAGroupHasTooManyCommands
  name: ThrowsIfAGroupHasTooManyCommands
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAGroupHasTooManyCommands
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAGroupHasTooManyCommands
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsACollectionParameter*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsACollectionParameter
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfACommandContainsACollectionParameter
  name: ThrowsIfACommandContainsACollectionParameter
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsACollectionParameter
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsACollectionParameter
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsASwitchParameter*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsASwitchParameter
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfACommandContainsASwitchParameter
  name: ThrowsIfACommandContainsASwitchParameter
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsASwitchParameter
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandContainsASwitchParameter
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsAtTheRootLevel*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsAtTheRootLevel
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfThereAreOverloadsAtTheRootLevel
  name: ThrowsIfThereAreOverloadsAtTheRootLevel
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsAtTheRootLevel
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsAtTheRootLevel
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsInAGroup*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsInAGroup
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfThereAreOverloadsInAGroup
  name: ThrowsIfThereAreOverloadsInAGroup
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsInAGroup
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfThereAreOverloadsInAGroup
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandIsTooLong*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandIsTooLong
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfACommandIsTooLong
  name: ThrowsIfACommandIsTooLong
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandIsTooLong
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandIsTooLong
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandDescriptionIsTooLong*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandDescriptionIsTooLong
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfACommandDescriptionIsTooLong
  name: ThrowsIfACommandDescriptionIsTooLong
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandDescriptionIsTooLong
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfACommandDescriptionIsTooLong
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAParameterDescriptionIsTooLong*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAParameterDescriptionIsTooLong
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfAParameterDescriptionIsTooLong
  name: ThrowsIfAParameterDescriptionIsTooLong
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAParameterDescriptionIsTooLong
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfAParameterDescriptionIsTooLong
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute
  name: ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultPermissionAttribute
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute
  name: ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultPermissionAttribute
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultPermissionAttribute*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultPermissionAttribute
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfNestedCommandHasADefaultPermissionAttribute
  name: ThrowsIfNestedCommandHasADefaultPermissionAttribute
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultPermissionAttribute
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultPermissionAttribute
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute
  name: ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveADefaultDMPermissionAttribute
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute
  name: ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasADefaultDMPermissionAttribute
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultDMPermissionAttribute*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultDMPermissionAttribute
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfNestedCommandHasADefaultDMPermissionAttribute
  name: ThrowsIfNestedCommandHasADefaultDMPermissionAttribute
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultDMPermissionAttribute
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasADefaultDMPermissionAttribute
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute
  name: ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMultipleNamedGroupsWithTheSameNameHaveAnNsfwPermissionAttribute
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute
  name: ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedNamedGroupHasAnNsfwPermissionAttribute
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasAnNsfwPermissionAttribute*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasAnNsfwPermissionAttribute
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfNestedCommandHasAnNsfwPermissionAttribute
  name: ThrowsIfNestedCommandHasAnNsfwPermissionAttribute
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasAnNsfwPermissionAttribute
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfNestedCommandHasAnNsfwPermissionAttribute
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasDescription*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasDescription
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfContextMenuHasDescription
  name: ThrowsIfContextMenuHasDescription
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasDescription
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasDescription
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuIsNested*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuIsNested
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfContextMenuIsNested
  name: ThrowsIfContextMenuIsNested
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuIsNested
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuIsNested
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasInvalidParameters*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasInvalidParameters
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfContextMenuHasInvalidParameters
  name: ThrowsIfContextMenuHasInvalidParameters
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasInvalidParameters
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasInvalidParameters
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasNoParameters*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasNoParameters
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfContextMenuHasNoParameters
  name: ThrowsIfContextMenuHasNoParameters
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasNoParameters
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfContextMenuHasNoParameters
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter
  name: ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfChannelTypesAttributeAppliedOnNonChannelParameter
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalid*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalid
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfMinLengthConstraintIsInvalid
  name: ThrowsIfMinLengthConstraintIsInvalid
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalid
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalid
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalid*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalid
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfMaxLengthConstraintIsInvalid
  name: ThrowsIfMaxLengthConstraintIsInvalid
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalid
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalid
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid
  name: ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsInvalidButMaxIsValid
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid
  name: ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsInvalidButMinIsValid
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType
  name: ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMinLengthConstraintIsAppliedToAnIncompatibleType
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Failures_ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType
  name: ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Failures.ThrowsIfMaxLengthConstraintIsAppliedToAnIncompatibleType
