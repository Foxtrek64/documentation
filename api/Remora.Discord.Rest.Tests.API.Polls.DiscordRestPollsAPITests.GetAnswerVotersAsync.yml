### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync
  commentId: T:Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync
  id: DiscordRestPollsAPITests.GetAnswerVotersAsync
  parent: Remora.Discord.Rest.Tests.API.Polls
  children:
  - Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  - Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsAfterRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsLimitRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.ReturnsErrorIfLimitIsOutsideValidRange
  langs:
  - csharp
  - vb
  name: DiscordRestPollsAPITests.GetAnswerVotersAsync
  nameWithType: DiscordRestPollsAPITests.GetAnswerVotersAsync
  fullName: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync
  type: Class
  source:
    id: GetAnswerVotersAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Polls\DiscordRestPollsAPITests.cs
    startLine: 45
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Polls
  summary: Tests the <xref href="Remora.Discord.Rest.API.DiscordRestPollAPI.GetAnswerVotersAsync(Remora.Rest.Core.Snowflake%2cRemora.Rest.Core.Snowflake%2cSystem.Int32%2cRemora.Rest.Core.Optional%7bRemora.Rest.Core.Snowflake%7d%2cRemora.Rest.Core.Optional%7bSystem.Int32%7d%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: 'public class DiscordRestPollsAPITests.GetAnswerVotersAsync : RestAPITestBase<IDiscordRestPollAPI>'
    content.vb: Public Class DiscordRestPollsAPITests.GetAnswerVotersAsync Inherits RestAPITestBase(Of IDiscordRestPollAPI)
  inheritance:
  - System.Object
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI}
  inheritedMembers:
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  commentId: M:Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  id: '#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)'
  parent: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync
  langs:
  - csharp
  - vb
  name: GetAnswerVotersAsync(RestAPITestFixture)
  nameWithType: DiscordRestPollsAPITests.GetAnswerVotersAsync.GetAnswerVotersAsync(RestAPITestFixture)
  fullName: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.GetAnswerVotersAsync(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Polls\DiscordRestPollsAPITests.cs
    startLine: 51
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Polls
  summary: Initializes a new instance of the <xref href="Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public GetAnswerVotersAsync(RestAPITestFixture fixture)
    parameters:
    - id: fixture
      type: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
      description: The test fixture.
    content.vb: Public Sub New(fixture As RestAPITestFixture)
  overload: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.#ctor*
  nameWithType.vb: DiscordRestPollsAPITests.GetAnswerVotersAsync.New(RestAPITestFixture)
  fullName.vb: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.New(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  name.vb: New(RestAPITestFixture)
- uid: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsRequestCorrectly
  id: PerformsRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync
  langs:
  - csharp
  - vb
  name: PerformsRequestCorrectly()
  nameWithType: DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsRequestCorrectly()
  type: Method
  source:
    id: PerformsRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Polls\DiscordRestPollsAPITests.cs
    startLine: 60
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Polls
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsAfterRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsAfterRequestCorrectly
  id: PerformsAfterRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync
  langs:
  - csharp
  - vb
  name: PerformsAfterRequestCorrectly()
  nameWithType: DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsAfterRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsAfterRequestCorrectly()
  type: Method
  source:
    id: PerformsAfterRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Polls\DiscordRestPollsAPITests.cs
    startLine: 83
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Polls
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsAfterRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsAfterRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsAfterRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsLimitRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsLimitRequestCorrectly
  id: PerformsLimitRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync
  langs:
  - csharp
  - vb
  name: PerformsLimitRequestCorrectly()
  nameWithType: DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsLimitRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsLimitRequestCorrectly()
  type: Method
  source:
    id: PerformsLimitRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Polls\DiscordRestPollsAPITests.cs
    startLine: 113
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Polls
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsLimitRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsLimitRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsLimitRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.ReturnsErrorIfLimitIsOutsideValidRange
  commentId: M:Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.ReturnsErrorIfLimitIsOutsideValidRange
  id: ReturnsErrorIfLimitIsOutsideValidRange
  parent: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync
  langs:
  - csharp
  - vb
  name: ReturnsErrorIfLimitIsOutsideValidRange()
  nameWithType: DiscordRestPollsAPITests.GetAnswerVotersAsync.ReturnsErrorIfLimitIsOutsideValidRange()
  fullName: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.ReturnsErrorIfLimitIsOutsideValidRange()
  type: Method
  source:
    id: ReturnsErrorIfLimitIsOutsideValidRange
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Polls\DiscordRestPollsAPITests.cs
    startLine: 143
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Polls
  summary: Tests whether the API endpoint is correctly limited.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task ReturnsErrorIfLimitIsOutsideValidRange()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function ReturnsErrorIfLimitIsOutsideValidRange() As Task
  overload: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.ReturnsErrorIfLimitIsOutsideValidRange*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: Remora.Discord.Rest.API.DiscordRestPollAPI.GetAnswerVotersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Int32,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestPollAPI.GetAnswerVotersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Int32,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetAnswerVotersAsync(Snowflake, Snowflake, int, Optional<Snowflake>, Optional<int>, CancellationToken)
  nameWithType: DiscordRestPollAPI.GetAnswerVotersAsync(Snowflake, Snowflake, int, Optional<Snowflake>, Optional<int>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestPollAPI.GetAnswerVotersAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, int, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<int>, System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestPollAPI.GetAnswerVotersAsync(Snowflake, Snowflake, Integer, Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestPollAPI.GetAnswerVotersAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Integer, Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Integer), System.Threading.CancellationToken)
  name.vb: GetAnswerVotersAsync(Snowflake, Snowflake, Integer, Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Rest.API.DiscordRestPollAPI.GetAnswerVotersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Int32,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
    name: GetAnswerVotersAsync
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.API.DiscordRestPollAPI.GetAnswerVotersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Int32,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
    name: GetAnswerVotersAsync
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.Tests.API.Polls
  commentId: N:Remora.Discord.Rest.Tests.API.Polls
  href: Remora.html
  name: Remora.Discord.Rest.Tests.API.Polls
  nameWithType: Remora.Discord.Rest.Tests.API.Polls
  fullName: Remora.Discord.Rest.Tests.API.Polls
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API
    name: API
    href: Remora.Discord.Rest.Tests.API.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Polls
    name: Polls
    href: Remora.Discord.Rest.Tests.API.Polls.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API
    name: API
    href: Remora.Discord.Rest.Tests.API.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Polls
    name: Polls
    href: Remora.Discord.Rest.Tests.API.Polls.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI}
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI}
  parent: Remora.Discord.Rest.Tests.TestBases
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  name: RestAPITestBase<IDiscordRestPollAPI>
  nameWithType: RestAPITestBase<IDiscordRestPollAPI>
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI>
  nameWithType.vb: RestAPITestBase(Of IDiscordRestPollAPI)
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI)
  name.vb: RestAPITestBase(Of IDiscordRestPollAPI)
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI
    name: IDiscordRestPollAPI
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI
    name: IDiscordRestPollAPI
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  parent: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI}
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateAPI(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<IDiscordRestPollAPI>.CreateAPI(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI>.CreateAPI(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of IDiscordRestPollAPI).CreateAPI(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI).CreateAPI(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateAPI(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  parent: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI}
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<IDiscordRestPollAPI>.CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI>.CreateConfiguredAPIServices(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of IDiscordRestPollAPI).CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI).CreateConfiguredAPIServices(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  name: RestAPITestBase<TAPI>
  nameWithType: RestAPITestBase<TAPI>
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>
  nameWithType.vb: RestAPITestBase(Of TAPI)
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI)
  name.vb: RestAPITestBase(Of TAPI)
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: <
  - name: TAPI
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TAPI
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases
  commentId: N:Remora.Discord.Rest.Tests.TestBases
  href: Remora.html
  name: Remora.Discord.Rest.Tests.TestBases
  nameWithType: Remora.Discord.Rest.Tests.TestBases
  fullName: Remora.Discord.Rest.Tests.TestBases
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.TestBases
    name: TestBases
    href: Remora.Discord.Rest.Tests.TestBases.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.TestBases
    name: TestBases
    href: Remora.Discord.Rest.Tests.TestBases.html
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  isExternal: true
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateAPI(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<TAPI>.CreateAPI(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>.CreateAPI(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of TAPI).CreateAPI(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI).CreateAPI(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateAPI(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  isExternal: true
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<TAPI>.CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>.CreateConfiguredAPIServices(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of TAPI).CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI).CreateConfiguredAPIServices(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync
  commentId: T:Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync
  href: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.html
  name: DiscordRestPollsAPITests.GetAnswerVotersAsync
  nameWithType: DiscordRestPollsAPITests.GetAnswerVotersAsync
  fullName: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests
    name: DiscordRestPollsAPITests
    href: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync
    name: GetAnswerVotersAsync
    href: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.html
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests
    name: DiscordRestPollsAPITests
    href: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync
    name: GetAnswerVotersAsync
    href: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.html
- uid: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.#ctor*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.#ctor
  href: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.html#Remora_Discord_Rest_Tests_API_Polls_DiscordRestPollsAPITests_GetAnswerVotersAsync__ctor_Remora_Discord_Rest_Tests_TestBases_RestAPITestFixture_
  name: GetAnswerVotersAsync
  nameWithType: DiscordRestPollsAPITests.GetAnswerVotersAsync.GetAnswerVotersAsync
  fullName: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.GetAnswerVotersAsync
  nameWithType.vb: DiscordRestPollsAPITests.GetAnswerVotersAsync.New
  fullName.vb: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.New
  name.vb: New
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
  parent: Remora.Discord.Rest.Tests.TestBases
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture.html
  name: RestAPITestFixture
  nameWithType: RestAPITestFixture
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.html#Remora_Discord_Rest_Tests_API_Polls_DiscordRestPollsAPITests_GetAnswerVotersAsync_PerformsRequestCorrectly
  name: PerformsRequestCorrectly
  nameWithType: DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsRequestCorrectly
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsAfterRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsAfterRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.html#Remora_Discord_Rest_Tests_API_Polls_DiscordRestPollsAPITests_GetAnswerVotersAsync_PerformsAfterRequestCorrectly
  name: PerformsAfterRequestCorrectly
  nameWithType: DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsAfterRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsAfterRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsLimitRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsLimitRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.html#Remora_Discord_Rest_Tests_API_Polls_DiscordRestPollsAPITests_GetAnswerVotersAsync_PerformsLimitRequestCorrectly
  name: PerformsLimitRequestCorrectly
  nameWithType: DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsLimitRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.PerformsLimitRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.ReturnsErrorIfLimitIsOutsideValidRange*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.ReturnsErrorIfLimitIsOutsideValidRange
  href: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.html#Remora_Discord_Rest_Tests_API_Polls_DiscordRestPollsAPITests_GetAnswerVotersAsync_ReturnsErrorIfLimitIsOutsideValidRange
  name: ReturnsErrorIfLimitIsOutsideValidRange
  nameWithType: DiscordRestPollsAPITests.GetAnswerVotersAsync.ReturnsErrorIfLimitIsOutsideValidRange
  fullName: Remora.Discord.Rest.Tests.API.Polls.DiscordRestPollsAPITests.GetAnswerVotersAsync.ReturnsErrorIfLimitIsOutsideValidRange
