### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  commentId: T:Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  id: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  parent: Remora.Discord.Rest.Tests.API.Applications
  children:
  - Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  - Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.PerformsRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooLong
  - Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooShort
  - Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooLong
  - Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooShort
  langs:
  - csharp
  - vb
  name: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  nameWithType: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  fullName: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  type: Class
  source:
    id: EditGuildApplicationCommandAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Applications\DiscordRestApplicationAPITests.cs
    startLine: 1703
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Applications
  summary: Tests the <xref href="Remora.Discord.Rest.API.DiscordRestApplicationAPI.EditGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake%2cRemora.Rest.Core.Snowflake%2cRemora.Rest.Core.Snowflake%2cRemora.Rest.Core.Optional%7bSystem.String%7d%2cRemora.Rest.Core.Optional%7bSystem.String%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyList%7bRemora.Discord.API.Abstractions.Objects.IApplicationCommandOption%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyDictionary%7bSystem.String%2cSystem.String%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyDictionary%7bSystem.String%2cSystem.String%7d%7d%2cRemora.Rest.Core.Optional%7bRemora.Discord.API.Abstractions.Objects.IDiscordPermissionSet%7d%2cRemora.Rest.Core.Optional%7bSystem.Boolean%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyList%7bRemora.Discord.API.Abstractions.Objects.ApplicationIntegrationType%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyList%7bRemora.Discord.API.Abstractions.Objects.InteractionContextType%7d%7d%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: 'public class DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync : RestAPITestBase<IDiscordRestApplicationAPI>'
    content.vb: Public Class DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync Inherits RestAPITestBase(Of IDiscordRestApplicationAPI)
  inheritance:
  - System.Object
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI}
  inheritedMembers:
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  commentId: M:Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  id: '#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)'
  parent: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  langs:
  - csharp
  - vb
  name: EditGuildApplicationCommandAsync(RestAPITestFixture)
  nameWithType: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.EditGuildApplicationCommandAsync(RestAPITestFixture)
  fullName: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.EditGuildApplicationCommandAsync(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Applications\DiscordRestApplicationAPITests.cs
    startLine: 1709
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Applications
  summary: Initializes a new instance of the <xref href="Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public EditGuildApplicationCommandAsync(RestAPITestFixture fixture)
    parameters:
    - id: fixture
      type: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
      description: The test fixture.
    content.vb: Public Sub New(fixture As RestAPITestFixture)
  overload: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.#ctor*
  nameWithType.vb: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.New(RestAPITestFixture)
  fullName.vb: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.New(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  name.vb: New(RestAPITestFixture)
- uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.PerformsRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.PerformsRequestCorrectly
  id: PerformsRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  langs:
  - csharp
  - vb
  name: PerformsRequestCorrectly()
  nameWithType: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.PerformsRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.PerformsRequestCorrectly()
  type: Method
  source:
    id: PerformsRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Applications\DiscordRestApplicationAPITests.cs
    startLine: 1718
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Applications
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.PerformsRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooShort
  commentId: M:Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooShort
  id: ReturnsUnsuccessfulIfNameIsTooShort
  parent: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  langs:
  - csharp
  - vb
  name: ReturnsUnsuccessfulIfNameIsTooShort()
  nameWithType: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooShort()
  fullName: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooShort()
  type: Method
  source:
    id: ReturnsUnsuccessfulIfNameIsTooShort
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Applications\DiscordRestApplicationAPITests.cs
    startLine: 1770
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Applications
  summary: Tests whether the API method returns a client-side error if a failure condition is met.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task ReturnsUnsuccessfulIfNameIsTooShort()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function ReturnsUnsuccessfulIfNameIsTooShort() As Task
  overload: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooShort*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooLong
  commentId: M:Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooLong
  id: ReturnsUnsuccessfulIfNameIsTooLong
  parent: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  langs:
  - csharp
  - vb
  name: ReturnsUnsuccessfulIfNameIsTooLong()
  nameWithType: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooLong()
  fullName: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooLong()
  type: Method
  source:
    id: ReturnsUnsuccessfulIfNameIsTooLong
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Applications\DiscordRestApplicationAPITests.cs
    startLine: 1819
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Applications
  summary: Tests whether the API method returns a client-side error if a failure condition is met.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task ReturnsUnsuccessfulIfNameIsTooLong()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function ReturnsUnsuccessfulIfNameIsTooLong() As Task
  overload: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooLong*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooShort
  commentId: M:Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooShort
  id: ReturnsUnsuccessfulIfDescriptionIsTooShort
  parent: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  langs:
  - csharp
  - vb
  name: ReturnsUnsuccessfulIfDescriptionIsTooShort()
  nameWithType: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooShort()
  fullName: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooShort()
  type: Method
  source:
    id: ReturnsUnsuccessfulIfDescriptionIsTooShort
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Applications\DiscordRestApplicationAPITests.cs
    startLine: 1868
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Applications
  summary: Tests whether the API method returns a client-side error if a failure condition is met.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task ReturnsUnsuccessfulIfDescriptionIsTooShort()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function ReturnsUnsuccessfulIfDescriptionIsTooShort() As Task
  overload: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooShort*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooLong
  commentId: M:Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooLong
  id: ReturnsUnsuccessfulIfDescriptionIsTooLong
  parent: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  langs:
  - csharp
  - vb
  name: ReturnsUnsuccessfulIfDescriptionIsTooLong()
  nameWithType: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooLong()
  fullName: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooLong()
  type: Method
  source:
    id: ReturnsUnsuccessfulIfDescriptionIsTooLong
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Applications\DiscordRestApplicationAPITests.cs
    startLine: 1917
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Applications
  summary: Tests whether the API method returns a client-side error if a failure condition is met.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task ReturnsUnsuccessfulIfDescriptionIsTooLong()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function ReturnsUnsuccessfulIfDescriptionIsTooLong() As Task
  overload: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooLong*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: Remora.Discord.Rest.API.DiscordRestApplicationAPI.EditGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestApplicationAPI.EditGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: EditGuildApplicationCommandAsync(Snowflake, Snowflake, Snowflake, Optional<string>, Optional<string>, Optional<IReadOnlyList<IApplicationCommandOption>>, Optional<IReadOnlyDictionary<string, string>>, Optional<IReadOnlyDictionary<string, string>>, Optional<IDiscordPermissionSet>, Optional<bool>, Optional<IReadOnlyList<ApplicationIntegrationType>>, Optional<IReadOnlyList<InteractionContextType>>, CancellationToken)
  nameWithType: DiscordRestApplicationAPI.EditGuildApplicationCommandAsync(Snowflake, Snowflake, Snowflake, Optional<string>, Optional<string>, Optional<IReadOnlyList<IApplicationCommandOption>>, Optional<IReadOnlyDictionary<string, string>>, Optional<IReadOnlyDictionary<string, string>>, Optional<IDiscordPermissionSet>, Optional<bool>, Optional<IReadOnlyList<ApplicationIntegrationType>>, Optional<IReadOnlyList<InteractionContextType>>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestApplicationAPI.EditGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyDictionary<string, string>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyDictionary<string, string>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.InteractionContextType>>, System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestApplicationAPI.EditGuildApplicationCommandAsync(Snowflake, Snowflake, Snowflake, Optional(Of String), Optional(Of String), Optional(Of IReadOnlyList(Of IApplicationCommandOption)), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IDiscordPermissionSet), Optional(Of Boolean), Optional(Of IReadOnlyList(Of ApplicationIntegrationType)), Optional(Of IReadOnlyList(Of InteractionContextType)), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestApplicationAPI.EditGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyDictionary(Of String, String)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyDictionary(Of String, String)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.InteractionContextType)), System.Threading.CancellationToken)
  name.vb: EditGuildApplicationCommandAsync(Snowflake, Snowflake, Snowflake, Optional(Of String), Optional(Of String), Optional(Of IReadOnlyList(Of IApplicationCommandOption)), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IDiscordPermissionSet), Optional(Of Boolean), Optional(Of IReadOnlyList(Of ApplicationIntegrationType)), Optional(Of IReadOnlyList(Of InteractionContextType)), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Rest.API.DiscordRestApplicationAPI.EditGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
    name: EditGuildApplicationCommandAsync
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption
    name: IApplicationCommandOption
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType
    name: ApplicationIntegrationType
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.InteractionContextType
    name: InteractionContextType
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.API.DiscordRestApplicationAPI.EditGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
    name: EditGuildApplicationCommandAsync
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption
    name: IApplicationCommandOption
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType
    name: ApplicationIntegrationType
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.InteractionContextType
    name: InteractionContextType
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.Tests.API.Applications
  commentId: N:Remora.Discord.Rest.Tests.API.Applications
  href: Remora.html
  name: Remora.Discord.Rest.Tests.API.Applications
  nameWithType: Remora.Discord.Rest.Tests.API.Applications
  fullName: Remora.Discord.Rest.Tests.API.Applications
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API
    name: API
    href: Remora.Discord.Rest.Tests.API.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Applications
    name: Applications
    href: Remora.Discord.Rest.Tests.API.Applications.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API
    name: API
    href: Remora.Discord.Rest.Tests.API.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Applications
    name: Applications
    href: Remora.Discord.Rest.Tests.API.Applications.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI}
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI}
  parent: Remora.Discord.Rest.Tests.TestBases
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  name: RestAPITestBase<IDiscordRestApplicationAPI>
  nameWithType: RestAPITestBase<IDiscordRestApplicationAPI>
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI>
  nameWithType.vb: RestAPITestBase(Of IDiscordRestApplicationAPI)
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI)
  name.vb: RestAPITestBase(Of IDiscordRestApplicationAPI)
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
    name: IDiscordRestApplicationAPI
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
    name: IDiscordRestApplicationAPI
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  parent: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI}
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateAPI(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<IDiscordRestApplicationAPI>.CreateAPI(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI>.CreateAPI(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of IDiscordRestApplicationAPI).CreateAPI(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI).CreateAPI(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateAPI(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  parent: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI}
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<IDiscordRestApplicationAPI>.CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI>.CreateConfiguredAPIServices(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of IDiscordRestApplicationAPI).CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI).CreateConfiguredAPIServices(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  name: RestAPITestBase<TAPI>
  nameWithType: RestAPITestBase<TAPI>
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>
  nameWithType.vb: RestAPITestBase(Of TAPI)
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI)
  name.vb: RestAPITestBase(Of TAPI)
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: <
  - name: TAPI
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TAPI
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases
  commentId: N:Remora.Discord.Rest.Tests.TestBases
  href: Remora.html
  name: Remora.Discord.Rest.Tests.TestBases
  nameWithType: Remora.Discord.Rest.Tests.TestBases
  fullName: Remora.Discord.Rest.Tests.TestBases
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.TestBases
    name: TestBases
    href: Remora.Discord.Rest.Tests.TestBases.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.TestBases
    name: TestBases
    href: Remora.Discord.Rest.Tests.TestBases.html
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  isExternal: true
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateAPI(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<TAPI>.CreateAPI(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>.CreateAPI(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of TAPI).CreateAPI(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI).CreateAPI(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateAPI(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  isExternal: true
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<TAPI>.CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>.CreateConfiguredAPIServices(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of TAPI).CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI).CreateConfiguredAPIServices(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  commentId: T:Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  href: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.html
  name: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  nameWithType: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  fullName: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests
    name: DiscordRestApplicationAPITests
    href: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
    name: EditGuildApplicationCommandAsync
    href: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.html
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests
    name: DiscordRestApplicationAPITests
    href: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync
    name: EditGuildApplicationCommandAsync
    href: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.html
- uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.#ctor*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.#ctor
  href: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.html#Remora_Discord_Rest_Tests_API_Applications_DiscordRestApplicationAPITests_EditGuildApplicationCommandAsync__ctor_Remora_Discord_Rest_Tests_TestBases_RestAPITestFixture_
  name: EditGuildApplicationCommandAsync
  nameWithType: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.EditGuildApplicationCommandAsync
  fullName: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.EditGuildApplicationCommandAsync
  nameWithType.vb: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.New
  fullName.vb: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.New
  name.vb: New
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
  parent: Remora.Discord.Rest.Tests.TestBases
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture.html
  name: RestAPITestFixture
  nameWithType: RestAPITestFixture
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.PerformsRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.PerformsRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.html#Remora_Discord_Rest_Tests_API_Applications_DiscordRestApplicationAPITests_EditGuildApplicationCommandAsync_PerformsRequestCorrectly
  name: PerformsRequestCorrectly
  nameWithType: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.PerformsRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.PerformsRequestCorrectly
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooShort*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooShort
  href: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.html#Remora_Discord_Rest_Tests_API_Applications_DiscordRestApplicationAPITests_EditGuildApplicationCommandAsync_ReturnsUnsuccessfulIfNameIsTooShort
  name: ReturnsUnsuccessfulIfNameIsTooShort
  nameWithType: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooShort
  fullName: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooShort
- uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooLong*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooLong
  href: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.html#Remora_Discord_Rest_Tests_API_Applications_DiscordRestApplicationAPITests_EditGuildApplicationCommandAsync_ReturnsUnsuccessfulIfNameIsTooLong
  name: ReturnsUnsuccessfulIfNameIsTooLong
  nameWithType: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooLong
  fullName: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfNameIsTooLong
- uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooShort*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooShort
  href: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.html#Remora_Discord_Rest_Tests_API_Applications_DiscordRestApplicationAPITests_EditGuildApplicationCommandAsync_ReturnsUnsuccessfulIfDescriptionIsTooShort
  name: ReturnsUnsuccessfulIfDescriptionIsTooShort
  nameWithType: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooShort
  fullName: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooShort
- uid: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooLong*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooLong
  href: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.html#Remora_Discord_Rest_Tests_API_Applications_DiscordRestApplicationAPITests_EditGuildApplicationCommandAsync_ReturnsUnsuccessfulIfDescriptionIsTooLong
  name: ReturnsUnsuccessfulIfDescriptionIsTooLong
  nameWithType: DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooLong
  fullName: Remora.Discord.Rest.Tests.API.Applications.DiscordRestApplicationAPITests.EditGuildApplicationCommandAsync.ReturnsUnsuccessfulIfDescriptionIsTooLong
