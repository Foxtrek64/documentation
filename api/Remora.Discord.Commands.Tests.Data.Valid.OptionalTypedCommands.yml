### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  commentId: T:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  id: OptionalTypedCommands
  parent: Remora.Discord.Commands.Tests.Data.Valid
  children:
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalBoolValue(Remora.Rest.Core.Optional{System.Boolean})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalByteValue(Remora.Rest.Core.Optional{System.Byte})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalChannelValue(Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IChannel})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDecimalValue(Remora.Rest.Core.Optional{System.Decimal})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDoubleValue(Remora.Rest.Core.Optional{System.Double})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalEnumValue(Remora.Rest.Core.Optional{Remora.Discord.Commands.Tests.Data.Valid.DummyEnum})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalFloatValue(Remora.Rest.Core.Optional{System.Single})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalIntValue(Remora.Rest.Core.Optional{System.Int32})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalLongValue(Remora.Rest.Core.Optional{System.Int64})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalMemberValue(Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IGuildMember})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalRoleValue(Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IRole})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSByteValue(Remora.Rest.Core.Optional{System.SByte})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalShortValue(Remora.Rest.Core.Optional{System.Int16})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSnowflakeValue(Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalStringValue(Remora.Rest.Core.Optional{System.String})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUIntValue(Remora.Rest.Core.Optional{System.UInt32})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalULongValue(Remora.Rest.Core.Optional{System.UInt64})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUShortValue(Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUserValue(Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IUser})
  langs:
  - csharp
  - vb
  name: OptionalTypedCommands
  nameWithType: OptionalTypedCommands
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  type: Class
  source:
    id: OptionalTypedCommands
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 34
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: 'public class OptionalTypedCommands : CommandGroup'
    content.vb: Public Class OptionalTypedCommands Inherits CommandGroup
  inheritance:
  - System.Object
  - Remora.Commands.Groups.CommandGroup
  inheritedMembers:
  - Remora.Commands.Groups.CommandGroup.CancellationToken
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSByteValue(Remora.Rest.Core.Optional{System.SByte})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSByteValue(Remora.Rest.Core.Optional{System.SByte})
  id: CommandWithOptionalSByteValue(Remora.Rest.Core.Optional{System.SByte})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalSByteValue(Optional<sbyte>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalSByteValue(Optional<sbyte>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSByteValue(Remora.Rest.Core.Optional<sbyte>)
  type: Method
  source:
    id: CommandWithOptionalSByteValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 36
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-sbyte-value", new string[] { })]

      public Task<IResult> CommandWithOptionalSByteValue(Optional<sbyte> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{System.SByte}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-sbyte-value", New String() { })>

      Public Function CommandWithOptionalSByteValue(value As [Optional](Of SByte) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSByteValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalSByteValue(Optional(Of SByte))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSByteValue(Remora.Rest.Core.Optional(Of SByte))
  name.vb: CommandWithOptionalSByteValue(Optional(Of SByte))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalByteValue(Remora.Rest.Core.Optional{System.Byte})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalByteValue(Remora.Rest.Core.Optional{System.Byte})
  id: CommandWithOptionalByteValue(Remora.Rest.Core.Optional{System.Byte})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalByteValue(Optional<byte>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalByteValue(Optional<byte>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalByteValue(Remora.Rest.Core.Optional<byte>)
  type: Method
  source:
    id: CommandWithOptionalByteValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 42
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-byte-value", new string[] { })]

      public Task<IResult> CommandWithOptionalByteValue(Optional<byte> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{System.Byte}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-byte-value", New String() { })>

      Public Function CommandWithOptionalByteValue(value As [Optional](Of Byte) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalByteValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalByteValue(Optional(Of Byte))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalByteValue(Remora.Rest.Core.Optional(Of Byte))
  name.vb: CommandWithOptionalByteValue(Optional(Of Byte))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalShortValue(Remora.Rest.Core.Optional{System.Int16})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalShortValue(Remora.Rest.Core.Optional{System.Int16})
  id: CommandWithOptionalShortValue(Remora.Rest.Core.Optional{System.Int16})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalShortValue(Optional<short>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalShortValue(Optional<short>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalShortValue(Remora.Rest.Core.Optional<short>)
  type: Method
  source:
    id: CommandWithOptionalShortValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 48
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-short-value", new string[] { })]

      public Task<IResult> CommandWithOptionalShortValue(Optional<short> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{System.Int16}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-short-value", New String() { })>

      Public Function CommandWithOptionalShortValue(value As [Optional](Of Short) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalShortValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalShortValue(Optional(Of Short))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalShortValue(Remora.Rest.Core.Optional(Of Short))
  name.vb: CommandWithOptionalShortValue(Optional(Of Short))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUShortValue(Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUShortValue(Remora.Rest.Core.Optional{System.UInt16})
  id: CommandWithOptionalUShortValue(Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalUShortValue(Optional<ushort>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalUShortValue(Optional<ushort>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUShortValue(Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: CommandWithOptionalUShortValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 54
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-ushort-value", new string[] { })]

      public Task<IResult> CommandWithOptionalUShortValue(Optional<ushort> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{System.UInt16}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-ushort-value", New String() { })>

      Public Function CommandWithOptionalUShortValue(value As [Optional](Of UShort) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUShortValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalUShortValue(Optional(Of UShort))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUShortValue(Remora.Rest.Core.Optional(Of UShort))
  name.vb: CommandWithOptionalUShortValue(Optional(Of UShort))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalIntValue(Remora.Rest.Core.Optional{System.Int32})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalIntValue(Remora.Rest.Core.Optional{System.Int32})
  id: CommandWithOptionalIntValue(Remora.Rest.Core.Optional{System.Int32})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalIntValue(Optional<int>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalIntValue(Optional<int>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalIntValue(Remora.Rest.Core.Optional<int>)
  type: Method
  source:
    id: CommandWithOptionalIntValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 60
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-int-value", new string[] { })]

      public Task<IResult> CommandWithOptionalIntValue(Optional<int> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{System.Int32}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-int-value", New String() { })>

      Public Function CommandWithOptionalIntValue(value As [Optional](Of Integer) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalIntValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalIntValue(Optional(Of Integer))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalIntValue(Remora.Rest.Core.Optional(Of Integer))
  name.vb: CommandWithOptionalIntValue(Optional(Of Integer))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUIntValue(Remora.Rest.Core.Optional{System.UInt32})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUIntValue(Remora.Rest.Core.Optional{System.UInt32})
  id: CommandWithOptionalUIntValue(Remora.Rest.Core.Optional{System.UInt32})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalUIntValue(Optional<uint>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalUIntValue(Optional<uint>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUIntValue(Remora.Rest.Core.Optional<uint>)
  type: Method
  source:
    id: CommandWithOptionalUIntValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 66
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-uint-value", new string[] { })]

      public Task<IResult> CommandWithOptionalUIntValue(Optional<uint> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{System.UInt32}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-uint-value", New String() { })>

      Public Function CommandWithOptionalUIntValue(value As [Optional](Of UInteger) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUIntValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalUIntValue(Optional(Of UInteger))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUIntValue(Remora.Rest.Core.Optional(Of UInteger))
  name.vb: CommandWithOptionalUIntValue(Optional(Of UInteger))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalLongValue(Remora.Rest.Core.Optional{System.Int64})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalLongValue(Remora.Rest.Core.Optional{System.Int64})
  id: CommandWithOptionalLongValue(Remora.Rest.Core.Optional{System.Int64})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalLongValue(Optional<long>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalLongValue(Optional<long>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalLongValue(Remora.Rest.Core.Optional<long>)
  type: Method
  source:
    id: CommandWithOptionalLongValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 72
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-long-value", new string[] { })]

      public Task<IResult> CommandWithOptionalLongValue(Optional<long> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{System.Int64}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-long-value", New String() { })>

      Public Function CommandWithOptionalLongValue(value As [Optional](Of Long) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalLongValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalLongValue(Optional(Of Long))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalLongValue(Remora.Rest.Core.Optional(Of Long))
  name.vb: CommandWithOptionalLongValue(Optional(Of Long))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalULongValue(Remora.Rest.Core.Optional{System.UInt64})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalULongValue(Remora.Rest.Core.Optional{System.UInt64})
  id: CommandWithOptionalULongValue(Remora.Rest.Core.Optional{System.UInt64})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalULongValue(Optional<ulong>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalULongValue(Optional<ulong>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalULongValue(Remora.Rest.Core.Optional<ulong>)
  type: Method
  source:
    id: CommandWithOptionalULongValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 78
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-ulong-value", new string[] { })]

      public Task<IResult> CommandWithOptionalULongValue(Optional<ulong> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{System.UInt64}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-ulong-value", New String() { })>

      Public Function CommandWithOptionalULongValue(value As [Optional](Of ULong) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalULongValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalULongValue(Optional(Of ULong))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalULongValue(Remora.Rest.Core.Optional(Of ULong))
  name.vb: CommandWithOptionalULongValue(Optional(Of ULong))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalFloatValue(Remora.Rest.Core.Optional{System.Single})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalFloatValue(Remora.Rest.Core.Optional{System.Single})
  id: CommandWithOptionalFloatValue(Remora.Rest.Core.Optional{System.Single})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalFloatValue(Optional<float>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalFloatValue(Optional<float>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalFloatValue(Remora.Rest.Core.Optional<float>)
  type: Method
  source:
    id: CommandWithOptionalFloatValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 84
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-float-value", new string[] { })]

      public Task<IResult> CommandWithOptionalFloatValue(Optional<float> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{System.Single}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-float-value", New String() { })>

      Public Function CommandWithOptionalFloatValue(value As [Optional](Of Single) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalFloatValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalFloatValue(Optional(Of Single))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalFloatValue(Remora.Rest.Core.Optional(Of Single))
  name.vb: CommandWithOptionalFloatValue(Optional(Of Single))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDoubleValue(Remora.Rest.Core.Optional{System.Double})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDoubleValue(Remora.Rest.Core.Optional{System.Double})
  id: CommandWithOptionalDoubleValue(Remora.Rest.Core.Optional{System.Double})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalDoubleValue(Optional<double>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalDoubleValue(Optional<double>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDoubleValue(Remora.Rest.Core.Optional<double>)
  type: Method
  source:
    id: CommandWithOptionalDoubleValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 90
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-double-value", new string[] { })]

      public Task<IResult> CommandWithOptionalDoubleValue(Optional<double> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{System.Double}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-double-value", New String() { })>

      Public Function CommandWithOptionalDoubleValue(value As [Optional](Of Double) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDoubleValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalDoubleValue(Optional(Of Double))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDoubleValue(Remora.Rest.Core.Optional(Of Double))
  name.vb: CommandWithOptionalDoubleValue(Optional(Of Double))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDecimalValue(Remora.Rest.Core.Optional{System.Decimal})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDecimalValue(Remora.Rest.Core.Optional{System.Decimal})
  id: CommandWithOptionalDecimalValue(Remora.Rest.Core.Optional{System.Decimal})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalDecimalValue(Optional<decimal>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalDecimalValue(Optional<decimal>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDecimalValue(Remora.Rest.Core.Optional<decimal>)
  type: Method
  source:
    id: CommandWithOptionalDecimalValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 96
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-decimal-value", new string[] { })]

      public Task<IResult> CommandWithOptionalDecimalValue(Optional<decimal> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{System.Decimal}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-decimal-value", New String() { })>

      Public Function CommandWithOptionalDecimalValue(value As [Optional](Of Decimal) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDecimalValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalDecimalValue(Optional(Of Decimal))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDecimalValue(Remora.Rest.Core.Optional(Of Decimal))
  name.vb: CommandWithOptionalDecimalValue(Optional(Of Decimal))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalStringValue(Remora.Rest.Core.Optional{System.String})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalStringValue(Remora.Rest.Core.Optional{System.String})
  id: CommandWithOptionalStringValue(Remora.Rest.Core.Optional{System.String})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalStringValue(Optional<string>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalStringValue(Optional<string>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalStringValue(Remora.Rest.Core.Optional<string>)
  type: Method
  source:
    id: CommandWithOptionalStringValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 102
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-string-value", new string[] { })]

      public Task<IResult> CommandWithOptionalStringValue(Optional<string> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{System.String}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-string-value", New String() { })>

      Public Function CommandWithOptionalStringValue(value As [Optional](Of String) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalStringValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalStringValue(Optional(Of String))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalStringValue(Remora.Rest.Core.Optional(Of String))
  name.vb: CommandWithOptionalStringValue(Optional(Of String))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalBoolValue(Remora.Rest.Core.Optional{System.Boolean})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalBoolValue(Remora.Rest.Core.Optional{System.Boolean})
  id: CommandWithOptionalBoolValue(Remora.Rest.Core.Optional{System.Boolean})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalBoolValue(Optional<bool>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalBoolValue(Optional<bool>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalBoolValue(Remora.Rest.Core.Optional<bool>)
  type: Method
  source:
    id: CommandWithOptionalBoolValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 108
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-bool-value", new string[] { })]

      public Task<IResult> CommandWithOptionalBoolValue(Optional<bool> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{System.Boolean}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-bool-value", New String() { })>

      Public Function CommandWithOptionalBoolValue(value As [Optional](Of Boolean) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalBoolValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalBoolValue(Optional(Of Boolean))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalBoolValue(Remora.Rest.Core.Optional(Of Boolean))
  name.vb: CommandWithOptionalBoolValue(Optional(Of Boolean))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalEnumValue(Remora.Rest.Core.Optional{Remora.Discord.Commands.Tests.Data.Valid.DummyEnum})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalEnumValue(Remora.Rest.Core.Optional{Remora.Discord.Commands.Tests.Data.Valid.DummyEnum})
  id: CommandWithOptionalEnumValue(Remora.Rest.Core.Optional{Remora.Discord.Commands.Tests.Data.Valid.DummyEnum})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalEnumValue(Optional<DummyEnum>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalEnumValue(Optional<DummyEnum>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalEnumValue(Remora.Rest.Core.Optional<Remora.Discord.Commands.Tests.Data.Valid.DummyEnum>)
  type: Method
  source:
    id: CommandWithOptionalEnumValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 114
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-enum-value", new string[] { })]

      public Task<IResult> CommandWithOptionalEnumValue(Optional<DummyEnum> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{Remora.Discord.Commands.Tests.Data.Valid.DummyEnum}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-enum-value", New String() { })>

      Public Function CommandWithOptionalEnumValue(value As [Optional](Of DummyEnum) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalEnumValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalEnumValue(Optional(Of DummyEnum))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalEnumValue(Remora.Rest.Core.Optional(Of Remora.Discord.Commands.Tests.Data.Valid.DummyEnum))
  name.vb: CommandWithOptionalEnumValue(Optional(Of DummyEnum))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalRoleValue(Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IRole})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalRoleValue(Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IRole})
  id: CommandWithOptionalRoleValue(Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IRole})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalRoleValue(Optional<IRole>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalRoleValue(Optional<IRole>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalRoleValue(Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IRole>)
  type: Method
  source:
    id: CommandWithOptionalRoleValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 120
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-role-value", new string[] { })]

      public Task<IResult> CommandWithOptionalRoleValue(Optional<IRole> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IRole}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-role-value", New String() { })>

      Public Function CommandWithOptionalRoleValue(value As [Optional](Of IRole) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalRoleValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalRoleValue(Optional(Of IRole))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalRoleValue(Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IRole))
  name.vb: CommandWithOptionalRoleValue(Optional(Of IRole))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUserValue(Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IUser})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUserValue(Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IUser})
  id: CommandWithOptionalUserValue(Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IUser})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalUserValue(Optional<IUser>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalUserValue(Optional<IUser>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUserValue(Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IUser>)
  type: Method
  source:
    id: CommandWithOptionalUserValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 126
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-user-value", new string[] { })]

      public Task<IResult> CommandWithOptionalUserValue(Optional<IUser> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IUser}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-user-value", New String() { })>

      Public Function CommandWithOptionalUserValue(value As [Optional](Of IUser) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUserValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalUserValue(Optional(Of IUser))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUserValue(Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IUser))
  name.vb: CommandWithOptionalUserValue(Optional(Of IUser))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalMemberValue(Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IGuildMember})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalMemberValue(Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IGuildMember})
  id: CommandWithOptionalMemberValue(Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IGuildMember})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalMemberValue(Optional<IGuildMember>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalMemberValue(Optional<IGuildMember>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalMemberValue(Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IGuildMember>)
  type: Method
  source:
    id: CommandWithOptionalMemberValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 132
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-member-value", new string[] { })]

      public Task<IResult> CommandWithOptionalMemberValue(Optional<IGuildMember> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IGuildMember}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-member-value", New String() { })>

      Public Function CommandWithOptionalMemberValue(value As [Optional](Of IGuildMember) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalMemberValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalMemberValue(Optional(Of IGuildMember))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalMemberValue(Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IGuildMember))
  name.vb: CommandWithOptionalMemberValue(Optional(Of IGuildMember))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalChannelValue(Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IChannel})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalChannelValue(Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IChannel})
  id: CommandWithOptionalChannelValue(Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IChannel})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalChannelValue(Optional<IChannel>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalChannelValue(Optional<IChannel>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalChannelValue(Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IChannel>)
  type: Method
  source:
    id: CommandWithOptionalChannelValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 138
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-channel-value", new string[] { })]

      public Task<IResult> CommandWithOptionalChannelValue(Optional<IChannel> value = default)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IChannel}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-channel-value", New String() { })>

      Public Function CommandWithOptionalChannelValue(value As [Optional](Of IChannel) = Nothing) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalChannelValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalChannelValue(Optional(Of IChannel))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalChannelValue(Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IChannel))
  name.vb: CommandWithOptionalChannelValue(Optional(Of IChannel))
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSnowflakeValue(Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake})
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSnowflakeValue(Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake})
  id: CommandWithOptionalSnowflakeValue(Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake})
  parent: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithOptionalSnowflakeValue(Optional<Snowflake>)
  nameWithType: OptionalTypedCommands.CommandWithOptionalSnowflakeValue(Optional<Snowflake>)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSnowflakeValue(Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>)
  type: Method
  source:
    id: CommandWithOptionalSnowflakeValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\OptionalTypedCommands.cs
    startLine: 144
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("optional-snowflake-value", new string[] { })]

      public Task<IResult> CommandWithOptionalSnowflakeValue(Optional<Snowflake> value)
    parameters:
    - id: value
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("optional-snowflake-value", New String() { })>

      Public Function CommandWithOptionalSnowflakeValue(value As [Optional](Of Snowflake)) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSnowflakeValue*
  nameWithType.vb: OptionalTypedCommands.CommandWithOptionalSnowflakeValue(Optional(Of Snowflake))
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSnowflakeValue(Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake))
  name.vb: CommandWithOptionalSnowflakeValue(Optional(Of Snowflake))
references:
- uid: Remora.Discord.Commands.Tests.Data.Valid
  commentId: N:Remora.Discord.Commands.Tests.Data.Valid
  href: Remora.html
  name: Remora.Discord.Commands.Tests.Data.Valid
  nameWithType: Remora.Discord.Commands.Tests.Data.Valid
  fullName: Remora.Discord.Commands.Tests.Data.Valid
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Data
    name: Data
    href: Remora.Discord.Commands.Tests.Data.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Data.Valid
    name: Valid
    href: Remora.Discord.Commands.Tests.Data.Valid.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Data
    name: Data
    href: Remora.Discord.Commands.Tests.Data.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Data.Valid
    name: Valid
    href: Remora.Discord.Commands.Tests.Data.Valid.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Commands.Groups.CommandGroup
  commentId: T:Remora.Commands.Groups.CommandGroup
  parent: Remora.Commands.Groups
  isExternal: true
  name: CommandGroup
  nameWithType: CommandGroup
  fullName: Remora.Commands.Groups.CommandGroup
- uid: Remora.Commands.Groups.CommandGroup.CancellationToken
  commentId: P:Remora.Commands.Groups.CommandGroup.CancellationToken
  parent: Remora.Commands.Groups.CommandGroup
  isExternal: true
  name: CancellationToken
  nameWithType: CommandGroup.CancellationToken
  fullName: Remora.Commands.Groups.CommandGroup.CancellationToken
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Commands.Groups
  commentId: N:Remora.Commands.Groups
  isExternal: true
  name: Remora.Commands.Groups
  nameWithType: Remora.Commands.Groups
  fullName: Remora.Commands.Groups
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Commands
    name: Commands
    isExternal: true
  - name: .
  - uid: Remora.Commands.Groups
    name: Groups
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Commands
    name: Commands
    isExternal: true
  - name: .
  - uid: Remora.Commands.Groups
    name: Groups
    isExternal: true
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSByteValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSByteValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalSByteValue_Remora_Rest_Core_Optional_System_SByte__
  name: CommandWithOptionalSByteValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalSByteValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSByteValue
- uid: Remora.Rest.Core.Optional{System.SByte}
  commentId: T:Remora.Rest.Core.Optional{System.SByte}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.sbyte
  name: Optional<sbyte>
  nameWithType: Optional<sbyte>
  fullName: Remora.Rest.Core.Optional<sbyte>
  nameWithType.vb: Optional(Of SByte)
  fullName.vb: Remora.Rest.Core.Optional(Of SByte)
  name.vb: Optional(Of SByte)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.SByte
    name: sbyte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.sbyte
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.SByte
    name: SByte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.sbyte
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.IResult}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.IResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IResult>
  nameWithType: Task<IResult>
  fullName: System.Threading.Tasks.Task<Remora.Results.IResult>
  nameWithType.vb: Task(Of IResult)
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.IResult)
  name.vb: Task(Of IResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.IResult
    name: IResult
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.IResult
    name: IResult
    isExternal: true
  - name: )
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalByteValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalByteValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalByteValue_Remora_Rest_Core_Optional_System_Byte__
  name: CommandWithOptionalByteValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalByteValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalByteValue
- uid: Remora.Rest.Core.Optional{System.Byte}
  commentId: T:Remora.Rest.Core.Optional{System.Byte}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: Optional<byte>
  nameWithType: Optional<byte>
  fullName: Remora.Rest.Core.Optional<byte>
  nameWithType.vb: Optional(Of Byte)
  fullName.vb: Remora.Rest.Core.Optional(Of Byte)
  name.vb: Optional(Of Byte)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalShortValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalShortValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalShortValue_Remora_Rest_Core_Optional_System_Int16__
  name: CommandWithOptionalShortValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalShortValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalShortValue
- uid: Remora.Rest.Core.Optional{System.Int16}
  commentId: T:Remora.Rest.Core.Optional{System.Int16}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: Optional<short>
  nameWithType: Optional<short>
  fullName: Remora.Rest.Core.Optional<short>
  nameWithType.vb: Optional(Of Short)
  fullName.vb: Remora.Rest.Core.Optional(Of Short)
  name.vb: Optional(Of Short)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int16
    name: short
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int16
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int16
    name: Short
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int16
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUShortValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUShortValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalUShortValue_Remora_Rest_Core_Optional_System_UInt16__
  name: CommandWithOptionalUShortValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalUShortValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUShortValue
- uid: Remora.Rest.Core.Optional{System.UInt16}
  commentId: T:Remora.Rest.Core.Optional{System.UInt16}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: Optional<ushort>
  nameWithType: Optional<ushort>
  fullName: Remora.Rest.Core.Optional<ushort>
  nameWithType.vb: Optional(Of UShort)
  fullName.vb: Remora.Rest.Core.Optional(Of UShort)
  name.vb: Optional(Of UShort)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.UInt16
    name: ushort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt16
    name: UShort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalIntValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalIntValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalIntValue_Remora_Rest_Core_Optional_System_Int32__
  name: CommandWithOptionalIntValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalIntValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalIntValue
- uid: Remora.Rest.Core.Optional{System.Int32}
  commentId: T:Remora.Rest.Core.Optional{System.Int32}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Optional<int>
  nameWithType: Optional<int>
  fullName: Remora.Rest.Core.Optional<int>
  nameWithType.vb: Optional(Of Integer)
  fullName.vb: Remora.Rest.Core.Optional(Of Integer)
  name.vb: Optional(Of Integer)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUIntValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUIntValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalUIntValue_Remora_Rest_Core_Optional_System_UInt32__
  name: CommandWithOptionalUIntValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalUIntValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUIntValue
- uid: Remora.Rest.Core.Optional{System.UInt32}
  commentId: T:Remora.Rest.Core.Optional{System.UInt32}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: Optional<uint>
  nameWithType: Optional<uint>
  fullName: Remora.Rest.Core.Optional<uint>
  nameWithType.vb: Optional(Of UInteger)
  fullName.vb: Remora.Rest.Core.Optional(Of UInteger)
  name.vb: Optional(Of UInteger)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalLongValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalLongValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalLongValue_Remora_Rest_Core_Optional_System_Int64__
  name: CommandWithOptionalLongValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalLongValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalLongValue
- uid: Remora.Rest.Core.Optional{System.Int64}
  commentId: T:Remora.Rest.Core.Optional{System.Int64}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: Optional<long>
  nameWithType: Optional<long>
  fullName: Remora.Rest.Core.Optional<long>
  nameWithType.vb: Optional(Of Long)
  fullName.vb: Remora.Rest.Core.Optional(Of Long)
  name.vb: Optional(Of Long)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalULongValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalULongValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalULongValue_Remora_Rest_Core_Optional_System_UInt64__
  name: CommandWithOptionalULongValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalULongValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalULongValue
- uid: Remora.Rest.Core.Optional{System.UInt64}
  commentId: T:Remora.Rest.Core.Optional{System.UInt64}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: Optional<ulong>
  nameWithType: Optional<ulong>
  fullName: Remora.Rest.Core.Optional<ulong>
  nameWithType.vb: Optional(Of ULong)
  fullName.vb: Remora.Rest.Core.Optional(Of ULong)
  name.vb: Optional(Of ULong)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalFloatValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalFloatValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalFloatValue_Remora_Rest_Core_Optional_System_Single__
  name: CommandWithOptionalFloatValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalFloatValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalFloatValue
- uid: Remora.Rest.Core.Optional{System.Single}
  commentId: T:Remora.Rest.Core.Optional{System.Single}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: Optional<float>
  nameWithType: Optional<float>
  fullName: Remora.Rest.Core.Optional<float>
  nameWithType.vb: Optional(Of Single)
  fullName.vb: Remora.Rest.Core.Optional(Of Single)
  name.vb: Optional(Of Single)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDoubleValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDoubleValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalDoubleValue_Remora_Rest_Core_Optional_System_Double__
  name: CommandWithOptionalDoubleValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalDoubleValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDoubleValue
- uid: Remora.Rest.Core.Optional{System.Double}
  commentId: T:Remora.Rest.Core.Optional{System.Double}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: Optional<double>
  nameWithType: Optional<double>
  fullName: Remora.Rest.Core.Optional<double>
  nameWithType.vb: Optional(Of Double)
  fullName.vb: Remora.Rest.Core.Optional(Of Double)
  name.vb: Optional(Of Double)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDecimalValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDecimalValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalDecimalValue_Remora_Rest_Core_Optional_System_Decimal__
  name: CommandWithOptionalDecimalValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalDecimalValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalDecimalValue
- uid: Remora.Rest.Core.Optional{System.Decimal}
  commentId: T:Remora.Rest.Core.Optional{System.Decimal}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: Optional<decimal>
  nameWithType: Optional<decimal>
  fullName: Remora.Rest.Core.Optional<decimal>
  nameWithType.vb: Optional(Of Decimal)
  fullName.vb: Remora.Rest.Core.Optional(Of Decimal)
  name.vb: Optional(Of Decimal)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Decimal
    name: decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Decimal
    name: Decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalStringValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalStringValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalStringValue_Remora_Rest_Core_Optional_System_String__
  name: CommandWithOptionalStringValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalStringValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalStringValue
- uid: Remora.Rest.Core.Optional{System.String}
  commentId: T:Remora.Rest.Core.Optional{System.String}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Optional<string>
  nameWithType: Optional<string>
  fullName: Remora.Rest.Core.Optional<string>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Remora.Rest.Core.Optional(Of String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalBoolValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalBoolValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalBoolValue_Remora_Rest_Core_Optional_System_Boolean__
  name: CommandWithOptionalBoolValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalBoolValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalBoolValue
- uid: Remora.Rest.Core.Optional{System.Boolean}
  commentId: T:Remora.Rest.Core.Optional{System.Boolean}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Optional<bool>
  nameWithType: Optional<bool>
  fullName: Remora.Rest.Core.Optional<bool>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Remora.Rest.Core.Optional(Of Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalEnumValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalEnumValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalEnumValue_Remora_Rest_Core_Optional_Remora_Discord_Commands_Tests_Data_Valid_DummyEnum__
  name: CommandWithOptionalEnumValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalEnumValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalEnumValue
- uid: Remora.Rest.Core.Optional{Remora.Discord.Commands.Tests.Data.Valid.DummyEnum}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.Commands.Tests.Data.Valid.DummyEnum}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.Commands.Tests.Data.Valid.DummyEnum.html
  name: Optional<DummyEnum>
  nameWithType: Optional<DummyEnum>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.Commands.Tests.Data.Valid.DummyEnum>
  nameWithType.vb: Optional(Of DummyEnum)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.Commands.Tests.Data.Valid.DummyEnum)
  name.vb: Optional(Of DummyEnum)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.Commands.Tests.Data.Valid.DummyEnum
    name: DummyEnum
    href: Remora.Discord.Commands.Tests.Data.Valid.DummyEnum.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.Commands.Tests.Data.Valid.DummyEnum
    name: DummyEnum
    href: Remora.Discord.Commands.Tests.Data.Valid.DummyEnum.html
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalRoleValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalRoleValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalRoleValue_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IRole__
  name: CommandWithOptionalRoleValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalRoleValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalRoleValue
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IRole}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IRole}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  name: Optional<IRole>
  nameWithType: Optional<IRole>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IRole>
  nameWithType.vb: Optional(Of IRole)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IRole)
  name.vb: Optional(Of IRole)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IRole
    name: IRole
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IRole
    name: IRole
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUserValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUserValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalUserValue_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IUser__
  name: CommandWithOptionalUserValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalUserValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalUserValue
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IUser}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IUser}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IUser.html
  name: Optional<IUser>
  nameWithType: Optional<IUser>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IUser>
  nameWithType.vb: Optional(Of IUser)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IUser)
  name.vb: Optional(Of IUser)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IUser
    name: IUser
    href: Remora.Discord.API.Abstractions.Objects.IUser.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IUser
    name: IUser
    href: Remora.Discord.API.Abstractions.Objects.IUser.html
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalMemberValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalMemberValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalMemberValue_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IGuildMember__
  name: CommandWithOptionalMemberValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalMemberValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalMemberValue
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IGuildMember}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IGuildMember}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IGuildMember.html
  name: Optional<IGuildMember>
  nameWithType: Optional<IGuildMember>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IGuildMember>
  nameWithType.vb: Optional(Of IGuildMember)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IGuildMember)
  name.vb: Optional(Of IGuildMember)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IGuildMember
    name: IGuildMember
    href: Remora.Discord.API.Abstractions.Objects.IGuildMember.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IGuildMember
    name: IGuildMember
    href: Remora.Discord.API.Abstractions.Objects.IGuildMember.html
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalChannelValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalChannelValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalChannelValue_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IChannel__
  name: CommandWithOptionalChannelValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalChannelValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalChannelValue
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IChannel}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IChannel}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IChannel.html
  name: Optional<IChannel>
  nameWithType: Optional<IChannel>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IChannel>
  nameWithType.vb: Optional(Of IChannel)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IChannel)
  name.vb: Optional(Of IChannel)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IChannel
    name: IChannel
    href: Remora.Discord.API.Abstractions.Objects.IChannel.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IChannel
    name: IChannel
    href: Remora.Discord.API.Abstractions.Objects.IChannel.html
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSnowflakeValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSnowflakeValue
  href: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_OptionalTypedCommands_CommandWithOptionalSnowflakeValue_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__
  name: CommandWithOptionalSnowflakeValue
  nameWithType: OptionalTypedCommands.CommandWithOptionalSnowflakeValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.OptionalTypedCommands.CommandWithOptionalSnowflakeValue
- uid: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  commentId: T:Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  name: Optional<Snowflake>
  nameWithType: Optional<Snowflake>
  fullName: Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>
  nameWithType.vb: Optional(Of Snowflake)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake)
  name.vb: Optional(Of Snowflake)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
