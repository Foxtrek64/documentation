### YamlMime:ManagedReference
items:
- uid: Remora.Discord.API.Tests.Services.SampleDataService
  commentId: T:Remora.Discord.API.Tests.Services.SampleDataService
  id: SampleDataService
  parent: Remora.Discord.API.Tests.Services
  children:
  - Remora.Discord.API.Tests.Services.SampleDataService.GetSampleBidirectionalDataSet``1
  - Remora.Discord.API.Tests.Services.SampleDataService.GetSampleCommandDataSet``1
  - Remora.Discord.API.Tests.Services.SampleDataService.GetSampleEventDataSet``1
  - Remora.Discord.API.Tests.Services.SampleDataService.GetSampleObjectDataSet``1
  - Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceCommandDataSet``1
  - Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceEventDataSet``1
  langs:
  - csharp
  - vb
  name: SampleDataService
  nameWithType: SampleDataService
  fullName: Remora.Discord.API.Tests.Services.SampleDataService
  type: Class
  source:
    id: SampleDataService
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\Services\SampleDataService.cs
    startLine: 38
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Services
  summary: Handles interaction with local sample data.
  example: []
  syntax:
    content: public class SampleDataService
    content.vb: Public Class SampleDataService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleEventDataSet``1
  commentId: M:Remora.Discord.API.Tests.Services.SampleDataService.GetSampleEventDataSet``1
  id: GetSampleEventDataSet``1
  parent: Remora.Discord.API.Tests.Services.SampleDataService
  langs:
  - csharp
  - vb
  name: GetSampleEventDataSet<TType>()
  nameWithType: SampleDataService.GetSampleEventDataSet<TType>()
  fullName: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleEventDataSet<TType>()
  type: Method
  source:
    id: GetSampleEventDataSet
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\Services\SampleDataService.cs
    startLine: 45
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Services
  summary: Gets a sample file for the given API event type.
  example: []
  syntax:
    content: 'public Result<IReadOnlyList<SampleDataDescriptor>> GetSampleEventDataSet<TType>() where TType : IGatewayEvent'
    typeParameters:
    - id: TType
      description: The API type.
    return:
      type: Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Tests.Services.SampleDataDescriptor}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Function GetSampleEventDataSet(Of TType As IGatewayEvent)() As Result(Of IReadOnlyList(Of SampleDataDescriptor))
  overload: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleEventDataSet*
  nameWithType.vb: SampleDataService.GetSampleEventDataSet(Of TType)()
  fullName.vb: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleEventDataSet(Of TType)()
  name.vb: GetSampleEventDataSet(Of TType)()
- uid: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleCommandDataSet``1
  commentId: M:Remora.Discord.API.Tests.Services.SampleDataService.GetSampleCommandDataSet``1
  id: GetSampleCommandDataSet``1
  parent: Remora.Discord.API.Tests.Services.SampleDataService
  langs:
  - csharp
  - vb
  name: GetSampleCommandDataSet<TType>()
  nameWithType: SampleDataService.GetSampleCommandDataSet<TType>()
  fullName: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleCommandDataSet<TType>()
  type: Method
  source:
    id: GetSampleCommandDataSet
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\Services\SampleDataService.cs
    startLine: 54
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Services
  summary: Gets a sample file for the given API command type.
  example: []
  syntax:
    content: 'public Result<IReadOnlyList<SampleDataDescriptor>> GetSampleCommandDataSet<TType>() where TType : IGatewayCommand'
    typeParameters:
    - id: TType
      description: The API type.
    return:
      type: Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Tests.Services.SampleDataDescriptor}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Function GetSampleCommandDataSet(Of TType As IGatewayCommand)() As Result(Of IReadOnlyList(Of SampleDataDescriptor))
  overload: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleCommandDataSet*
  nameWithType.vb: SampleDataService.GetSampleCommandDataSet(Of TType)()
  fullName.vb: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleCommandDataSet(Of TType)()
  name.vb: GetSampleCommandDataSet(Of TType)()
- uid: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleBidirectionalDataSet``1
  commentId: M:Remora.Discord.API.Tests.Services.SampleDataService.GetSampleBidirectionalDataSet``1
  id: GetSampleBidirectionalDataSet``1
  parent: Remora.Discord.API.Tests.Services.SampleDataService
  langs:
  - csharp
  - vb
  name: GetSampleBidirectionalDataSet<TType>()
  nameWithType: SampleDataService.GetSampleBidirectionalDataSet<TType>()
  fullName: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleBidirectionalDataSet<TType>()
  type: Method
  source:
    id: GetSampleBidirectionalDataSet
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\Services\SampleDataService.cs
    startLine: 63
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Services
  summary: Gets a sample file for the given API bidirectional type.
  example: []
  syntax:
    content: 'public Result<IReadOnlyList<SampleDataDescriptor>> GetSampleBidirectionalDataSet<TType>() where TType : IGatewayEvent, IGatewayCommand'
    typeParameters:
    - id: TType
      description: The API type.
    return:
      type: Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Tests.Services.SampleDataDescriptor}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Function GetSampleBidirectionalDataSet(Of TType As {IGatewayEvent, IGatewayCommand})() As Result(Of IReadOnlyList(Of SampleDataDescriptor))
  overload: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleBidirectionalDataSet*
  nameWithType.vb: SampleDataService.GetSampleBidirectionalDataSet(Of TType)()
  fullName.vb: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleBidirectionalDataSet(Of TType)()
  name.vb: GetSampleBidirectionalDataSet(Of TType)()
- uid: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleObjectDataSet``1
  commentId: M:Remora.Discord.API.Tests.Services.SampleDataService.GetSampleObjectDataSet``1
  id: GetSampleObjectDataSet``1
  parent: Remora.Discord.API.Tests.Services.SampleDataService
  langs:
  - csharp
  - vb
  name: GetSampleObjectDataSet<TType>()
  nameWithType: SampleDataService.GetSampleObjectDataSet<TType>()
  fullName: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleObjectDataSet<TType>()
  type: Method
  source:
    id: GetSampleObjectDataSet
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\Services\SampleDataService.cs
    startLine: 72
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Services
  summary: Gets a sample file for the given API object type.
  example: []
  syntax:
    content: public Result<IReadOnlyList<SampleDataDescriptor>> GetSampleObjectDataSet<TType>()
    typeParameters:
    - id: TType
      description: The API type.
    return:
      type: Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Tests.Services.SampleDataDescriptor}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Function GetSampleObjectDataSet(Of TType)() As Result(Of IReadOnlyList(Of SampleDataDescriptor))
  overload: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleObjectDataSet*
  nameWithType.vb: SampleDataService.GetSampleObjectDataSet(Of TType)()
  fullName.vb: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleObjectDataSet(Of TType)()
  name.vb: GetSampleObjectDataSet(Of TType)()
- uid: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceEventDataSet``1
  commentId: M:Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceEventDataSet``1
  id: GetSampleVoiceEventDataSet``1
  parent: Remora.Discord.API.Tests.Services.SampleDataService
  langs:
  - csharp
  - vb
  name: GetSampleVoiceEventDataSet<TType>()
  nameWithType: SampleDataService.GetSampleVoiceEventDataSet<TType>()
  fullName: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceEventDataSet<TType>()
  type: Method
  source:
    id: GetSampleVoiceEventDataSet
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\Services\SampleDataService.cs
    startLine: 80
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Services
  summary: Gets a sample file for the given voice gateway event type.
  example: []
  syntax:
    content: 'public Result<IReadOnlyList<SampleDataDescriptor>> GetSampleVoiceEventDataSet<TType>() where TType : IVoiceGatewayEvent'
    typeParameters:
    - id: TType
      description: The gateway type.
    return:
      type: Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Tests.Services.SampleDataDescriptor}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Function GetSampleVoiceEventDataSet(Of TType As IVoiceGatewayEvent)() As Result(Of IReadOnlyList(Of SampleDataDescriptor))
  overload: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceEventDataSet*
  nameWithType.vb: SampleDataService.GetSampleVoiceEventDataSet(Of TType)()
  fullName.vb: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceEventDataSet(Of TType)()
  name.vb: GetSampleVoiceEventDataSet(Of TType)()
- uid: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceCommandDataSet``1
  commentId: M:Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceCommandDataSet``1
  id: GetSampleVoiceCommandDataSet``1
  parent: Remora.Discord.API.Tests.Services.SampleDataService
  langs:
  - csharp
  - vb
  name: GetSampleVoiceCommandDataSet<TType>()
  nameWithType: SampleDataService.GetSampleVoiceCommandDataSet<TType>()
  fullName: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceCommandDataSet<TType>()
  type: Method
  source:
    id: GetSampleVoiceCommandDataSet
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\Services\SampleDataService.cs
    startLine: 89
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Services
  summary: Gets a sample file for the given voice gateway command type.
  example: []
  syntax:
    content: 'public Result<IReadOnlyList<SampleDataDescriptor>> GetSampleVoiceCommandDataSet<TType>() where TType : IVoiceGatewayCommand'
    typeParameters:
    - id: TType
      description: The gateway type.
    return:
      type: Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Tests.Services.SampleDataDescriptor}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Function GetSampleVoiceCommandDataSet(Of TType As IVoiceGatewayCommand)() As Result(Of IReadOnlyList(Of SampleDataDescriptor))
  overload: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceCommandDataSet*
  nameWithType.vb: SampleDataService.GetSampleVoiceCommandDataSet(Of TType)()
  fullName.vb: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceCommandDataSet(Of TType)()
  name.vb: GetSampleVoiceCommandDataSet(Of TType)()
references:
- uid: Remora.Discord.API.Tests.Services
  commentId: N:Remora.Discord.API.Tests.Services
  href: Remora.html
  name: Remora.Discord.API.Tests.Services
  nameWithType: Remora.Discord.API.Tests.Services
  fullName: Remora.Discord.API.Tests.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Tests
    name: Tests
    href: Remora.Discord.API.Tests.html
  - name: .
  - uid: Remora.Discord.API.Tests.Services
    name: Services
    href: Remora.Discord.API.Tests.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Tests
    name: Tests
    href: Remora.Discord.API.Tests.html
  - name: .
  - uid: Remora.Discord.API.Tests.Services
    name: Services
    href: Remora.Discord.API.Tests.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleEventDataSet*
  commentId: Overload:Remora.Discord.API.Tests.Services.SampleDataService.GetSampleEventDataSet
  href: Remora.Discord.API.Tests.Services.SampleDataService.html#Remora_Discord_API_Tests_Services_SampleDataService_GetSampleEventDataSet__1
  name: GetSampleEventDataSet
  nameWithType: SampleDataService.GetSampleEventDataSet
  fullName: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleEventDataSet
- uid: Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Tests.Services.SampleDataDescriptor}}
  commentId: T:Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Tests.Services.SampleDataDescriptor}}
  parent: Remora.Results
  definition: Remora.Results.Result`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Result<IReadOnlyList<SampleDataDescriptor>>
  nameWithType: Result<IReadOnlyList<SampleDataDescriptor>>
  fullName: Remora.Results.Result<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Tests.Services.SampleDataDescriptor>>
  nameWithType.vb: Result(Of IReadOnlyList(Of SampleDataDescriptor))
  fullName.vb: Remora.Results.Result(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Tests.Services.SampleDataDescriptor))
  name.vb: Result(Of IReadOnlyList(Of SampleDataDescriptor))
  spec.csharp:
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
  - name: )
- uid: Remora.Results.Result`1
  commentId: T:Remora.Results.Result`1
  isExternal: true
  name: Result<TEntity>
  nameWithType: Result<TEntity>
  fullName: Remora.Results.Result<TEntity>
  nameWithType.vb: Result(Of TEntity)
  fullName.vb: Remora.Results.Result(Of TEntity)
  name.vb: Result(Of TEntity)
  spec.csharp:
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Remora.Results
  commentId: N:Remora.Results
  isExternal: true
  name: Remora.Results
  nameWithType: Remora.Results
  fullName: Remora.Results
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Results
    name: Results
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Results
    name: Results
    isExternal: true
- uid: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleCommandDataSet*
  commentId: Overload:Remora.Discord.API.Tests.Services.SampleDataService.GetSampleCommandDataSet
  href: Remora.Discord.API.Tests.Services.SampleDataService.html#Remora_Discord_API_Tests_Services_SampleDataService_GetSampleCommandDataSet__1
  name: GetSampleCommandDataSet
  nameWithType: SampleDataService.GetSampleCommandDataSet
  fullName: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleCommandDataSet
- uid: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleBidirectionalDataSet*
  commentId: Overload:Remora.Discord.API.Tests.Services.SampleDataService.GetSampleBidirectionalDataSet
  href: Remora.Discord.API.Tests.Services.SampleDataService.html#Remora_Discord_API_Tests_Services_SampleDataService_GetSampleBidirectionalDataSet__1
  name: GetSampleBidirectionalDataSet
  nameWithType: SampleDataService.GetSampleBidirectionalDataSet
  fullName: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleBidirectionalDataSet
- uid: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleObjectDataSet*
  commentId: Overload:Remora.Discord.API.Tests.Services.SampleDataService.GetSampleObjectDataSet
  href: Remora.Discord.API.Tests.Services.SampleDataService.html#Remora_Discord_API_Tests_Services_SampleDataService_GetSampleObjectDataSet__1
  name: GetSampleObjectDataSet
  nameWithType: SampleDataService.GetSampleObjectDataSet
  fullName: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleObjectDataSet
- uid: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceEventDataSet*
  commentId: Overload:Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceEventDataSet
  href: Remora.Discord.API.Tests.Services.SampleDataService.html#Remora_Discord_API_Tests_Services_SampleDataService_GetSampleVoiceEventDataSet__1
  name: GetSampleVoiceEventDataSet
  nameWithType: SampleDataService.GetSampleVoiceEventDataSet
  fullName: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceEventDataSet
- uid: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceCommandDataSet*
  commentId: Overload:Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceCommandDataSet
  href: Remora.Discord.API.Tests.Services.SampleDataService.html#Remora_Discord_API_Tests_Services_SampleDataService_GetSampleVoiceCommandDataSet__1
  name: GetSampleVoiceCommandDataSet
  nameWithType: SampleDataService.GetSampleVoiceCommandDataSet
  fullName: Remora.Discord.API.Tests.Services.SampleDataService.GetSampleVoiceCommandDataSet
