### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Commands.Tests.Parsers.MessageParserTests
  commentId: T:Remora.Discord.Commands.Tests.Parsers.MessageParserTests
  id: MessageParserTests
  parent: Remora.Discord.Commands.Tests.Parsers
  children:
  - Remora.Discord.Commands.Tests.Parsers.MessageParserTests.#ctor
  - Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByMessageLink(System.String)
  - Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByNumber
  - Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CannotParseInvalidValue
  langs:
  - csharp
  - vb
  name: MessageParserTests
  nameWithType: MessageParserTests
  fullName: Remora.Discord.Commands.Tests.Parsers.MessageParserTests
  type: Class
  source:
    id: MessageParserTests
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Parsers\MessageParserTests.cs
    startLine: 40
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Parsers
  summary: Tests the <xref href="Remora.Discord.Commands.Parsers.MessageParser" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public class MessageParserTests
    content.vb: Public Class MessageParserTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.#ctor
  commentId: M:Remora.Discord.Commands.Tests.Parsers.MessageParserTests.#ctor
  id: '#ctor'
  parent: Remora.Discord.Commands.Tests.Parsers.MessageParserTests
  langs:
  - csharp
  - vb
  name: MessageParserTests()
  nameWithType: MessageParserTests.MessageParserTests()
  fullName: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.MessageParserTests()
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Parsers\MessageParserTests.cs
    startLine: 48
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Parsers
  summary: Initializes a new instance of the <xref href="Remora.Discord.Commands.Tests.Parsers.MessageParserTests" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public MessageParserTests()
    content.vb: Public Sub New()
  overload: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.#ctor*
  nameWithType.vb: MessageParserTests.New()
  fullName.vb: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.New()
  name.vb: New()
- uid: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CannotParseInvalidValue
  commentId: M:Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CannotParseInvalidValue
  id: CannotParseInvalidValue
  parent: Remora.Discord.Commands.Tests.Parsers.MessageParserTests
  langs:
  - csharp
  - vb
  name: CannotParseInvalidValue()
  nameWithType: MessageParserTests.CannotParseInvalidValue()
  fullName: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CannotParseInvalidValue()
  type: Method
  source:
    id: CannotParseInvalidValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Parsers\MessageParserTests.cs
    startLine: 77
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Parsers
  summary: Tests whether the parser returns error on invalid value.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CannotParseInvalidValue()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CannotParseInvalidValue() As Task
  overload: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CannotParseInvalidValue*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByNumber
  commentId: M:Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByNumber
  id: CanParseMessageByNumber
  parent: Remora.Discord.Commands.Tests.Parsers.MessageParserTests
  langs:
  - csharp
  - vb
  name: CanParseMessageByNumber()
  nameWithType: MessageParserTests.CanParseMessageByNumber()
  fullName: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByNumber()
  type: Method
  source:
    id: CanParseMessageByNumber
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Parsers\MessageParserTests.cs
    startLine: 88
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Parsers
  summary: Tests whether the parser can parse message given by snowflake.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanParseMessageByNumber()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanParseMessageByNumber() As Task
  overload: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByNumber*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByMessageLink(System.String)
  commentId: M:Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByMessageLink(System.String)
  id: CanParseMessageByMessageLink(System.String)
  parent: Remora.Discord.Commands.Tests.Parsers.MessageParserTests
  langs:
  - csharp
  - vb
  name: CanParseMessageByMessageLink(string)
  nameWithType: MessageParserTests.CanParseMessageByMessageLink(string)
  fullName: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByMessageLink(string)
  type: Method
  source:
    id: CanParseMessageByMessageLink
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Parsers\MessageParserTests.cs
    startLine: 111
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Parsers
  summary: Tests whether the parser can parse message given by message link.
  example: []
  syntax:
    content: >-
      [InlineData(new object[] { "https://discord.com/channels/@me/135347310845612345/135347310845624320/" })]

      [InlineData(new object[] { "https://discord.com/channels/123/135347310845612345/135347310845624320/" })]

      [InlineData(new object[] { "https://canary.discord.com/channels/@me/135347310845612345/135347310845624320/" })]

      [InlineData(new object[] { "https://canary.discord.com/channels/123/135347310845612345/135347310845624320/" })]

      [InlineData(new object[] { "https://ptb.discord.com/channels/@me/135347310845612345/135347310845624320/" })]

      [InlineData(new object[] { "https://ptb.discord.com/channels/123/135347310845612345/135347310845624320/" })]

      [Theory]

      public Task CanParseMessageByMessageLink(string value)
    parameters:
    - id: value
      type: System.String
      description: Message link that should be parsed correctly.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <InlineData(New Object() { "https://discord.com/channels/@me/135347310845612345/135347310845624320/" })>

      <InlineData(New Object() { "https://discord.com/channels/123/135347310845612345/135347310845624320/" })>

      <InlineData(New Object() { "https://canary.discord.com/channels/@me/135347310845612345/135347310845624320/" })>

      <InlineData(New Object() { "https://canary.discord.com/channels/123/135347310845612345/135347310845624320/" })>

      <InlineData(New Object() { "https://ptb.discord.com/channels/@me/135347310845612345/135347310845624320/" })>

      <InlineData(New Object() { "https://ptb.discord.com/channels/123/135347310845612345/135347310845624320/" })>

      <Theory>

      Public Function CanParseMessageByMessageLink(value As String) As Task
  overload: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByMessageLink*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: MessageParserTests.CanParseMessageByMessageLink(String)
  fullName.vb: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByMessageLink(String)
  name.vb: CanParseMessageByMessageLink(String)
references:
- uid: Remora.Discord.Commands.Parsers.MessageParser
  commentId: T:Remora.Discord.Commands.Parsers.MessageParser
  href: Remora.Discord.Commands.Parsers.MessageParser.html
  name: MessageParser
  nameWithType: MessageParser
  fullName: Remora.Discord.Commands.Parsers.MessageParser
- uid: Remora.Discord.Commands.Tests.Parsers
  commentId: N:Remora.Discord.Commands.Tests.Parsers
  href: Remora.html
  name: Remora.Discord.Commands.Tests.Parsers
  nameWithType: Remora.Discord.Commands.Tests.Parsers
  fullName: Remora.Discord.Commands.Tests.Parsers
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Parsers
    name: Parsers
    href: Remora.Discord.Commands.Tests.Parsers.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Parsers
    name: Parsers
    href: Remora.Discord.Commands.Tests.Parsers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Commands.Tests.Parsers.MessageParserTests
  commentId: T:Remora.Discord.Commands.Tests.Parsers.MessageParserTests
  href: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.html
  name: MessageParserTests
  nameWithType: MessageParserTests
  fullName: Remora.Discord.Commands.Tests.Parsers.MessageParserTests
- uid: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.#ctor*
  commentId: Overload:Remora.Discord.Commands.Tests.Parsers.MessageParserTests.#ctor
  href: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.html#Remora_Discord_Commands_Tests_Parsers_MessageParserTests__ctor
  name: MessageParserTests
  nameWithType: MessageParserTests.MessageParserTests
  fullName: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.MessageParserTests
  nameWithType.vb: MessageParserTests.New
  fullName.vb: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.New
  name.vb: New
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CannotParseInvalidValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CannotParseInvalidValue
  href: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.html#Remora_Discord_Commands_Tests_Parsers_MessageParserTests_CannotParseInvalidValue
  name: CannotParseInvalidValue
  nameWithType: MessageParserTests.CannotParseInvalidValue
  fullName: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CannotParseInvalidValue
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByNumber*
  commentId: Overload:Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByNumber
  href: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.html#Remora_Discord_Commands_Tests_Parsers_MessageParserTests_CanParseMessageByNumber
  name: CanParseMessageByNumber
  nameWithType: MessageParserTests.CanParseMessageByNumber
  fullName: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByNumber
- uid: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByMessageLink*
  commentId: Overload:Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByMessageLink
  href: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.html#Remora_Discord_Commands_Tests_Parsers_MessageParserTests_CanParseMessageByMessageLink_System_String_
  name: CanParseMessageByMessageLink
  nameWithType: MessageParserTests.CanParseMessageByMessageLink
  fullName: Remora.Discord.Commands.Tests.Parsers.MessageParserTests.CanParseMessageByMessageLink
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
