### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests
  commentId: T:Remora.Discord.Commands.Tests.Parsers.OneOfParserTests
  id: OneOfParserTests
  parent: Remora.Discord.Commands.Tests.Parsers
  children:
  - Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.#ctor
  - Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.CanParseMultiArgumentOneOfAsync
  - Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.CanParseSingleArgumentOneOfAsync
  langs:
  - csharp
  - vb
  name: OneOfParserTests
  nameWithType: OneOfParserTests
  fullName: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests
  type: Class
  source:
    id: OneOfParserTests
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Parsers\OneOfParserTests.cs
    startLine: 38
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Parsers
  summary: Tests the <xref href="Remora.Discord.Commands.Parsers.OneOfParser" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public class OneOfParserTests
    content.vb: Public Class OneOfParserTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.#ctor
  commentId: M:Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.#ctor
  id: '#ctor'
  parent: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests
  langs:
  - csharp
  - vb
  name: OneOfParserTests()
  nameWithType: OneOfParserTests.OneOfParserTests()
  fullName: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.OneOfParserTests()
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Parsers\OneOfParserTests.cs
    startLine: 45
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Parsers
  summary: Initializes a new instance of the <xref href="Remora.Discord.Commands.Tests.Parsers.OneOfParserTests" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public OneOfParserTests()
    content.vb: Public Sub New()
  overload: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.#ctor*
  nameWithType.vb: OneOfParserTests.New()
  fullName.vb: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.New()
  name.vb: New()
- uid: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.CanParseSingleArgumentOneOfAsync
  commentId: M:Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.CanParseSingleArgumentOneOfAsync
  id: CanParseSingleArgumentOneOfAsync
  parent: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests
  langs:
  - csharp
  - vb
  name: CanParseSingleArgumentOneOfAsync()
  nameWithType: OneOfParserTests.CanParseSingleArgumentOneOfAsync()
  fullName: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.CanParseSingleArgumentOneOfAsync()
  type: Method
  source:
    id: CanParseSingleArgumentOneOfAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Parsers\OneOfParserTests.cs
    startLine: 62
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Parsers
  summary: Tests whether the parser can parse a single-argument OneOf.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanParseSingleArgumentOneOfAsync()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanParseSingleArgumentOneOfAsync() As Task
  overload: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.CanParseSingleArgumentOneOfAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.CanParseMultiArgumentOneOfAsync
  commentId: M:Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.CanParseMultiArgumentOneOfAsync
  id: CanParseMultiArgumentOneOfAsync
  parent: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests
  langs:
  - csharp
  - vb
  name: CanParseMultiArgumentOneOfAsync()
  nameWithType: OneOfParserTests.CanParseMultiArgumentOneOfAsync()
  fullName: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.CanParseMultiArgumentOneOfAsync()
  type: Method
  source:
    id: CanParseMultiArgumentOneOfAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Parsers\OneOfParserTests.cs
    startLine: 80
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Parsers
  summary: Tests whether the parser can parse a multi-argument OneOf.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanParseMultiArgumentOneOfAsync()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanParseMultiArgumentOneOfAsync() As Task
  overload: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.CanParseMultiArgumentOneOfAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: Remora.Discord.Commands.Parsers.OneOfParser
  commentId: T:Remora.Discord.Commands.Parsers.OneOfParser
  href: Remora.Discord.Commands.Parsers.OneOfParser.html
  name: OneOfParser
  nameWithType: OneOfParser
  fullName: Remora.Discord.Commands.Parsers.OneOfParser
- uid: Remora.Discord.Commands.Tests.Parsers
  commentId: N:Remora.Discord.Commands.Tests.Parsers
  href: Remora.html
  name: Remora.Discord.Commands.Tests.Parsers
  nameWithType: Remora.Discord.Commands.Tests.Parsers
  fullName: Remora.Discord.Commands.Tests.Parsers
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Parsers
    name: Parsers
    href: Remora.Discord.Commands.Tests.Parsers.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Parsers
    name: Parsers
    href: Remora.Discord.Commands.Tests.Parsers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests
  commentId: T:Remora.Discord.Commands.Tests.Parsers.OneOfParserTests
  href: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.html
  name: OneOfParserTests
  nameWithType: OneOfParserTests
  fullName: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests
- uid: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.#ctor*
  commentId: Overload:Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.#ctor
  href: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.html#Remora_Discord_Commands_Tests_Parsers_OneOfParserTests__ctor
  name: OneOfParserTests
  nameWithType: OneOfParserTests.OneOfParserTests
  fullName: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.OneOfParserTests
  nameWithType.vb: OneOfParserTests.New
  fullName.vb: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.New
  name.vb: New
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.CanParseSingleArgumentOneOfAsync*
  commentId: Overload:Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.CanParseSingleArgumentOneOfAsync
  href: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.html#Remora_Discord_Commands_Tests_Parsers_OneOfParserTests_CanParseSingleArgumentOneOfAsync
  name: CanParseSingleArgumentOneOfAsync
  nameWithType: OneOfParserTests.CanParseSingleArgumentOneOfAsync
  fullName: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.CanParseSingleArgumentOneOfAsync
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.CanParseMultiArgumentOneOfAsync*
  commentId: Overload:Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.CanParseMultiArgumentOneOfAsync
  href: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.html#Remora_Discord_Commands_Tests_Parsers_OneOfParserTests_CanParseMultiArgumentOneOfAsync
  name: CanParseMultiArgumentOneOfAsync
  nameWithType: OneOfParserTests.CanParseMultiArgumentOneOfAsync
  fullName: Remora.Discord.Commands.Tests.Parsers.OneOfParserTests.CanParseMultiArgumentOneOfAsync
