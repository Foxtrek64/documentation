### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  commentId: T:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  id: DiscordRestChannelAPITests.ModifyChannelAsync
  parent: Remora.Discord.Rest.Tests.API.Channels
  children:
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsAnnouncementChannelRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsForumChannelRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsGroupDMRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsMediaChannelRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsNullableRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsStageChannelRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsTextChannelRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsThreadChannelRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsVoiceChannelRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooLong
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooShort
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfTopicIsTooLong
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooLarge
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooSmall
  langs:
  - csharp
  - vb
  name: DiscordRestChannelAPITests.ModifyChannelAsync
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  type: Class
  source:
    id: ModifyChannelAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 91
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests the <xref href="Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake%2cRemora.Rest.Core.Optional%7bSystem.String%7d%2cRemora.Rest.Core.Optional%7bSystem.IO.Stream%7d%2cRemora.Rest.Core.Optional%7bRemora.Discord.API.Abstractions.Objects.ChannelType%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bSystem.Int32%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.String%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bSystem.Boolean%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bSystem.Int32%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bSystem.Int32%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bSystem.Int32%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyList%7bRemora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bRemora.Rest.Core.Snowflake%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bRemora.Discord.API.Abstractions.Objects.VideoQualityMode%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Boolean%7d%2cRemora.Rest.Core.Optional%7bRemora.Discord.API.Abstractions.Objects.AutoArchiveDuration%7d%2cRemora.Rest.Core.Optional%7bSystem.Boolean%7d%2cRemora.Rest.Core.Optional%7bSystem.Boolean%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bRemora.Discord.API.Abstractions.Objects.AutoArchiveDuration%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.String%7d%2cRemora.Rest.Core.Optional%7bRemora.Discord.API.Abstractions.Objects.ChannelFlags%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyList%7bRemora.Discord.API.Abstractions.Objects.IPartialForumTag%7d%7d%2cRemora.Rest.Core.Optional%7bRemora.Discord.API.Abstractions.Objects.IDefaultReaction%7d%2cRemora.Rest.Core.Optional%7bSystem.Int32%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyList%7bRemora.Rest.Core.Snowflake%7d%7d%2cRemora.Rest.Core.Optional%7bRemora.Discord.API.Abstractions.Objects.SortOrder%7d%2cRemora.Rest.Core.Optional%7bRemora.Discord.API.Abstractions.Objects.ForumLayout%7d%2cRemora.Rest.Core.Optional%7bSystem.String%7d%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: 'public class DiscordRestChannelAPITests.ModifyChannelAsync : RestAPITestBase<IDiscordRestChannelAPI>'
    content.vb: Public Class DiscordRestChannelAPITests.ModifyChannelAsync Inherits RestAPITestBase(Of IDiscordRestChannelAPI)
  inheritance:
  - System.Object
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}
  inheritedMembers:
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  id: '#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)'
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  langs:
  - csharp
  - vb
  name: ModifyChannelAsync(RestAPITestFixture)
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.ModifyChannelAsync(RestAPITestFixture)
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ModifyChannelAsync(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 97
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Initializes a new instance of the <xref href="Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public ModifyChannelAsync(RestAPITestFixture fixture)
    parameters:
    - id: fixture
      type: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
      description: The test fixture.
    content.vb: Public Sub New(fixture As RestAPITestFixture)
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.#ctor*
  nameWithType.vb: DiscordRestChannelAPITests.ModifyChannelAsync.New(RestAPITestFixture)
  fullName.vb: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.New(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  name.vb: New(RestAPITestFixture)
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsGroupDMRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsGroupDMRequestCorrectly
  id: PerformsGroupDMRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsGroupDMRequestCorrectly()
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsGroupDMRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsGroupDMRequestCorrectly()
  type: Method
  source:
    id: PerformsGroupDMRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 106
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsGroupDMRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsGroupDMRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsGroupDMRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsTextChannelRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsTextChannelRequestCorrectly
  id: PerformsTextChannelRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsTextChannelRequestCorrectly()
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsTextChannelRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsTextChannelRequestCorrectly()
  type: Method
  source:
    id: PerformsTextChannelRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 147
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsTextChannelRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsTextChannelRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsTextChannelRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsAnnouncementChannelRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsAnnouncementChannelRequestCorrectly
  id: PerformsAnnouncementChannelRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsAnnouncementChannelRequestCorrectly()
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsAnnouncementChannelRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsAnnouncementChannelRequestCorrectly()
  type: Method
  source:
    id: PerformsAnnouncementChannelRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 213
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsAnnouncementChannelRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsAnnouncementChannelRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsAnnouncementChannelRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsVoiceChannelRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsVoiceChannelRequestCorrectly
  id: PerformsVoiceChannelRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsVoiceChannelRequestCorrectly()
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsVoiceChannelRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsVoiceChannelRequestCorrectly()
  type: Method
  source:
    id: PerformsVoiceChannelRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 276
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsVoiceChannelRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsVoiceChannelRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsVoiceChannelRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsStageChannelRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsStageChannelRequestCorrectly
  id: PerformsStageChannelRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsStageChannelRequestCorrectly()
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsStageChannelRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsStageChannelRequestCorrectly()
  type: Method
  source:
    id: PerformsStageChannelRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 341
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsStageChannelRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsStageChannelRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsStageChannelRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsThreadChannelRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsThreadChannelRequestCorrectly
  id: PerformsThreadChannelRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsThreadChannelRequestCorrectly()
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsThreadChannelRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsThreadChannelRequestCorrectly()
  type: Method
  source:
    id: PerformsThreadChannelRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 406
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsThreadChannelRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsThreadChannelRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsThreadChannelRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsForumChannelRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsForumChannelRequestCorrectly
  id: PerformsForumChannelRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsForumChannelRequestCorrectly()
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsForumChannelRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsForumChannelRequestCorrectly()
  type: Method
  source:
    id: PerformsForumChannelRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 469
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsForumChannelRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsForumChannelRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsForumChannelRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsMediaChannelRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsMediaChannelRequestCorrectly
  id: PerformsMediaChannelRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsMediaChannelRequestCorrectly()
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsMediaChannelRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsMediaChannelRequestCorrectly()
  type: Method
  source:
    id: PerformsMediaChannelRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 554
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsMediaChannelRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsMediaChannelRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsMediaChannelRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsNullableRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsNullableRequestCorrectly
  id: PerformsNullableRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsNullableRequestCorrectly()
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsNullableRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsNullableRequestCorrectly()
  type: Method
  source:
    id: PerformsNullableRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 636
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsNullableRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsNullableRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsNullableRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooLong
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooLong
  id: ReturnsErrorIfNameIsTooLong
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  langs:
  - csharp
  - vb
  name: ReturnsErrorIfNameIsTooLong()
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooLong()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooLong()
  type: Method
  source:
    id: ReturnsErrorIfNameIsTooLong
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 689
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API checks parameter lengths correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task ReturnsErrorIfNameIsTooLong()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function ReturnsErrorIfNameIsTooLong() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooLong*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooShort
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooShort
  id: ReturnsErrorIfNameIsTooShort
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  langs:
  - csharp
  - vb
  name: ReturnsErrorIfNameIsTooShort()
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooShort()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooShort()
  type: Method
  source:
    id: ReturnsErrorIfNameIsTooShort
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 710
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API checks parameter lengths correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task ReturnsErrorIfNameIsTooShort()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function ReturnsErrorIfNameIsTooShort() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooShort*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfTopicIsTooLong
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfTopicIsTooLong
  id: ReturnsErrorIfTopicIsTooLong
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  langs:
  - csharp
  - vb
  name: ReturnsErrorIfTopicIsTooLong()
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfTopicIsTooLong()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfTopicIsTooLong()
  type: Method
  source:
    id: ReturnsErrorIfTopicIsTooLong
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 731
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API checks parameter lengths correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task ReturnsErrorIfTopicIsTooLong()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function ReturnsErrorIfTopicIsTooLong() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfTopicIsTooLong*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooSmall
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooSmall
  id: ReturnsErrorIfUserLimitIsTooSmall
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  langs:
  - csharp
  - vb
  name: ReturnsErrorIfUserLimitIsTooSmall()
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooSmall()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooSmall()
  type: Method
  source:
    id: ReturnsErrorIfUserLimitIsTooSmall
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 752
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API checks parameter lengths correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task ReturnsErrorIfUserLimitIsTooSmall()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function ReturnsErrorIfUserLimitIsTooSmall() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooSmall*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooLarge
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooLarge
  id: ReturnsErrorIfUserLimitIsTooLarge
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  langs:
  - csharp
  - vb
  name: ReturnsErrorIfUserLimitIsTooLarge()
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooLarge()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooLarge()
  type: Method
  source:
    id: ReturnsErrorIfUserLimitIsTooLarge
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 773
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API checks parameter lengths correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task ReturnsErrorIfUserLimitIsTooLarge()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function ReturnsErrorIfUserLimitIsTooLarge() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooLarge*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ModifyChannelAsync(Snowflake, Optional<string>, Optional<Stream>, Optional<ChannelType>, Optional<int?>, Optional<string>, Optional<bool?>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<VideoQualityMode?>, Optional<bool>, Optional<AutoArchiveDuration>, Optional<bool>, Optional<bool>, Optional<AutoArchiveDuration?>, Optional<string>, Optional<ChannelFlags>, Optional<IReadOnlyList<IPartialForumTag>>, Optional<IDefaultReaction>, Optional<int>, Optional<IReadOnlyList<Snowflake>>, Optional<SortOrder>, Optional<ForumLayout>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.ModifyChannelAsync(Snowflake, Optional<string>, Optional<Stream>, Optional<ChannelType>, Optional<int?>, Optional<string>, Optional<bool?>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<VideoQualityMode?>, Optional<bool>, Optional<AutoArchiveDuration>, Optional<bool>, Optional<bool>, Optional<AutoArchiveDuration?>, Optional<string>, Optional<ChannelFlags>, Optional<IReadOnlyList<IPartialForumTag>>, Optional<IDefaultReaction>, Optional<int>, Optional<IReadOnlyList<Snowflake>>, Optional<SortOrder>, Optional<ForumLayout>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.IO.Stream>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelType>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.VideoQualityMode?>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelFlags>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialForumTag>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDefaultReaction>, Remora.Rest.Core.Optional<int>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.SortOrder>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ForumLayout>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.ModifyChannelAsync(Snowflake, Optional(Of String), Optional(Of Stream), Optional(Of ChannelType), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of VideoQualityMode?), Optional(Of Boolean), Optional(Of AutoArchiveDuration), Optional(Of Boolean), Optional(Of Boolean), Optional(Of AutoArchiveDuration?), Optional(Of String), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of IPartialForumTag)), Optional(Of IDefaultReaction), Optional(Of Integer), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of SortOrder), Optional(Of ForumLayout), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.IO.Stream), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelType), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.VideoQualityMode?), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelFlags), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialForumTag)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDefaultReaction), Remora.Rest.Core.Optional(Of Integer), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.SortOrder), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ForumLayout), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyChannelAsync(Snowflake, Optional(Of String), Optional(Of Stream), Optional(Of ChannelType), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of VideoQualityMode?), Optional(Of Boolean), Optional(Of AutoArchiveDuration), Optional(Of Boolean), Optional(Of Boolean), Optional(Of AutoArchiveDuration?), Optional(Of String), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of IPartialForumTag)), Optional(Of IDefaultReaction), Optional(Of Integer), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of SortOrder), Optional(Of ForumLayout), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyChannelAsync
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelType
    name: ChannelType
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.VideoQualityMode
    name: VideoQualityMode
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelFlags
    name: ChannelFlags
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialForumTag
    name: IPartialForumTag
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IDefaultReaction
    name: IDefaultReaction
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.SortOrder
    name: SortOrder
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ForumLayout
    name: ForumLayout
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyChannelAsync
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelType
    name: ChannelType
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.VideoQualityMode
    name: VideoQualityMode
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelFlags
    name: ChannelFlags
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialForumTag
    name: IPartialForumTag
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IDefaultReaction
    name: IDefaultReaction
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.SortOrder
    name: SortOrder
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ForumLayout
    name: ForumLayout
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.Tests.API.Channels
  commentId: N:Remora.Discord.Rest.Tests.API.Channels
  href: Remora.html
  name: Remora.Discord.Rest.Tests.API.Channels
  nameWithType: Remora.Discord.Rest.Tests.API.Channels
  fullName: Remora.Discord.Rest.Tests.API.Channels
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API
    name: API
    href: Remora.Discord.Rest.Tests.API.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Channels
    name: Channels
    href: Remora.Discord.Rest.Tests.API.Channels.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API
    name: API
    href: Remora.Discord.Rest.Tests.API.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Channels
    name: Channels
    href: Remora.Discord.Rest.Tests.API.Channels.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}
  parent: Remora.Discord.Rest.Tests.TestBases
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  name: RestAPITestBase<IDiscordRestChannelAPI>
  nameWithType: RestAPITestBase<IDiscordRestChannelAPI>
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI>
  nameWithType.vb: RestAPITestBase(Of IDiscordRestChannelAPI)
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  name.vb: RestAPITestBase(Of IDiscordRestChannelAPI)
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
    name: IDiscordRestChannelAPI
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
    name: IDiscordRestChannelAPI
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  parent: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateAPI(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<IDiscordRestChannelAPI>.CreateAPI(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI>.CreateAPI(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of IDiscordRestChannelAPI).CreateAPI(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI).CreateAPI(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateAPI(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  parent: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<IDiscordRestChannelAPI>.CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI>.CreateConfiguredAPIServices(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of IDiscordRestChannelAPI).CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI).CreateConfiguredAPIServices(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  name: RestAPITestBase<TAPI>
  nameWithType: RestAPITestBase<TAPI>
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>
  nameWithType.vb: RestAPITestBase(Of TAPI)
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI)
  name.vb: RestAPITestBase(Of TAPI)
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: <
  - name: TAPI
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TAPI
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases
  commentId: N:Remora.Discord.Rest.Tests.TestBases
  href: Remora.html
  name: Remora.Discord.Rest.Tests.TestBases
  nameWithType: Remora.Discord.Rest.Tests.TestBases
  fullName: Remora.Discord.Rest.Tests.TestBases
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.TestBases
    name: TestBases
    href: Remora.Discord.Rest.Tests.TestBases.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.TestBases
    name: TestBases
    href: Remora.Discord.Rest.Tests.TestBases.html
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  isExternal: true
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateAPI(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<TAPI>.CreateAPI(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>.CreateAPI(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of TAPI).CreateAPI(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI).CreateAPI(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateAPI(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  isExternal: true
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<TAPI>.CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>.CreateConfiguredAPIServices(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of TAPI).CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI).CreateConfiguredAPIServices(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  commentId: T:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.html
  name: DiscordRestChannelAPITests.ModifyChannelAsync
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests
    name: DiscordRestChannelAPITests
    href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
    name: ModifyChannelAsync
    href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests
    name: DiscordRestChannelAPITests
    href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync
    name: ModifyChannelAsync
    href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.#ctor*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.#ctor
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_ModifyChannelAsync__ctor_Remora_Discord_Rest_Tests_TestBases_RestAPITestFixture_
  name: ModifyChannelAsync
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.ModifyChannelAsync
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ModifyChannelAsync
  nameWithType.vb: DiscordRestChannelAPITests.ModifyChannelAsync.New
  fullName.vb: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.New
  name.vb: New
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
  parent: Remora.Discord.Rest.Tests.TestBases
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture.html
  name: RestAPITestFixture
  nameWithType: RestAPITestFixture
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsGroupDMRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsGroupDMRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_ModifyChannelAsync_PerformsGroupDMRequestCorrectly
  name: PerformsGroupDMRequestCorrectly
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsGroupDMRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsGroupDMRequestCorrectly
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsTextChannelRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsTextChannelRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_ModifyChannelAsync_PerformsTextChannelRequestCorrectly
  name: PerformsTextChannelRequestCorrectly
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsTextChannelRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsTextChannelRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsAnnouncementChannelRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsAnnouncementChannelRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_ModifyChannelAsync_PerformsAnnouncementChannelRequestCorrectly
  name: PerformsAnnouncementChannelRequestCorrectly
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsAnnouncementChannelRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsAnnouncementChannelRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsVoiceChannelRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsVoiceChannelRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_ModifyChannelAsync_PerformsVoiceChannelRequestCorrectly
  name: PerformsVoiceChannelRequestCorrectly
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsVoiceChannelRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsVoiceChannelRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsStageChannelRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsStageChannelRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_ModifyChannelAsync_PerformsStageChannelRequestCorrectly
  name: PerformsStageChannelRequestCorrectly
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsStageChannelRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsStageChannelRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsThreadChannelRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsThreadChannelRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_ModifyChannelAsync_PerformsThreadChannelRequestCorrectly
  name: PerformsThreadChannelRequestCorrectly
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsThreadChannelRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsThreadChannelRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsForumChannelRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsForumChannelRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_ModifyChannelAsync_PerformsForumChannelRequestCorrectly
  name: PerformsForumChannelRequestCorrectly
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsForumChannelRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsForumChannelRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsMediaChannelRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsMediaChannelRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_ModifyChannelAsync_PerformsMediaChannelRequestCorrectly
  name: PerformsMediaChannelRequestCorrectly
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsMediaChannelRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsMediaChannelRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsNullableRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsNullableRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_ModifyChannelAsync_PerformsNullableRequestCorrectly
  name: PerformsNullableRequestCorrectly
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.PerformsNullableRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.PerformsNullableRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooLong*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooLong
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_ModifyChannelAsync_ReturnsErrorIfNameIsTooLong
  name: ReturnsErrorIfNameIsTooLong
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooLong
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooLong
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooShort*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooShort
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_ModifyChannelAsync_ReturnsErrorIfNameIsTooShort
  name: ReturnsErrorIfNameIsTooShort
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooShort
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfNameIsTooShort
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfTopicIsTooLong*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfTopicIsTooLong
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_ModifyChannelAsync_ReturnsErrorIfTopicIsTooLong
  name: ReturnsErrorIfTopicIsTooLong
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfTopicIsTooLong
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfTopicIsTooLong
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooSmall*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooSmall
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_ModifyChannelAsync_ReturnsErrorIfUserLimitIsTooSmall
  name: ReturnsErrorIfUserLimitIsTooSmall
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooSmall
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooSmall
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooLarge*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooLarge
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_ModifyChannelAsync_ReturnsErrorIfUserLimitIsTooLarge
  name: ReturnsErrorIfUserLimitIsTooLarge
  nameWithType: DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooLarge
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.ModifyChannelAsync.ReturnsErrorIfUserLimitIsTooLarge
