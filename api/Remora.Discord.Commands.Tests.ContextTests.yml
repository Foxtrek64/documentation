### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Commands.Tests.ContextTests
  commentId: T:Remora.Discord.Commands.Tests.ContextTests
  id: ContextTests
  parent: Remora.Discord.Commands.Tests
  children:
  - Remora.Discord.Commands.Tests.ContextTests.#ctor
  - Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInteractionCommandContext
  - Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInteractionContext
  - Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInterfaceContext
  - Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsMessageContext
  - Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsTextCommandContext
  langs:
  - csharp
  - vb
  name: ContextTests
  nameWithType: ContextTests
  fullName: Remora.Discord.Commands.Tests.ContextTests
  type: Class
  source:
    id: ContextTests
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\ContextTests.cs
    startLine: 42
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests
  summary: Tests injection of various command contexts.
  example: []
  syntax:
    content: public class ContextTests
    content.vb: Public Class ContextTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Commands.Tests.ContextTests.#ctor
  commentId: M:Remora.Discord.Commands.Tests.ContextTests.#ctor
  id: '#ctor'
  parent: Remora.Discord.Commands.Tests.ContextTests
  langs:
  - csharp
  - vb
  name: ContextTests()
  nameWithType: ContextTests.ContextTests()
  fullName: Remora.Discord.Commands.Tests.ContextTests.ContextTests()
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\ContextTests.cs
    startLine: 51
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests
  summary: Initializes a new instance of the <xref href="Remora.Discord.Commands.Tests.ContextTests" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public ContextTests()
    content.vb: Public Sub New()
  overload: Remora.Discord.Commands.Tests.ContextTests.#ctor*
  nameWithType.vb: ContextTests.New()
  fullName.vb: Remora.Discord.Commands.Tests.ContextTests.New()
  name.vb: New()
- uid: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInterfaceContext
  commentId: M:Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInterfaceContext
  id: CanExecuteCommandFromGroupThatWantsInterfaceContext
  parent: Remora.Discord.Commands.Tests.ContextTests
  langs:
  - csharp
  - vb
  name: CanExecuteCommandFromGroupThatWantsInterfaceContext()
  nameWithType: ContextTests.CanExecuteCommandFromGroupThatWantsInterfaceContext()
  fullName: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInterfaceContext()
  type: Method
  source:
    id: CanExecuteCommandFromGroupThatWantsInterfaceContext
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\ContextTests.cs
    startLine: 74
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests
  summary: Tests whether a command in a group that requires an <xref href="Remora.Discord.Commands.Contexts.ICommandContext" data-throw-if-not-resolved="false"></xref> can be executed.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanExecuteCommandFromGroupThatWantsInterfaceContext()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanExecuteCommandFromGroupThatWantsInterfaceContext() As Task
  overload: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInterfaceContext*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsMessageContext
  commentId: M:Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsMessageContext
  id: CanExecuteCommandFromGroupThatWantsMessageContext
  parent: Remora.Discord.Commands.Tests.ContextTests
  langs:
  - csharp
  - vb
  name: CanExecuteCommandFromGroupThatWantsMessageContext()
  nameWithType: ContextTests.CanExecuteCommandFromGroupThatWantsMessageContext()
  fullName: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsMessageContext()
  type: Method
  source:
    id: CanExecuteCommandFromGroupThatWantsMessageContext
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\ContextTests.cs
    startLine: 87
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests
  summary: Tests whether a command in a group that requires an <xref href="Remora.Discord.Commands.Contexts.MessageContext" data-throw-if-not-resolved="false"></xref> can be executed.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanExecuteCommandFromGroupThatWantsMessageContext()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanExecuteCommandFromGroupThatWantsMessageContext() As Task
  overload: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsMessageContext*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInteractionContext
  commentId: M:Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInteractionContext
  id: CanExecuteCommandFromGroupThatWantsInteractionContext
  parent: Remora.Discord.Commands.Tests.ContextTests
  langs:
  - csharp
  - vb
  name: CanExecuteCommandFromGroupThatWantsInteractionContext()
  nameWithType: ContextTests.CanExecuteCommandFromGroupThatWantsInteractionContext()
  fullName: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInteractionContext()
  type: Method
  source:
    id: CanExecuteCommandFromGroupThatWantsInteractionContext
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\ContextTests.cs
    startLine: 100
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests
  summary: Tests whether a command in a group that requires an <xref href="Remora.Discord.Commands.Contexts.InteractionContext" data-throw-if-not-resolved="false"></xref> can be executed.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanExecuteCommandFromGroupThatWantsInteractionContext()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanExecuteCommandFromGroupThatWantsInteractionContext() As Task
  overload: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInteractionContext*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsTextCommandContext
  commentId: M:Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsTextCommandContext
  id: CanExecuteCommandFromGroupThatWantsTextCommandContext
  parent: Remora.Discord.Commands.Tests.ContextTests
  langs:
  - csharp
  - vb
  name: CanExecuteCommandFromGroupThatWantsTextCommandContext()
  nameWithType: ContextTests.CanExecuteCommandFromGroupThatWantsTextCommandContext()
  fullName: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsTextCommandContext()
  type: Method
  source:
    id: CanExecuteCommandFromGroupThatWantsTextCommandContext
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\ContextTests.cs
    startLine: 113
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests
  summary: Tests whether a command in a group that requires an <xref href="Remora.Discord.Commands.Contexts.TextCommandContext" data-throw-if-not-resolved="false"></xref> can be executed.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanExecuteCommandFromGroupThatWantsTextCommandContext()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanExecuteCommandFromGroupThatWantsTextCommandContext() As Task
  overload: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsTextCommandContext*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInteractionCommandContext
  commentId: M:Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInteractionCommandContext
  id: CanExecuteCommandFromGroupThatWantsInteractionCommandContext
  parent: Remora.Discord.Commands.Tests.ContextTests
  langs:
  - csharp
  - vb
  name: CanExecuteCommandFromGroupThatWantsInteractionCommandContext()
  nameWithType: ContextTests.CanExecuteCommandFromGroupThatWantsInteractionCommandContext()
  fullName: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInteractionCommandContext()
  type: Method
  source:
    id: CanExecuteCommandFromGroupThatWantsInteractionCommandContext
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\ContextTests.cs
    startLine: 126
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests
  summary: Tests whether a command in a group that requires an <xref href="Remora.Discord.Commands.Contexts.InteractionCommandContext" data-throw-if-not-resolved="false"></xref> can be executed.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task CanExecuteCommandFromGroupThatWantsInteractionCommandContext()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <Fact>

      Public Function CanExecuteCommandFromGroupThatWantsInteractionCommandContext() As Task
  overload: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInteractionCommandContext*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: Remora.Discord.Commands.Tests
  commentId: N:Remora.Discord.Commands.Tests
  href: Remora.html
  name: Remora.Discord.Commands.Tests
  nameWithType: Remora.Discord.Commands.Tests
  fullName: Remora.Discord.Commands.Tests
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Commands.Tests.ContextTests
  commentId: T:Remora.Discord.Commands.Tests.ContextTests
  href: Remora.Discord.Commands.Tests.ContextTests.html
  name: ContextTests
  nameWithType: ContextTests
  fullName: Remora.Discord.Commands.Tests.ContextTests
- uid: Remora.Discord.Commands.Tests.ContextTests.#ctor*
  commentId: Overload:Remora.Discord.Commands.Tests.ContextTests.#ctor
  href: Remora.Discord.Commands.Tests.ContextTests.html#Remora_Discord_Commands_Tests_ContextTests__ctor
  name: ContextTests
  nameWithType: ContextTests.ContextTests
  fullName: Remora.Discord.Commands.Tests.ContextTests.ContextTests
  nameWithType.vb: ContextTests.New
  fullName.vb: Remora.Discord.Commands.Tests.ContextTests.New
  name.vb: New
- uid: Remora.Discord.Commands.Contexts.ICommandContext
  commentId: T:Remora.Discord.Commands.Contexts.ICommandContext
  parent: Remora.Discord.Commands.Contexts
  href: Remora.Discord.Commands.Contexts.ICommandContext.html
  name: ICommandContext
  nameWithType: ICommandContext
  fullName: Remora.Discord.Commands.Contexts.ICommandContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInterfaceContext*
  commentId: Overload:Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInterfaceContext
  href: Remora.Discord.Commands.Tests.ContextTests.html#Remora_Discord_Commands_Tests_ContextTests_CanExecuteCommandFromGroupThatWantsInterfaceContext
  name: CanExecuteCommandFromGroupThatWantsInterfaceContext
  nameWithType: ContextTests.CanExecuteCommandFromGroupThatWantsInterfaceContext
  fullName: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInterfaceContext
- uid: Remora.Discord.Commands.Contexts
  commentId: N:Remora.Discord.Commands.Contexts
  href: Remora.html
  name: Remora.Discord.Commands.Contexts
  nameWithType: Remora.Discord.Commands.Contexts
  fullName: Remora.Discord.Commands.Contexts
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Contexts
    name: Contexts
    href: Remora.Discord.Commands.Contexts.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Contexts
    name: Contexts
    href: Remora.Discord.Commands.Contexts.html
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Commands.Contexts.MessageContext
  commentId: T:Remora.Discord.Commands.Contexts.MessageContext
  parent: Remora.Discord.Commands.Contexts
  href: Remora.Discord.Commands.Contexts.MessageContext.html
  name: MessageContext
  nameWithType: MessageContext
  fullName: Remora.Discord.Commands.Contexts.MessageContext
- uid: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsMessageContext*
  commentId: Overload:Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsMessageContext
  href: Remora.Discord.Commands.Tests.ContextTests.html#Remora_Discord_Commands_Tests_ContextTests_CanExecuteCommandFromGroupThatWantsMessageContext
  name: CanExecuteCommandFromGroupThatWantsMessageContext
  nameWithType: ContextTests.CanExecuteCommandFromGroupThatWantsMessageContext
  fullName: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsMessageContext
- uid: Remora.Discord.Commands.Contexts.InteractionContext
  commentId: T:Remora.Discord.Commands.Contexts.InteractionContext
  parent: Remora.Discord.Commands.Contexts
  href: Remora.Discord.Commands.Contexts.InteractionContext.html
  name: InteractionContext
  nameWithType: InteractionContext
  fullName: Remora.Discord.Commands.Contexts.InteractionContext
- uid: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInteractionContext*
  commentId: Overload:Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInteractionContext
  href: Remora.Discord.Commands.Tests.ContextTests.html#Remora_Discord_Commands_Tests_ContextTests_CanExecuteCommandFromGroupThatWantsInteractionContext
  name: CanExecuteCommandFromGroupThatWantsInteractionContext
  nameWithType: ContextTests.CanExecuteCommandFromGroupThatWantsInteractionContext
  fullName: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInteractionContext
- uid: Remora.Discord.Commands.Contexts.TextCommandContext
  commentId: T:Remora.Discord.Commands.Contexts.TextCommandContext
  href: Remora.Discord.Commands.Contexts.TextCommandContext.html
  name: TextCommandContext
  nameWithType: TextCommandContext
  fullName: Remora.Discord.Commands.Contexts.TextCommandContext
- uid: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsTextCommandContext*
  commentId: Overload:Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsTextCommandContext
  href: Remora.Discord.Commands.Tests.ContextTests.html#Remora_Discord_Commands_Tests_ContextTests_CanExecuteCommandFromGroupThatWantsTextCommandContext
  name: CanExecuteCommandFromGroupThatWantsTextCommandContext
  nameWithType: ContextTests.CanExecuteCommandFromGroupThatWantsTextCommandContext
  fullName: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsTextCommandContext
- uid: Remora.Discord.Commands.Contexts.InteractionCommandContext
  commentId: T:Remora.Discord.Commands.Contexts.InteractionCommandContext
  href: Remora.Discord.Commands.Contexts.InteractionCommandContext.html
  name: InteractionCommandContext
  nameWithType: InteractionCommandContext
  fullName: Remora.Discord.Commands.Contexts.InteractionCommandContext
- uid: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInteractionCommandContext*
  commentId: Overload:Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInteractionCommandContext
  href: Remora.Discord.Commands.Tests.ContextTests.html#Remora_Discord_Commands_Tests_ContextTests_CanExecuteCommandFromGroupThatWantsInteractionCommandContext
  name: CanExecuteCommandFromGroupThatWantsInteractionCommandContext
  nameWithType: ContextTests.CanExecuteCommandFromGroupThatWantsInteractionCommandContext
  fullName: Remora.Discord.Commands.Tests.ContextTests.CanExecuteCommandFromGroupThatWantsInteractionCommandContext
