### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  commentId: T:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  id: TypedCommands
  parent: Remora.Discord.Commands.Tests.Data.Valid
  children:
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithBoolValue(System.Boolean)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithByteValue(System.Byte)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithChannelValue(Remora.Discord.API.Abstractions.Objects.IChannel)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDecimalValue(System.Decimal)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDoubleValue(System.Double)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithEnumValue(Remora.Discord.Commands.Tests.Data.Valid.DummyEnum)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithFloatValue(System.Single)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithIntValue(System.Int32)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithLongValue(System.Int64)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithMemberValue(Remora.Discord.API.Abstractions.Objects.IGuildMember)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithRoleValue(Remora.Discord.API.Abstractions.Objects.IRole)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSByteValue(System.SByte)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithShortValue(System.Int16)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSnowflakeValue(Remora.Rest.Core.Snowflake)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithStringValue(System.String)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUIntValue(System.UInt32)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithULongValue(System.UInt64)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUShortValue(System.UInt16)
  - Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUserValue(Remora.Discord.API.Abstractions.Objects.IUser)
  langs:
  - csharp
  - vb
  name: TypedCommands
  nameWithType: TypedCommands
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  type: Class
  source:
    id: TypedCommands
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 34
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: 'public class TypedCommands : CommandGroup'
    content.vb: Public Class TypedCommands Inherits CommandGroup
  inheritance:
  - System.Object
  - Remora.Commands.Groups.CommandGroup
  inheritedMembers:
  - Remora.Commands.Groups.CommandGroup.CancellationToken
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSByteValue(System.SByte)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSByteValue(System.SByte)
  id: CommandWithSByteValue(System.SByte)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithSByteValue(sbyte)
  nameWithType: TypedCommands.CommandWithSByteValue(sbyte)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSByteValue(sbyte)
  type: Method
  source:
    id: CommandWithSByteValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 36
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("sbyte-value", new string[] { })]

      public Task<IResult> CommandWithSByteValue(sbyte value)
    parameters:
    - id: value
      type: System.SByte
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("sbyte-value", New String() { })>

      Public Function CommandWithSByteValue(value As SByte) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSByteValue*
  nameWithType.vb: TypedCommands.CommandWithSByteValue(SByte)
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSByteValue(SByte)
  name.vb: CommandWithSByteValue(SByte)
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithByteValue(System.Byte)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithByteValue(System.Byte)
  id: CommandWithByteValue(System.Byte)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithByteValue(byte)
  nameWithType: TypedCommands.CommandWithByteValue(byte)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithByteValue(byte)
  type: Method
  source:
    id: CommandWithByteValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 42
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("byte-value", new string[] { })]

      public Task<IResult> CommandWithByteValue(byte value)
    parameters:
    - id: value
      type: System.Byte
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("byte-value", New String() { })>

      Public Function CommandWithByteValue(value As Byte) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithByteValue*
  nameWithType.vb: TypedCommands.CommandWithByteValue(Byte)
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithByteValue(Byte)
  name.vb: CommandWithByteValue(Byte)
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithShortValue(System.Int16)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithShortValue(System.Int16)
  id: CommandWithShortValue(System.Int16)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithShortValue(short)
  nameWithType: TypedCommands.CommandWithShortValue(short)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithShortValue(short)
  type: Method
  source:
    id: CommandWithShortValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 48
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("short-value", new string[] { })]

      public Task<IResult> CommandWithShortValue(short value)
    parameters:
    - id: value
      type: System.Int16
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("short-value", New String() { })>

      Public Function CommandWithShortValue(value As Short) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithShortValue*
  nameWithType.vb: TypedCommands.CommandWithShortValue(Short)
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithShortValue(Short)
  name.vb: CommandWithShortValue(Short)
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUShortValue(System.UInt16)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUShortValue(System.UInt16)
  id: CommandWithUShortValue(System.UInt16)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithUShortValue(ushort)
  nameWithType: TypedCommands.CommandWithUShortValue(ushort)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUShortValue(ushort)
  type: Method
  source:
    id: CommandWithUShortValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 54
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("ushort-value", new string[] { })]

      public Task<IResult> CommandWithUShortValue(ushort value)
    parameters:
    - id: value
      type: System.UInt16
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("ushort-value", New String() { })>

      Public Function CommandWithUShortValue(value As UShort) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUShortValue*
  nameWithType.vb: TypedCommands.CommandWithUShortValue(UShort)
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUShortValue(UShort)
  name.vb: CommandWithUShortValue(UShort)
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithIntValue(System.Int32)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithIntValue(System.Int32)
  id: CommandWithIntValue(System.Int32)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithIntValue(int)
  nameWithType: TypedCommands.CommandWithIntValue(int)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithIntValue(int)
  type: Method
  source:
    id: CommandWithIntValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 60
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("int-value", new string[] { })]

      public Task<IResult> CommandWithIntValue(int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("int-value", New String() { })>

      Public Function CommandWithIntValue(value As Integer) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithIntValue*
  nameWithType.vb: TypedCommands.CommandWithIntValue(Integer)
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithIntValue(Integer)
  name.vb: CommandWithIntValue(Integer)
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUIntValue(System.UInt32)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUIntValue(System.UInt32)
  id: CommandWithUIntValue(System.UInt32)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithUIntValue(uint)
  nameWithType: TypedCommands.CommandWithUIntValue(uint)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUIntValue(uint)
  type: Method
  source:
    id: CommandWithUIntValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 66
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("uint-value", new string[] { })]

      public Task<IResult> CommandWithUIntValue(uint value)
    parameters:
    - id: value
      type: System.UInt32
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("uint-value", New String() { })>

      Public Function CommandWithUIntValue(value As UInteger) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUIntValue*
  nameWithType.vb: TypedCommands.CommandWithUIntValue(UInteger)
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUIntValue(UInteger)
  name.vb: CommandWithUIntValue(UInteger)
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithLongValue(System.Int64)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithLongValue(System.Int64)
  id: CommandWithLongValue(System.Int64)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithLongValue(long)
  nameWithType: TypedCommands.CommandWithLongValue(long)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithLongValue(long)
  type: Method
  source:
    id: CommandWithLongValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 72
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("long-value", new string[] { })]

      public Task<IResult> CommandWithLongValue(long value)
    parameters:
    - id: value
      type: System.Int64
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("long-value", New String() { })>

      Public Function CommandWithLongValue(value As Long) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithLongValue*
  nameWithType.vb: TypedCommands.CommandWithLongValue(Long)
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithLongValue(Long)
  name.vb: CommandWithLongValue(Long)
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithULongValue(System.UInt64)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithULongValue(System.UInt64)
  id: CommandWithULongValue(System.UInt64)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithULongValue(ulong)
  nameWithType: TypedCommands.CommandWithULongValue(ulong)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithULongValue(ulong)
  type: Method
  source:
    id: CommandWithULongValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 78
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("ulong-value", new string[] { })]

      public Task<IResult> CommandWithULongValue(ulong value)
    parameters:
    - id: value
      type: System.UInt64
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("ulong-value", New String() { })>

      Public Function CommandWithULongValue(value As ULong) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithULongValue*
  nameWithType.vb: TypedCommands.CommandWithULongValue(ULong)
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithULongValue(ULong)
  name.vb: CommandWithULongValue(ULong)
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithFloatValue(System.Single)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithFloatValue(System.Single)
  id: CommandWithFloatValue(System.Single)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithFloatValue(float)
  nameWithType: TypedCommands.CommandWithFloatValue(float)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithFloatValue(float)
  type: Method
  source:
    id: CommandWithFloatValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 84
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("float-value", new string[] { })]

      public Task<IResult> CommandWithFloatValue(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("float-value", New String() { })>

      Public Function CommandWithFloatValue(value As Single) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithFloatValue*
  nameWithType.vb: TypedCommands.CommandWithFloatValue(Single)
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithFloatValue(Single)
  name.vb: CommandWithFloatValue(Single)
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDoubleValue(System.Double)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDoubleValue(System.Double)
  id: CommandWithDoubleValue(System.Double)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithDoubleValue(double)
  nameWithType: TypedCommands.CommandWithDoubleValue(double)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDoubleValue(double)
  type: Method
  source:
    id: CommandWithDoubleValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 90
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("double-value", new string[] { })]

      public Task<IResult> CommandWithDoubleValue(double value)
    parameters:
    - id: value
      type: System.Double
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("double-value", New String() { })>

      Public Function CommandWithDoubleValue(value As Double) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDoubleValue*
  nameWithType.vb: TypedCommands.CommandWithDoubleValue(Double)
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDoubleValue(Double)
  name.vb: CommandWithDoubleValue(Double)
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDecimalValue(System.Decimal)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDecimalValue(System.Decimal)
  id: CommandWithDecimalValue(System.Decimal)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithDecimalValue(decimal)
  nameWithType: TypedCommands.CommandWithDecimalValue(decimal)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDecimalValue(decimal)
  type: Method
  source:
    id: CommandWithDecimalValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 96
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("decimal-value", new string[] { })]

      public Task<IResult> CommandWithDecimalValue(decimal value)
    parameters:
    - id: value
      type: System.Decimal
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("decimal-value", New String() { })>

      Public Function CommandWithDecimalValue(value As Decimal) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDecimalValue*
  nameWithType.vb: TypedCommands.CommandWithDecimalValue(Decimal)
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDecimalValue(Decimal)
  name.vb: CommandWithDecimalValue(Decimal)
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithStringValue(System.String)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithStringValue(System.String)
  id: CommandWithStringValue(System.String)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithStringValue(string)
  nameWithType: TypedCommands.CommandWithStringValue(string)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithStringValue(string)
  type: Method
  source:
    id: CommandWithStringValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 102
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("string-value", new string[] { })]

      public Task<IResult> CommandWithStringValue(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("string-value", New String() { })>

      Public Function CommandWithStringValue(value As String) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithStringValue*
  nameWithType.vb: TypedCommands.CommandWithStringValue(String)
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithStringValue(String)
  name.vb: CommandWithStringValue(String)
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithBoolValue(System.Boolean)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithBoolValue(System.Boolean)
  id: CommandWithBoolValue(System.Boolean)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithBoolValue(bool)
  nameWithType: TypedCommands.CommandWithBoolValue(bool)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithBoolValue(bool)
  type: Method
  source:
    id: CommandWithBoolValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 108
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("bool-value", new string[] { })]

      public Task<IResult> CommandWithBoolValue(bool value)
    parameters:
    - id: value
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("bool-value", New String() { })>

      Public Function CommandWithBoolValue(value As Boolean) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithBoolValue*
  nameWithType.vb: TypedCommands.CommandWithBoolValue(Boolean)
  fullName.vb: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithBoolValue(Boolean)
  name.vb: CommandWithBoolValue(Boolean)
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithRoleValue(Remora.Discord.API.Abstractions.Objects.IRole)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithRoleValue(Remora.Discord.API.Abstractions.Objects.IRole)
  id: CommandWithRoleValue(Remora.Discord.API.Abstractions.Objects.IRole)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithRoleValue(IRole)
  nameWithType: TypedCommands.CommandWithRoleValue(IRole)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithRoleValue(Remora.Discord.API.Abstractions.Objects.IRole)
  type: Method
  source:
    id: CommandWithRoleValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 114
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("role-value", new string[] { })]

      public Task<IResult> CommandWithRoleValue(IRole role)
    parameters:
    - id: role
      type: Remora.Discord.API.Abstractions.Objects.IRole
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("role-value", New String() { })>

      Public Function CommandWithRoleValue(role As IRole) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithRoleValue*
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUserValue(Remora.Discord.API.Abstractions.Objects.IUser)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUserValue(Remora.Discord.API.Abstractions.Objects.IUser)
  id: CommandWithUserValue(Remora.Discord.API.Abstractions.Objects.IUser)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithUserValue(IUser)
  nameWithType: TypedCommands.CommandWithUserValue(IUser)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUserValue(Remora.Discord.API.Abstractions.Objects.IUser)
  type: Method
  source:
    id: CommandWithUserValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 120
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("user-value", new string[] { })]

      public Task<IResult> CommandWithUserValue(IUser value)
    parameters:
    - id: value
      type: Remora.Discord.API.Abstractions.Objects.IUser
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("user-value", New String() { })>

      Public Function CommandWithUserValue(value As IUser) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUserValue*
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithMemberValue(Remora.Discord.API.Abstractions.Objects.IGuildMember)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithMemberValue(Remora.Discord.API.Abstractions.Objects.IGuildMember)
  id: CommandWithMemberValue(Remora.Discord.API.Abstractions.Objects.IGuildMember)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithMemberValue(IGuildMember)
  nameWithType: TypedCommands.CommandWithMemberValue(IGuildMember)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithMemberValue(Remora.Discord.API.Abstractions.Objects.IGuildMember)
  type: Method
  source:
    id: CommandWithMemberValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 126
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("member-value", new string[] { })]

      public Task<IResult> CommandWithMemberValue(IGuildMember value)
    parameters:
    - id: value
      type: Remora.Discord.API.Abstractions.Objects.IGuildMember
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("member-value", New String() { })>

      Public Function CommandWithMemberValue(value As IGuildMember) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithMemberValue*
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithChannelValue(Remora.Discord.API.Abstractions.Objects.IChannel)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithChannelValue(Remora.Discord.API.Abstractions.Objects.IChannel)
  id: CommandWithChannelValue(Remora.Discord.API.Abstractions.Objects.IChannel)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithChannelValue(IChannel)
  nameWithType: TypedCommands.CommandWithChannelValue(IChannel)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithChannelValue(Remora.Discord.API.Abstractions.Objects.IChannel)
  type: Method
  source:
    id: CommandWithChannelValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 132
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("channel-value", new string[] { })]

      public Task<IResult> CommandWithChannelValue(IChannel value)
    parameters:
    - id: value
      type: Remora.Discord.API.Abstractions.Objects.IChannel
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("channel-value", New String() { })>

      Public Function CommandWithChannelValue(value As IChannel) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithChannelValue*
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSnowflakeValue(Remora.Rest.Core.Snowflake)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSnowflakeValue(Remora.Rest.Core.Snowflake)
  id: CommandWithSnowflakeValue(Remora.Rest.Core.Snowflake)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithSnowflakeValue(Snowflake)
  nameWithType: TypedCommands.CommandWithSnowflakeValue(Snowflake)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSnowflakeValue(Remora.Rest.Core.Snowflake)
  type: Method
  source:
    id: CommandWithSnowflakeValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 138
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("snowflake-value", new string[] { })]

      public Task<IResult> CommandWithSnowflakeValue(Snowflake value)
    parameters:
    - id: value
      type: Remora.Rest.Core.Snowflake
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("snowflake-value", New String() { })>

      Public Function CommandWithSnowflakeValue(value As Snowflake) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSnowflakeValue*
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithEnumValue(Remora.Discord.Commands.Tests.Data.Valid.DummyEnum)
  commentId: M:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithEnumValue(Remora.Discord.Commands.Tests.Data.Valid.DummyEnum)
  id: CommandWithEnumValue(Remora.Discord.Commands.Tests.Data.Valid.DummyEnum)
  parent: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands
  langs:
  - csharp
  - vb
  name: CommandWithEnumValue(DummyEnum)
  nameWithType: TypedCommands.CommandWithEnumValue(DummyEnum)
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithEnumValue(Remora.Discord.Commands.Tests.Data.Valid.DummyEnum)
  type: Method
  source:
    id: CommandWithEnumValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Valid\TypedCommands.cs
    startLine: 144
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Valid
  syntax:
    content: >-
      [Command("enum-value", new string[] { })]

      public Task<IResult> CommandWithEnumValue(DummyEnum value)
    parameters:
    - id: value
      type: Remora.Discord.Commands.Tests.Data.Valid.DummyEnum
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
    content.vb: >-
      <Command("enum-value", New String() { })>

      Public Function CommandWithEnumValue(value As DummyEnum) As Task(Of IResult)
  overload: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithEnumValue*
references:
- uid: Remora.Discord.Commands.Tests.Data.Valid
  commentId: N:Remora.Discord.Commands.Tests.Data.Valid
  href: Remora.html
  name: Remora.Discord.Commands.Tests.Data.Valid
  nameWithType: Remora.Discord.Commands.Tests.Data.Valid
  fullName: Remora.Discord.Commands.Tests.Data.Valid
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Data
    name: Data
    href: Remora.Discord.Commands.Tests.Data.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Data.Valid
    name: Valid
    href: Remora.Discord.Commands.Tests.Data.Valid.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Data
    name: Data
    href: Remora.Discord.Commands.Tests.Data.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Data.Valid
    name: Valid
    href: Remora.Discord.Commands.Tests.Data.Valid.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Commands.Groups.CommandGroup
  commentId: T:Remora.Commands.Groups.CommandGroup
  parent: Remora.Commands.Groups
  isExternal: true
  name: CommandGroup
  nameWithType: CommandGroup
  fullName: Remora.Commands.Groups.CommandGroup
- uid: Remora.Commands.Groups.CommandGroup.CancellationToken
  commentId: P:Remora.Commands.Groups.CommandGroup.CancellationToken
  parent: Remora.Commands.Groups.CommandGroup
  isExternal: true
  name: CancellationToken
  nameWithType: CommandGroup.CancellationToken
  fullName: Remora.Commands.Groups.CommandGroup.CancellationToken
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Commands.Groups
  commentId: N:Remora.Commands.Groups
  isExternal: true
  name: Remora.Commands.Groups
  nameWithType: Remora.Commands.Groups
  fullName: Remora.Commands.Groups
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Commands
    name: Commands
    isExternal: true
  - name: .
  - uid: Remora.Commands.Groups
    name: Groups
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Commands
    name: Commands
    isExternal: true
  - name: .
  - uid: Remora.Commands.Groups
    name: Groups
    isExternal: true
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSByteValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSByteValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithSByteValue_System_SByte_
  name: CommandWithSByteValue
  nameWithType: TypedCommands.CommandWithSByteValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSByteValue
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.sbyte
  name: sbyte
  nameWithType: sbyte
  fullName: sbyte
  nameWithType.vb: SByte
  fullName.vb: SByte
  name.vb: SByte
- uid: System.Threading.Tasks.Task{Remora.Results.IResult}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.IResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IResult>
  nameWithType: Task<IResult>
  fullName: System.Threading.Tasks.Task<Remora.Results.IResult>
  nameWithType.vb: Task(Of IResult)
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.IResult)
  name.vb: Task(Of IResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.IResult
    name: IResult
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.IResult
    name: IResult
    isExternal: true
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithByteValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithByteValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithByteValue_System_Byte_
  name: CommandWithByteValue
  nameWithType: TypedCommands.CommandWithByteValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithByteValue
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithShortValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithShortValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithShortValue_System_Int16_
  name: CommandWithShortValue
  nameWithType: TypedCommands.CommandWithShortValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithShortValue
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUShortValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUShortValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithUShortValue_System_UInt16_
  name: CommandWithUShortValue
  nameWithType: TypedCommands.CommandWithUShortValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUShortValue
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithIntValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithIntValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithIntValue_System_Int32_
  name: CommandWithIntValue
  nameWithType: TypedCommands.CommandWithIntValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithIntValue
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUIntValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUIntValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithUIntValue_System_UInt32_
  name: CommandWithUIntValue
  nameWithType: TypedCommands.CommandWithUIntValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUIntValue
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithLongValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithLongValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithLongValue_System_Int64_
  name: CommandWithLongValue
  nameWithType: TypedCommands.CommandWithLongValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithLongValue
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithULongValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithULongValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithULongValue_System_UInt64_
  name: CommandWithULongValue
  nameWithType: TypedCommands.CommandWithULongValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithULongValue
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithFloatValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithFloatValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithFloatValue_System_Single_
  name: CommandWithFloatValue
  nameWithType: TypedCommands.CommandWithFloatValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithFloatValue
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDoubleValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDoubleValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithDoubleValue_System_Double_
  name: CommandWithDoubleValue
  nameWithType: TypedCommands.CommandWithDoubleValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDoubleValue
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDecimalValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDecimalValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithDecimalValue_System_Decimal_
  name: CommandWithDecimalValue
  nameWithType: TypedCommands.CommandWithDecimalValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithDecimalValue
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithStringValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithStringValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithStringValue_System_String_
  name: CommandWithStringValue
  nameWithType: TypedCommands.CommandWithStringValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithStringValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithBoolValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithBoolValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithBoolValue_System_Boolean_
  name: CommandWithBoolValue
  nameWithType: TypedCommands.CommandWithBoolValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithBoolValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithRoleValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithRoleValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithRoleValue_Remora_Discord_API_Abstractions_Objects_IRole_
  name: CommandWithRoleValue
  nameWithType: TypedCommands.CommandWithRoleValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithRoleValue
- uid: Remora.Discord.API.Abstractions.Objects.IRole
  commentId: T:Remora.Discord.API.Abstractions.Objects.IRole
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IRole.html
  name: IRole
  nameWithType: IRole
  fullName: Remora.Discord.API.Abstractions.Objects.IRole
- uid: Remora.Discord.API.Abstractions.Objects
  commentId: N:Remora.Discord.API.Abstractions.Objects
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Objects
  nameWithType: Remora.Discord.API.Abstractions.Objects
  fullName: Remora.Discord.API.Abstractions.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUserValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUserValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithUserValue_Remora_Discord_API_Abstractions_Objects_IUser_
  name: CommandWithUserValue
  nameWithType: TypedCommands.CommandWithUserValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithUserValue
- uid: Remora.Discord.API.Abstractions.Objects.IUser
  commentId: T:Remora.Discord.API.Abstractions.Objects.IUser
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IUser.html
  name: IUser
  nameWithType: IUser
  fullName: Remora.Discord.API.Abstractions.Objects.IUser
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithMemberValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithMemberValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithMemberValue_Remora_Discord_API_Abstractions_Objects_IGuildMember_
  name: CommandWithMemberValue
  nameWithType: TypedCommands.CommandWithMemberValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithMemberValue
- uid: Remora.Discord.API.Abstractions.Objects.IGuildMember
  commentId: T:Remora.Discord.API.Abstractions.Objects.IGuildMember
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IGuildMember.html
  name: IGuildMember
  nameWithType: IGuildMember
  fullName: Remora.Discord.API.Abstractions.Objects.IGuildMember
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithChannelValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithChannelValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithChannelValue_Remora_Discord_API_Abstractions_Objects_IChannel_
  name: CommandWithChannelValue
  nameWithType: TypedCommands.CommandWithChannelValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithChannelValue
- uid: Remora.Discord.API.Abstractions.Objects.IChannel
  commentId: T:Remora.Discord.API.Abstractions.Objects.IChannel
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IChannel.html
  name: IChannel
  nameWithType: IChannel
  fullName: Remora.Discord.API.Abstractions.Objects.IChannel
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSnowflakeValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSnowflakeValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithSnowflakeValue_Remora_Rest_Core_Snowflake_
  name: CommandWithSnowflakeValue
  nameWithType: TypedCommands.CommandWithSnowflakeValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithSnowflakeValue
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithEnumValue*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithEnumValue
  href: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.html#Remora_Discord_Commands_Tests_Data_Valid_TypedCommands_CommandWithEnumValue_Remora_Discord_Commands_Tests_Data_Valid_DummyEnum_
  name: CommandWithEnumValue
  nameWithType: TypedCommands.CommandWithEnumValue
  fullName: Remora.Discord.Commands.Tests.Data.Valid.TypedCommands.CommandWithEnumValue
- uid: Remora.Discord.Commands.Tests.Data.Valid.DummyEnum
  commentId: T:Remora.Discord.Commands.Tests.Data.Valid.DummyEnum
  parent: Remora.Discord.Commands.Tests.Data.Valid
  href: Remora.Discord.Commands.Tests.Data.Valid.DummyEnum.html
  name: DummyEnum
  nameWithType: DummyEnum
  fullName: Remora.Discord.Commands.Tests.Data.Valid.DummyEnum
