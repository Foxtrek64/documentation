### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync
  commentId: T:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync
  id: DiscordRestGuildAPITests.CreateGuildChannelAsync
  parent: Remora.Discord.Rest.Tests.API.Guild
  children:
  - Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  - Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsAnnouncementRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsForumRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsMediaRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsNullableRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsStageRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsTextRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsVoiceRequestCorrectly
  langs:
  - csharp
  - vb
  name: DiscordRestGuildAPITests.CreateGuildChannelAsync
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync
  type: Class
  source:
    id: CreateGuildChannelAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Guild\DiscordRestGuildAPITests.cs
    startLine: 634
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Guild
  summary: Tests the <xref href="Remora.Discord.Rest.API.DiscordRestGuildAPI.CreateGuildChannelAsync(Remora.Rest.Core.Snowflake%2cSystem.String%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bRemora.Discord.API.Abstractions.Objects.ChannelType%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.String%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bSystem.Int32%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bSystem.Int32%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bSystem.Int32%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bSystem.Int32%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyList%7bRemora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bRemora.Rest.Core.Snowflake%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bSystem.Boolean%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.String%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bRemora.Discord.API.Abstractions.Objects.VideoQualityMode%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bRemora.Discord.API.Abstractions.Objects.AutoArchiveDuration%7d%7d%2cRemora.Rest.Core.Optional%7bRemora.Discord.API.Abstractions.Objects.IDefaultReaction%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyList%7bRemora.Discord.API.Abstractions.Objects.IForumTag%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bRemora.Discord.API.Abstractions.Objects.SortOrder%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bRemora.Discord.API.Abstractions.Objects.ForumLayout%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bSystem.Int32%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.String%7d%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: 'public class DiscordRestGuildAPITests.CreateGuildChannelAsync : RestAPITestBase<IDiscordRestGuildAPI>'
    content.vb: Public Class DiscordRestGuildAPITests.CreateGuildChannelAsync Inherits RestAPITestBase(Of IDiscordRestGuildAPI)
  inheritance:
  - System.Object
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI}
  inheritedMembers:
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  commentId: M:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  id: '#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)'
  parent: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync
  langs:
  - csharp
  - vb
  name: CreateGuildChannelAsync(RestAPITestFixture)
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync.CreateGuildChannelAsync(RestAPITestFixture)
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.CreateGuildChannelAsync(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Guild\DiscordRestGuildAPITests.cs
    startLine: 640
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Guild
  summary: Initializes a new instance of the <xref href="Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public CreateGuildChannelAsync(RestAPITestFixture fixture)
    parameters:
    - id: fixture
      type: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
      description: The test fixture.
    content.vb: Public Sub New(fixture As RestAPITestFixture)
  overload: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.#ctor*
  nameWithType.vb: DiscordRestGuildAPITests.CreateGuildChannelAsync.New(RestAPITestFixture)
  fullName.vb: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.New(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  name.vb: New(RestAPITestFixture)
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsTextRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsTextRequestCorrectly
  id: PerformsTextRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsTextRequestCorrectly()
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsTextRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsTextRequestCorrectly()
  type: Method
  source:
    id: PerformsTextRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Guild\DiscordRestGuildAPITests.cs
    startLine: 649
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Guild
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsTextRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsTextRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsTextRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsAnnouncementRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsAnnouncementRequestCorrectly
  id: PerformsAnnouncementRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsAnnouncementRequestCorrectly()
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsAnnouncementRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsAnnouncementRequestCorrectly()
  type: Method
  source:
    id: PerformsAnnouncementRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Guild\DiscordRestGuildAPITests.cs
    startLine: 716
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Guild
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsAnnouncementRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsAnnouncementRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsAnnouncementRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsForumRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsForumRequestCorrectly
  id: PerformsForumRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsForumRequestCorrectly()
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsForumRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsForumRequestCorrectly()
  type: Method
  source:
    id: PerformsForumRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Guild\DiscordRestGuildAPITests.cs
    startLine: 780
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Guild
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsForumRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsForumRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsForumRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsMediaRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsMediaRequestCorrectly
  id: PerformsMediaRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsMediaRequestCorrectly()
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsMediaRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsMediaRequestCorrectly()
  type: Method
  source:
    id: PerformsMediaRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Guild\DiscordRestGuildAPITests.cs
    startLine: 859
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Guild
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsMediaRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsMediaRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsMediaRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsVoiceRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsVoiceRequestCorrectly
  id: PerformsVoiceRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsVoiceRequestCorrectly()
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsVoiceRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsVoiceRequestCorrectly()
  type: Method
  source:
    id: PerformsVoiceRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Guild\DiscordRestGuildAPITests.cs
    startLine: 932
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Guild
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsVoiceRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsVoiceRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsVoiceRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsStageRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsStageRequestCorrectly
  id: PerformsStageRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsStageRequestCorrectly()
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsStageRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsStageRequestCorrectly()
  type: Method
  source:
    id: PerformsStageRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Guild\DiscordRestGuildAPITests.cs
    startLine: 998
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Guild
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsStageRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsStageRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsStageRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsNullableRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsNullableRequestCorrectly
  id: PerformsNullableRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsNullableRequestCorrectly()
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsNullableRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsNullableRequestCorrectly()
  type: Method
  source:
    id: PerformsNullableRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Guild\DiscordRestGuildAPITests.cs
    startLine: 1064
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Guild
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsNullableRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsNullableRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsNullableRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: Remora.Discord.Rest.API.DiscordRestGuildAPI.CreateGuildChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.ChannelType}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IForumTag}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.SortOrder}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.ForumLayout}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestGuildAPI.CreateGuildChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.ChannelType}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IForumTag}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.SortOrder}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.ForumLayout}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: CreateGuildChannelAsync(Snowflake, string, Optional<ChannelType?>, Optional<string>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<bool?>, Optional<string>, Optional<VideoQualityMode?>, Optional<AutoArchiveDuration?>, Optional<IDefaultReaction>, Optional<IReadOnlyList<IForumTag>>, Optional<SortOrder?>, Optional<ForumLayout?>, Optional<int?>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestGuildAPI.CreateGuildChannelAsync(Snowflake, string, Optional<ChannelType?>, Optional<string>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<bool?>, Optional<string>, Optional<VideoQualityMode?>, Optional<AutoArchiveDuration?>, Optional<IDefaultReaction>, Optional<IReadOnlyList<IForumTag>>, Optional<SortOrder?>, Optional<ForumLayout?>, Optional<int?>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestGuildAPI.CreateGuildChannelAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelType?>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.VideoQualityMode?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDefaultReaction>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IForumTag>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.SortOrder?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ForumLayout?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestGuildAPI.CreateGuildChannelAsync(Snowflake, String, Optional(Of ChannelType?), Optional(Of String), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of Boolean?), Optional(Of String), Optional(Of VideoQualityMode?), Optional(Of AutoArchiveDuration?), Optional(Of IDefaultReaction), Optional(Of IReadOnlyList(Of IForumTag)), Optional(Of SortOrder?), Optional(Of ForumLayout?), Optional(Of Integer?), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestGuildAPI.CreateGuildChannelAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelType?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.VideoQualityMode?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDefaultReaction), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IForumTag)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.SortOrder?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ForumLayout?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: CreateGuildChannelAsync(Snowflake, String, Optional(Of ChannelType?), Optional(Of String), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of Boolean?), Optional(Of String), Optional(Of VideoQualityMode?), Optional(Of AutoArchiveDuration?), Optional(Of IDefaultReaction), Optional(Of IReadOnlyList(Of IForumTag)), Optional(Of SortOrder?), Optional(Of ForumLayout?), Optional(Of Integer?), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Rest.API.DiscordRestGuildAPI.CreateGuildChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.ChannelType}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IForumTag}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.SortOrder}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.ForumLayout}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: CreateGuildChannelAsync
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelType
    name: ChannelType
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.VideoQualityMode
    name: VideoQualityMode
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IDefaultReaction
    name: IDefaultReaction
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IForumTag
    name: IForumTag
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.SortOrder
    name: SortOrder
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ForumLayout
    name: ForumLayout
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.API.DiscordRestGuildAPI.CreateGuildChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.ChannelType}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IForumTag}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.SortOrder}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.ForumLayout}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: CreateGuildChannelAsync
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelType
    name: ChannelType
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.VideoQualityMode
    name: VideoQualityMode
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IDefaultReaction
    name: IDefaultReaction
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IForumTag
    name: IForumTag
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.SortOrder
    name: SortOrder
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ForumLayout
    name: ForumLayout
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.Tests.API.Guild
  commentId: N:Remora.Discord.Rest.Tests.API.Guild
  href: Remora.html
  name: Remora.Discord.Rest.Tests.API.Guild
  nameWithType: Remora.Discord.Rest.Tests.API.Guild
  fullName: Remora.Discord.Rest.Tests.API.Guild
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API
    name: API
    href: Remora.Discord.Rest.Tests.API.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Guild
    name: Guild
    href: Remora.Discord.Rest.Tests.API.Guild.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API
    name: API
    href: Remora.Discord.Rest.Tests.API.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Guild
    name: Guild
    href: Remora.Discord.Rest.Tests.API.Guild.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI}
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI}
  parent: Remora.Discord.Rest.Tests.TestBases
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  name: RestAPITestBase<IDiscordRestGuildAPI>
  nameWithType: RestAPITestBase<IDiscordRestGuildAPI>
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI>
  nameWithType.vb: RestAPITestBase(Of IDiscordRestGuildAPI)
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI)
  name.vb: RestAPITestBase(Of IDiscordRestGuildAPI)
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI
    name: IDiscordRestGuildAPI
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI
    name: IDiscordRestGuildAPI
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  parent: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI}
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateAPI(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<IDiscordRestGuildAPI>.CreateAPI(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI>.CreateAPI(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of IDiscordRestGuildAPI).CreateAPI(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI).CreateAPI(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateAPI(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  parent: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI}
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<IDiscordRestGuildAPI>.CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI>.CreateConfiguredAPIServices(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of IDiscordRestGuildAPI).CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI).CreateConfiguredAPIServices(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  name: RestAPITestBase<TAPI>
  nameWithType: RestAPITestBase<TAPI>
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>
  nameWithType.vb: RestAPITestBase(Of TAPI)
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI)
  name.vb: RestAPITestBase(Of TAPI)
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: <
  - name: TAPI
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TAPI
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases
  commentId: N:Remora.Discord.Rest.Tests.TestBases
  href: Remora.html
  name: Remora.Discord.Rest.Tests.TestBases
  nameWithType: Remora.Discord.Rest.Tests.TestBases
  fullName: Remora.Discord.Rest.Tests.TestBases
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.TestBases
    name: TestBases
    href: Remora.Discord.Rest.Tests.TestBases.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.TestBases
    name: TestBases
    href: Remora.Discord.Rest.Tests.TestBases.html
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  isExternal: true
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateAPI(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<TAPI>.CreateAPI(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>.CreateAPI(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of TAPI).CreateAPI(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI).CreateAPI(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateAPI(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  isExternal: true
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<TAPI>.CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>.CreateConfiguredAPIServices(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of TAPI).CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI).CreateConfiguredAPIServices(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync
  commentId: T:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync
  href: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.html
  name: DiscordRestGuildAPITests.CreateGuildChannelAsync
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests
    name: DiscordRestGuildAPITests
    href: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync
    name: CreateGuildChannelAsync
    href: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.html
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests
    name: DiscordRestGuildAPITests
    href: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync
    name: CreateGuildChannelAsync
    href: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.html
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.#ctor*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.#ctor
  href: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.html#Remora_Discord_Rest_Tests_API_Guild_DiscordRestGuildAPITests_CreateGuildChannelAsync__ctor_Remora_Discord_Rest_Tests_TestBases_RestAPITestFixture_
  name: CreateGuildChannelAsync
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync.CreateGuildChannelAsync
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.CreateGuildChannelAsync
  nameWithType.vb: DiscordRestGuildAPITests.CreateGuildChannelAsync.New
  fullName.vb: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.New
  name.vb: New
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
  parent: Remora.Discord.Rest.Tests.TestBases
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture.html
  name: RestAPITestFixture
  nameWithType: RestAPITestFixture
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsTextRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsTextRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.html#Remora_Discord_Rest_Tests_API_Guild_DiscordRestGuildAPITests_CreateGuildChannelAsync_PerformsTextRequestCorrectly
  name: PerformsTextRequestCorrectly
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsTextRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsTextRequestCorrectly
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsAnnouncementRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsAnnouncementRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.html#Remora_Discord_Rest_Tests_API_Guild_DiscordRestGuildAPITests_CreateGuildChannelAsync_PerformsAnnouncementRequestCorrectly
  name: PerformsAnnouncementRequestCorrectly
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsAnnouncementRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsAnnouncementRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsForumRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsForumRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.html#Remora_Discord_Rest_Tests_API_Guild_DiscordRestGuildAPITests_CreateGuildChannelAsync_PerformsForumRequestCorrectly
  name: PerformsForumRequestCorrectly
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsForumRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsForumRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsMediaRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsMediaRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.html#Remora_Discord_Rest_Tests_API_Guild_DiscordRestGuildAPITests_CreateGuildChannelAsync_PerformsMediaRequestCorrectly
  name: PerformsMediaRequestCorrectly
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsMediaRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsMediaRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsVoiceRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsVoiceRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.html#Remora_Discord_Rest_Tests_API_Guild_DiscordRestGuildAPITests_CreateGuildChannelAsync_PerformsVoiceRequestCorrectly
  name: PerformsVoiceRequestCorrectly
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsVoiceRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsVoiceRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsStageRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsStageRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.html#Remora_Discord_Rest_Tests_API_Guild_DiscordRestGuildAPITests_CreateGuildChannelAsync_PerformsStageRequestCorrectly
  name: PerformsStageRequestCorrectly
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsStageRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsStageRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsNullableRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsNullableRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.html#Remora_Discord_Rest_Tests_API_Guild_DiscordRestGuildAPITests_CreateGuildChannelAsync_PerformsNullableRequestCorrectly
  name: PerformsNullableRequestCorrectly
  nameWithType: DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsNullableRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Guild.DiscordRestGuildAPITests.CreateGuildChannelAsync.PerformsNullableRequestCorrectly
