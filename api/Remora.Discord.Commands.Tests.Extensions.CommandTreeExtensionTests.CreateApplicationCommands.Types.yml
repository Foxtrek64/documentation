### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types
  commentId: T:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types
  id: CommandTreeExtensionTests.CreateApplicationCommands.Types
  parent: Remora.Discord.Commands.Tests.Extensions
  children:
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.ComplexTestData
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.CreatesTypedOptionsCorrectly(System.Type,System.String,Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType,System.Action{Remora.Discord.API.Abstractions.Objects.ChannelType}[],System.Action{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOptionChoice}[])
  langs:
  - csharp
  - vb
  name: CommandTreeExtensionTests.CreateApplicationCommands.Types
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Types
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types
  type: Class
  source:
    id: Types
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 999
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests various cases related to types and type hints.
  example: []
  syntax:
    content: public class CommandTreeExtensionTests.CreateApplicationCommands.Types
    content.vb: Public Class CommandTreeExtensionTests.CreateApplicationCommands.Types
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.ComplexTestData
  commentId: P:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.ComplexTestData
  id: ComplexTestData
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types
  langs:
  - csharp
  - vb
  name: ComplexTestData
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Types.ComplexTestData
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.ComplexTestData
  type: Property
  source:
    id: ComplexTestData
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 1004
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Gets complex test data.
  example: []
  syntax:
    content: public static IEnumerable<object?[]> ComplexTestData { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Object[]}
    content.vb: Public Shared ReadOnly Property ComplexTestData As IEnumerable(Of Object())
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.ComplexTestData*
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.CreatesTypedOptionsCorrectly(System.Type,System.String,Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType,System.Action{Remora.Discord.API.Abstractions.Objects.ChannelType}[],System.Action{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOptionChoice}[])
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.CreatesTypedOptionsCorrectly(System.Type,System.String,Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType,System.Action{Remora.Discord.API.Abstractions.Objects.ChannelType}[],System.Action{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOptionChoice}[])
  id: CreatesTypedOptionsCorrectly(System.Type,System.String,Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType,System.Action{Remora.Discord.API.Abstractions.Objects.ChannelType}[],System.Action{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOptionChoice}[])
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types
  langs:
  - csharp
  - vb
  name: CreatesTypedOptionsCorrectly(Type, string, ApplicationCommandOptionType, Action<ChannelType>[]?, Action<IApplicationCommandOptionChoice>[]?)
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Types.CreatesTypedOptionsCorrectly(Type, string, ApplicationCommandOptionType, Action<ChannelType>[]?, Action<IApplicationCommandOptionChoice>[]?)
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.CreatesTypedOptionsCorrectly(System.Type, string, Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType, System.Action<Remora.Discord.API.Abstractions.Objects.ChannelType>[]?, System.Action<Remora.Discord.API.Abstractions.Objects.IApplicationCommandOptionChoice>[]?)
  type: Method
  source:
    id: CreatesTypedOptionsCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 1103
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method responds appropriately to a successful case.
  example: []
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { typeof(TypedCommands), "sbyte-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(TypedCommands), "byte-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(TypedCommands), "short-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(TypedCommands), "ushort-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(TypedCommands), "int-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(TypedCommands), "uint-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(TypedCommands), "long-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(TypedCommands), "ulong-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(TypedCommands), "float-value", ApplicationCommandOptionType.Number })]

      [InlineData(new object[] { typeof(TypedCommands), "double-value", ApplicationCommandOptionType.Number })]

      [InlineData(new object[] { typeof(TypedCommands), "decimal-value", ApplicationCommandOptionType.Number })]

      [InlineData(new object[] { typeof(TypedCommands), "string-value", ApplicationCommandOptionType.String })]

      [InlineData(new object[] { typeof(TypedCommands), "bool-value", ApplicationCommandOptionType.Boolean })]

      [InlineData(new object[] { typeof(TypedCommands), "role-value", ApplicationCommandOptionType.Role })]

      [InlineData(new object[] { typeof(TypedCommands), "user-value", ApplicationCommandOptionType.User })]

      [InlineData(new object[] { typeof(TypedCommands), "member-value", ApplicationCommandOptionType.User })]

      [InlineData(new object[] { typeof(TypedCommands), "channel-value", ApplicationCommandOptionType.Channel })]

      [InlineData(new object[] { typeof(TypedCommands), "snowflake-value", ApplicationCommandOptionType.String })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-sbyte-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-byte-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-short-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-ushort-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-int-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-uint-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-long-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-ulong-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-float-value", ApplicationCommandOptionType.Number })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-double-value", ApplicationCommandOptionType.Number })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-decimal-value", ApplicationCommandOptionType.Number })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-string-value", ApplicationCommandOptionType.String })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-bool-value", ApplicationCommandOptionType.Boolean })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-role-value", ApplicationCommandOptionType.Role })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-user-value", ApplicationCommandOptionType.User })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-member-value", ApplicationCommandOptionType.User })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-channel-value", ApplicationCommandOptionType.Channel })]

      [InlineData(new object[] { typeof(NullableTypedCommands), "nullable-snowflake-value", ApplicationCommandOptionType.String })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-sbyte-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-byte-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-short-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-ushort-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-int-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-uint-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-long-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-ulong-value", ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-float-value", ApplicationCommandOptionType.Number })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-double-value", ApplicationCommandOptionType.Number })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-decimal-value", ApplicationCommandOptionType.Number })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-string-value", ApplicationCommandOptionType.String })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-bool-value", ApplicationCommandOptionType.Boolean })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-role-value", ApplicationCommandOptionType.Role })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-user-value", ApplicationCommandOptionType.User })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-member-value", ApplicationCommandOptionType.User })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-channel-value", ApplicationCommandOptionType.Channel })]

      [InlineData(new object[] { typeof(OptionalTypedCommands), "optional-snowflake-value", ApplicationCommandOptionType.String })]

      [MemberData("ComplexTestData", new object[] { })]

      public void CreatesTypedOptionsCorrectly(Type moduleType, string commandName, ApplicationCommandOptionType type, Action<ChannelType>[]? channelTypeAsserter = null, Action<IApplicationCommandOptionChoice>[]? choiceAsserter = null)
    parameters:
    - id: moduleType
      type: System.Type
      description: The module to register.
    - id: commandName
      type: System.String
      description: The name of the command to search for.
    - id: type
      type: Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType
      description: The type of the actual command.
    - id: channelTypeAsserter
      type: System.Action{Remora.Discord.API.Abstractions.Objects.ChannelType}[]
      description: The channel types the parameter should be constrained to, if any.
    - id: choiceAsserter
      type: System.Action{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOptionChoice}[]
      description: The choices that should have been created, if any.
    content.vb: >-
      <Theory>

      <InlineData(New Object() { GetType(TypedCommands), "sbyte-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(TypedCommands), "byte-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(TypedCommands), "short-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(TypedCommands), "ushort-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(TypedCommands), "int-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(TypedCommands), "uint-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(TypedCommands), "long-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(TypedCommands), "ulong-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(TypedCommands), "float-value", ApplicationCommandOptionType.Number })>

      <InlineData(New Object() { GetType(TypedCommands), "double-value", ApplicationCommandOptionType.Number })>

      <InlineData(New Object() { GetType(TypedCommands), "decimal-value", ApplicationCommandOptionType.Number })>

      <InlineData(New Object() { GetType(TypedCommands), "string-value", ApplicationCommandOptionType.String })>

      <InlineData(New Object() { GetType(TypedCommands), "bool-value", ApplicationCommandOptionType.Boolean })>

      <InlineData(New Object() { GetType(TypedCommands), "role-value", ApplicationCommandOptionType.Role })>

      <InlineData(New Object() { GetType(TypedCommands), "user-value", ApplicationCommandOptionType.User })>

      <InlineData(New Object() { GetType(TypedCommands), "member-value", ApplicationCommandOptionType.User })>

      <InlineData(New Object() { GetType(TypedCommands), "channel-value", ApplicationCommandOptionType.Channel })>

      <InlineData(New Object() { GetType(TypedCommands), "snowflake-value", ApplicationCommandOptionType.String })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-sbyte-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-byte-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-short-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-ushort-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-int-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-uint-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-long-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-ulong-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-float-value", ApplicationCommandOptionType.Number })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-double-value", ApplicationCommandOptionType.Number })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-decimal-value", ApplicationCommandOptionType.Number })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-string-value", ApplicationCommandOptionType.String })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-bool-value", ApplicationCommandOptionType.Boolean })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-role-value", ApplicationCommandOptionType.Role })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-user-value", ApplicationCommandOptionType.User })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-member-value", ApplicationCommandOptionType.User })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-channel-value", ApplicationCommandOptionType.Channel })>

      <InlineData(New Object() { GetType(NullableTypedCommands), "nullable-snowflake-value", ApplicationCommandOptionType.String })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-sbyte-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-byte-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-short-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-ushort-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-int-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-uint-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-long-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-ulong-value", ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-float-value", ApplicationCommandOptionType.Number })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-double-value", ApplicationCommandOptionType.Number })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-decimal-value", ApplicationCommandOptionType.Number })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-string-value", ApplicationCommandOptionType.String })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-bool-value", ApplicationCommandOptionType.Boolean })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-role-value", ApplicationCommandOptionType.Role })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-user-value", ApplicationCommandOptionType.User })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-member-value", ApplicationCommandOptionType.User })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-channel-value", ApplicationCommandOptionType.Channel })>

      <InlineData(New Object() { GetType(OptionalTypedCommands), "optional-snowflake-value", ApplicationCommandOptionType.String })>

      <MemberData("ComplexTestData", New Object() { })>

      Public Sub CreatesTypedOptionsCorrectly(moduleType As Type, commandName As String, type As ApplicationCommandOptionType, channelTypeAsserter As Action(Of ChannelType)() = Nothing, choiceAsserter As Action(Of IApplicationCommandOptionChoice)() = Nothing)
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.CreatesTypedOptionsCorrectly*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: CommandTreeExtensionTests.CreateApplicationCommands.Types.CreatesTypedOptionsCorrectly(Type, String, ApplicationCommandOptionType, Action(Of ChannelType)(), Action(Of IApplicationCommandOptionChoice)())
  fullName.vb: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.CreatesTypedOptionsCorrectly(System.Type, String, Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType, System.Action(Of Remora.Discord.API.Abstractions.Objects.ChannelType)(), System.Action(Of Remora.Discord.API.Abstractions.Objects.IApplicationCommandOptionChoice)())
  name.vb: CreatesTypedOptionsCorrectly(Type, String, ApplicationCommandOptionType, Action(Of ChannelType)(), Action(Of IApplicationCommandOptionChoice)())
references:
- uid: Remora.Discord.Commands.Tests.Extensions
  commentId: N:Remora.Discord.Commands.Tests.Extensions
  href: Remora.html
  name: Remora.Discord.Commands.Tests.Extensions
  nameWithType: Remora.Discord.Commands.Tests.Extensions
  fullName: Remora.Discord.Commands.Tests.Extensions
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Extensions
    name: Extensions
    href: Remora.Discord.Commands.Tests.Extensions.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Extensions
    name: Extensions
    href: Remora.Discord.Commands.Tests.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.ComplexTestData*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.ComplexTestData
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Types_ComplexTestData
  name: ComplexTestData
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Types.ComplexTestData
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.ComplexTestData
- uid: System.Collections.Generic.IEnumerable{System.Object[]}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<object[]>
  nameWithType: IEnumerable<object[]>
  fullName: System.Collections.Generic.IEnumerable<object[]>
  nameWithType.vb: IEnumerable(Of Object())
  fullName.vb: System.Collections.Generic.IEnumerable(Of Object())
  name.vb: IEnumerable(Of Object())
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.CreatesTypedOptionsCorrectly*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.CreatesTypedOptionsCorrectly
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_CreateApplicationCommands_Types_CreatesTypedOptionsCorrectly_System_Type_System_String_Remora_Discord_API_Abstractions_Objects_ApplicationCommandOptionType_System_Action_Remora_Discord_API_Abstractions_Objects_ChannelType____System_Action_Remora_Discord_API_Abstractions_Objects_IApplicationCommandOptionChoice____
  name: CreatesTypedOptionsCorrectly
  nameWithType: CommandTreeExtensionTests.CreateApplicationCommands.Types.CreatesTypedOptionsCorrectly
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.CreateApplicationCommands.Types.CreatesTypedOptionsCorrectly
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType
  commentId: T:Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType.html
  name: ApplicationCommandOptionType
  nameWithType: ApplicationCommandOptionType
  fullName: Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType
- uid: System.Action{Remora.Discord.API.Abstractions.Objects.ChannelType}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ChannelType>[]
  nameWithType: Action<ChannelType>[]
  fullName: System.Action<Remora.Discord.API.Abstractions.Objects.ChannelType>[]
  nameWithType.vb: Action(Of ChannelType)()
  fullName.vb: System.Action(Of Remora.Discord.API.Abstractions.Objects.ChannelType)()
  name.vb: Action(Of ChannelType)()
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelType
    name: ChannelType
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelType
    name: ChannelType
  - name: )
  - name: (
  - name: )
- uid: System.Action{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOptionChoice}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IApplicationCommandOptionChoice>[]
  nameWithType: Action<IApplicationCommandOptionChoice>[]
  fullName: System.Action<Remora.Discord.API.Abstractions.Objects.IApplicationCommandOptionChoice>[]
  nameWithType.vb: Action(Of IApplicationCommandOptionChoice)()
  fullName.vb: System.Action(Of Remora.Discord.API.Abstractions.Objects.IApplicationCommandOptionChoice)()
  name.vb: Action(Of IApplicationCommandOptionChoice)()
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationCommandOptionChoice
    name: IApplicationCommandOptionChoice
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationCommandOptionChoice
    name: IApplicationCommandOptionChoice
  - name: )
  - name: (
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects
  commentId: N:Remora.Discord.API.Abstractions.Objects
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Objects
  nameWithType: Remora.Discord.API.Abstractions.Objects
  fullName: Remora.Discord.API.Abstractions.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
