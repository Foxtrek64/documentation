### YamlMime:ManagedReference
items:
- uid: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2
  commentId: T:Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2
  id: VoiceGatewayTestBase`2
  parent: Remora.Discord.API.Tests.TestBases
  children:
  - Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2.#ctor(Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture)
  - Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2.DeserializedCorrectType(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  langs:
  - csharp
  - vb
  name: VoiceGatewayTestBase<TType, TEventDataSource>
  nameWithType: VoiceGatewayTestBase<TType, TEventDataSource>
  fullName: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase<TType, TEventDataSource>
  type: Class
  source:
    id: VoiceGatewayTestBase
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\TestBases\VoiceGatewayTestBase.cs
    startLine: 32
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.TestBases
  summary: >-
    Acts as a base class for testing JSON-backed types in the Discord API. This class contains common baseline

    tests for all types.
  example: []
  syntax:
    content: 'public abstract class VoiceGatewayTestBase<TType, TEventDataSource> : JsonBackedTypeTestBase<IVoicePayload, TEventDataSource> where TType : IVoiceGatewayPayloadData where TEventDataSource : TheoryData, new()'
    typeParameters:
    - id: TType
      description: The type under test.
    - id: TEventDataSource
    content.vb: Public MustInherit Class VoiceGatewayTestBase(Of TType As IVoiceGatewayPayloadData, TEventDataSource As {TheoryData, New}) Inherits JsonBackedTypeTestBase(Of IVoicePayload, TEventDataSource)
  inheritance:
  - System.Object
  - Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}
  derivedClasses:
  - Remora.Discord.API.Tests.TestBases.VoiceGatewayCommandTestBase`1
  - Remora.Discord.API.Tests.TestBases.VoiceGatewayEventTestBase`1
  inheritedMembers:
  - Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}.SampleSource
  - Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}.Options
  - Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}.AssertOptions
  - Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}.AllowUnknownEvents
  - Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  - Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  - Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: VoiceGatewayTestBase(Of TType, TEventDataSource)
  fullName.vb: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase(Of TType, TEventDataSource)
  name.vb: VoiceGatewayTestBase(Of TType, TEventDataSource)
- uid: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2.#ctor(Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture)
  commentId: M:Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2.#ctor(Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture)
  id: '#ctor(Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture)'
  parent: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2
  langs:
  - csharp
  - vb
  name: VoiceGatewayTestBase(JsonBackedTypeTestFixture)
  nameWithType: VoiceGatewayTestBase<TType, TEventDataSource>.VoiceGatewayTestBase(JsonBackedTypeTestFixture)
  fullName: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase<TType, TEventDataSource>.VoiceGatewayTestBase(Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\TestBases\VoiceGatewayTestBase.cs
    startLine: 41
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.TestBases
  summary: Initializes a new instance of the <xref href="Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase%602" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected VoiceGatewayTestBase(JsonBackedTypeTestFixture fixture)
    parameters:
    - id: fixture
      type: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture
      description: The test fixture.
    content.vb: Protected Sub New(fixture As JsonBackedTypeTestFixture)
  overload: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2.#ctor*
  nameWithType.vb: VoiceGatewayTestBase(Of TType, TEventDataSource).New(JsonBackedTypeTestFixture)
  fullName.vb: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase(Of TType, TEventDataSource).New(Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture)
  name.vb: New(JsonBackedTypeTestFixture)
- uid: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2.DeserializedCorrectType(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  commentId: M:Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2.DeserializedCorrectType(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  id: DeserializedCorrectType(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  parent: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2
  langs:
  - csharp
  - vb
  name: DeserializedCorrectType(SampleDataDescriptor)
  nameWithType: VoiceGatewayTestBase<TType, TEventDataSource>.DeserializedCorrectType(SampleDataDescriptor)
  fullName: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase<TType, TEventDataSource>.DeserializedCorrectType(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  type: Method
  source:
    id: DeserializedCorrectType
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\TestBases\VoiceGatewayTestBase.cs
    startLine: 51
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.TestBases
  summary: Tests whether the type can be deserialized from a JSON object.
  example: []
  syntax:
    content: >-
      [SkippableTheory(new Type[] { })]

      [MemberData("SampleSource", new object[] { }, DisableDiscoveryEnumeration = true)]

      public Task DeserializedCorrectType(SampleDataDescriptor sampleDataFile)
    parameters:
    - id: sampleDataFile
      type: Remora.Discord.API.Tests.Services.SampleDataDescriptor
      description: The sample data.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous unit test.
    content.vb: >-
      <SkippableTheory(New Type() { })>

      <MemberData("SampleSource", New Object() { }, DisableDiscoveryEnumeration:=True)>

      Public Function DeserializedCorrectType(sampleDataFile As SampleDataDescriptor) As Task
  overload: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2.DeserializedCorrectType*
  nameWithType.vb: VoiceGatewayTestBase(Of TType, TEventDataSource).DeserializedCorrectType(SampleDataDescriptor)
  fullName.vb: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase(Of TType, TEventDataSource).DeserializedCorrectType(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
references:
- uid: Remora.Discord.API.Tests.TestBases
  commentId: N:Remora.Discord.API.Tests.TestBases
  href: Remora.html
  name: Remora.Discord.API.Tests.TestBases
  nameWithType: Remora.Discord.API.Tests.TestBases
  fullName: Remora.Discord.API.Tests.TestBases
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Tests
    name: Tests
    href: Remora.Discord.API.Tests.html
  - name: .
  - uid: Remora.Discord.API.Tests.TestBases
    name: TestBases
    href: Remora.Discord.API.Tests.TestBases.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Tests
    name: Tests
    href: Remora.Discord.API.Tests.html
  - name: .
  - uid: Remora.Discord.API.Tests.TestBases
    name: TestBases
    href: Remora.Discord.API.Tests.TestBases.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}
  commentId: T:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,`1}
  parent: Remora.Discord.API.Tests.TestBases
  definition: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html
  name: JsonBackedTypeTestBase<IVoicePayload, TEventDataSource>
  nameWithType: JsonBackedTypeTestBase<IVoicePayload, TEventDataSource>
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload, TEventDataSource>
  nameWithType.vb: JsonBackedTypeTestBase(Of IVoicePayload, TEventDataSource)
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload, TEventDataSource)
  name.vb: JsonBackedTypeTestBase(Of IVoicePayload, TEventDataSource)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2
    name: JsonBackedTypeTestBase
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload
    name: IVoicePayload
  - name: ','
  - name: " "
  - name: TEventDataSource
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2
    name: JsonBackedTypeTestBase
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload
    name: IVoicePayload
  - name: ','
  - name: " "
  - name: TEventDataSource
  - name: )
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}.SampleSource
  commentId: P:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,`1}.SampleSource
  parent: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}
  definition: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.SampleSource
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_SampleSource
  name: SampleSource
  nameWithType: JsonBackedTypeTestBase<IVoicePayload, TEventDataSource>.SampleSource
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload, TEventDataSource>.SampleSource
  nameWithType.vb: JsonBackedTypeTestBase(Of IVoicePayload, TEventDataSource).SampleSource
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload, TEventDataSource).SampleSource
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}.Options
  commentId: P:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,`1}.Options
  parent: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}
  definition: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.Options
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_Options
  name: Options
  nameWithType: JsonBackedTypeTestBase<IVoicePayload, TEventDataSource>.Options
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload, TEventDataSource>.Options
  nameWithType.vb: JsonBackedTypeTestBase(Of IVoicePayload, TEventDataSource).Options
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload, TEventDataSource).Options
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}.AssertOptions
  commentId: P:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,`1}.AssertOptions
  parent: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}
  definition: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.AssertOptions
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_AssertOptions
  name: AssertOptions
  nameWithType: JsonBackedTypeTestBase<IVoicePayload, TEventDataSource>.AssertOptions
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload, TEventDataSource>.AssertOptions
  nameWithType.vb: JsonBackedTypeTestBase(Of IVoicePayload, TEventDataSource).AssertOptions
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload, TEventDataSource).AssertOptions
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}.AllowUnknownEvents
  commentId: P:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,`1}.AllowUnknownEvents
  parent: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}
  definition: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.AllowUnknownEvents
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_AllowUnknownEvents
  name: AllowUnknownEvents
  nameWithType: JsonBackedTypeTestBase<IVoicePayload, TEventDataSource>.AllowUnknownEvents
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload, TEventDataSource>.AllowUnknownEvents
  nameWithType.vb: JsonBackedTypeTestBase(Of IVoicePayload, TEventDataSource).AllowUnknownEvents
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload, TEventDataSource).AllowUnknownEvents
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  commentId: M:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,`1}.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  parent: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}
  definition: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanDeserialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  name: CanDeserialize(SampleDataDescriptor)
  nameWithType: JsonBackedTypeTestBase<IVoicePayload, TEventDataSource>.CanDeserialize(SampleDataDescriptor)
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload, TEventDataSource>.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  nameWithType.vb: JsonBackedTypeTestBase(Of IVoicePayload, TEventDataSource).CanDeserialize(SampleDataDescriptor)
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload, TEventDataSource).CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,`1}.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: CanDeserialize
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanDeserialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,`1}.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: CanDeserialize
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanDeserialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  commentId: M:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,`1}.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  parent: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}
  definition: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanSerialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  name: CanSerialize(SampleDataDescriptor)
  nameWithType: JsonBackedTypeTestBase<IVoicePayload, TEventDataSource>.CanSerialize(SampleDataDescriptor)
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload, TEventDataSource>.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  nameWithType.vb: JsonBackedTypeTestBase(Of IVoicePayload, TEventDataSource).CanSerialize(SampleDataDescriptor)
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload, TEventDataSource).CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,`1}.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: CanSerialize
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanSerialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,`1}.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: CanSerialize
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanSerialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  commentId: M:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,`1}.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  parent: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,{TEventDataSource}}
  definition: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_SurvivesRoundTrip_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  name: SurvivesRoundTrip(SampleDataDescriptor)
  nameWithType: JsonBackedTypeTestBase<IVoicePayload, TEventDataSource>.SurvivesRoundTrip(SampleDataDescriptor)
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload, TEventDataSource>.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  nameWithType.vb: JsonBackedTypeTestBase(Of IVoicePayload, TEventDataSource).SurvivesRoundTrip(SampleDataDescriptor)
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload, TEventDataSource).SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,`1}.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: SurvivesRoundTrip
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_SurvivesRoundTrip_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.VoiceGateway.IVoicePayload,`1}.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: SurvivesRoundTrip
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_SurvivesRoundTrip_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2
  commentId: T:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html
  name: JsonBackedTypeTestBase<TType, TSampleSource>
  nameWithType: JsonBackedTypeTestBase<TType, TSampleSource>
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<TType, TSampleSource>
  nameWithType.vb: JsonBackedTypeTestBase(Of TType, TSampleSource)
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of TType, TSampleSource)
  name.vb: JsonBackedTypeTestBase(Of TType, TSampleSource)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2
    name: JsonBackedTypeTestBase
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html
  - name: <
  - name: TType
  - name: ','
  - name: " "
  - name: TSampleSource
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2
    name: JsonBackedTypeTestBase
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TSampleSource
  - name: )
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.SampleSource
  commentId: P:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.SampleSource
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_SampleSource
  name: SampleSource
  nameWithType: JsonBackedTypeTestBase<TType, TSampleSource>.SampleSource
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<TType, TSampleSource>.SampleSource
  nameWithType.vb: JsonBackedTypeTestBase(Of TType, TSampleSource).SampleSource
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of TType, TSampleSource).SampleSource
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.Options
  commentId: P:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.Options
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_Options
  name: Options
  nameWithType: JsonBackedTypeTestBase<TType, TSampleSource>.Options
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<TType, TSampleSource>.Options
  nameWithType.vb: JsonBackedTypeTestBase(Of TType, TSampleSource).Options
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of TType, TSampleSource).Options
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.AssertOptions
  commentId: P:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.AssertOptions
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_AssertOptions
  name: AssertOptions
  nameWithType: JsonBackedTypeTestBase<TType, TSampleSource>.AssertOptions
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<TType, TSampleSource>.AssertOptions
  nameWithType.vb: JsonBackedTypeTestBase(Of TType, TSampleSource).AssertOptions
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of TType, TSampleSource).AssertOptions
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.AllowUnknownEvents
  commentId: P:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.AllowUnknownEvents
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_AllowUnknownEvents
  name: AllowUnknownEvents
  nameWithType: JsonBackedTypeTestBase<TType, TSampleSource>.AllowUnknownEvents
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<TType, TSampleSource>.AllowUnknownEvents
  nameWithType.vb: JsonBackedTypeTestBase(Of TType, TSampleSource).AllowUnknownEvents
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of TType, TSampleSource).AllowUnknownEvents
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  commentId: M:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanDeserialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  name: CanDeserialize(SampleDataDescriptor)
  nameWithType: JsonBackedTypeTestBase<TType, TSampleSource>.CanDeserialize(SampleDataDescriptor)
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<TType, TSampleSource>.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  nameWithType.vb: JsonBackedTypeTestBase(Of TType, TSampleSource).CanDeserialize(SampleDataDescriptor)
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of TType, TSampleSource).CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: CanDeserialize
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanDeserialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: CanDeserialize
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanDeserialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  commentId: M:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanSerialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  name: CanSerialize(SampleDataDescriptor)
  nameWithType: JsonBackedTypeTestBase<TType, TSampleSource>.CanSerialize(SampleDataDescriptor)
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<TType, TSampleSource>.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  nameWithType.vb: JsonBackedTypeTestBase(Of TType, TSampleSource).CanSerialize(SampleDataDescriptor)
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of TType, TSampleSource).CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: CanSerialize
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanSerialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: CanSerialize
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanSerialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  commentId: M:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_SurvivesRoundTrip_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  name: SurvivesRoundTrip(SampleDataDescriptor)
  nameWithType: JsonBackedTypeTestBase<TType, TSampleSource>.SurvivesRoundTrip(SampleDataDescriptor)
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<TType, TSampleSource>.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  nameWithType.vb: JsonBackedTypeTestBase(Of TType, TSampleSource).SurvivesRoundTrip(SampleDataDescriptor)
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of TType, TSampleSource).SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: SurvivesRoundTrip
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_SurvivesRoundTrip_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: SurvivesRoundTrip
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_SurvivesRoundTrip_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
- uid: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2
  commentId: T:Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2
  href: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase-2.html
  name: VoiceGatewayTestBase<TType, TEventDataSource>
  nameWithType: VoiceGatewayTestBase<TType, TEventDataSource>
  fullName: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase<TType, TEventDataSource>
  nameWithType.vb: VoiceGatewayTestBase(Of TType, TEventDataSource)
  fullName.vb: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase(Of TType, TEventDataSource)
  name.vb: VoiceGatewayTestBase(Of TType, TEventDataSource)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2
    name: VoiceGatewayTestBase
    href: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase-2.html
  - name: <
  - name: TType
  - name: ','
  - name: " "
  - name: TEventDataSource
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2
    name: VoiceGatewayTestBase
    href: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TEventDataSource
  - name: )
- uid: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2.#ctor*
  commentId: Overload:Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2.#ctor
  href: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase-2.html#Remora_Discord_API_Tests_TestBases_VoiceGatewayTestBase_2__ctor_Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestFixture_
  name: VoiceGatewayTestBase
  nameWithType: VoiceGatewayTestBase<TType, TEventDataSource>.VoiceGatewayTestBase
  fullName: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase<TType, TEventDataSource>.VoiceGatewayTestBase
  nameWithType.vb: VoiceGatewayTestBase(Of TType, TEventDataSource).New
  fullName.vb: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase(Of TType, TEventDataSource).New
  name.vb: New
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture
  commentId: T:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture
  parent: Remora.Discord.API.Tests.TestBases
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture.html
  name: JsonBackedTypeTestFixture
  nameWithType: JsonBackedTypeTestFixture
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2.DeserializedCorrectType*
  commentId: Overload:Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase`2.DeserializedCorrectType
  href: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase-2.html#Remora_Discord_API_Tests_TestBases_VoiceGatewayTestBase_2_DeserializedCorrectType_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  name: DeserializedCorrectType
  nameWithType: VoiceGatewayTestBase<TType, TEventDataSource>.DeserializedCorrectType
  fullName: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase<TType, TEventDataSource>.DeserializedCorrectType
  nameWithType.vb: VoiceGatewayTestBase(Of TType, TEventDataSource).DeserializedCorrectType
  fullName.vb: Remora.Discord.API.Tests.TestBases.VoiceGatewayTestBase(Of TType, TEventDataSource).DeserializedCorrectType
- uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
  commentId: T:Remora.Discord.API.Tests.Services.SampleDataDescriptor
  parent: Remora.Discord.API.Tests.Services
  href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  name: SampleDataDescriptor
  nameWithType: SampleDataDescriptor
  fullName: Remora.Discord.API.Tests.Services.SampleDataDescriptor
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.API.Tests.Services
  commentId: N:Remora.Discord.API.Tests.Services
  href: Remora.html
  name: Remora.Discord.API.Tests.Services
  nameWithType: Remora.Discord.API.Tests.Services
  fullName: Remora.Discord.API.Tests.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Tests
    name: Tests
    href: Remora.Discord.API.Tests.html
  - name: .
  - uid: Remora.Discord.API.Tests.Services
    name: Services
    href: Remora.Discord.API.Tests.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Tests
    name: Tests
    href: Remora.Discord.API.Tests.html
  - name: .
  - uid: Remora.Discord.API.Tests.Services
    name: Services
    href: Remora.Discord.API.Tests.Services.html
