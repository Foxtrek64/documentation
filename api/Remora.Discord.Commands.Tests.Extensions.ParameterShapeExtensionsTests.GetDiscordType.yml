### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType
  commentId: T:Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType
  id: ParameterShapeExtensionsTests.GetDiscordType
  parent: Remora.Discord.Commands.Tests.Extensions
  children:
  - Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithTypeHintAttributeCorrectly(System.Type)
  - Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithoutTypeHintAttributeCorrectly(System.Type,Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType)
  langs:
  - csharp
  - vb
  name: ParameterShapeExtensionsTests.GetDiscordType
  nameWithType: ParameterShapeExtensionsTests.GetDiscordType
  fullName: Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType
  type: Class
  source:
    id: GetDiscordType
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\ParameterShapeExtensionsTests.cs
    startLine: 67
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests the <xref href="Remora.Discord.Commands.Extensions.ParameterShapeExtensions.GetDiscordType(Remora.Commands.Signatures.IParameterShape)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: public class ParameterShapeExtensionsTests.GetDiscordType
    content.vb: Public Class ParameterShapeExtensionsTests.GetDiscordType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithoutTypeHintAttributeCorrectly(System.Type,Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType)
  commentId: M:Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithoutTypeHintAttributeCorrectly(System.Type,Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType)
  id: ReturnsWithoutTypeHintAttributeCorrectly(System.Type,Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType)
  parent: Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType
  langs:
  - csharp
  - vb
  name: ReturnsWithoutTypeHintAttributeCorrectly(Type, ApplicationCommandOptionType)
  nameWithType: ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithoutTypeHintAttributeCorrectly(Type, ApplicationCommandOptionType)
  fullName: Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithoutTypeHintAttributeCorrectly(System.Type, Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType)
  type: Method
  source:
    id: ReturnsWithoutTypeHintAttributeCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\ParameterShapeExtensionsTests.cs
    startLine: 74
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method performs as expected in multiple cases.
  example: []
  syntax:
    content: >-
      [InlineData(new object[] { typeof(bool), ApplicationCommandOptionType.Boolean })]

      [InlineData(new object[] { typeof(byte), ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(sbyte), ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(ushort), ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(short), ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(uint), ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(int), ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(ulong), ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(long), ApplicationCommandOptionType.Integer })]

      [InlineData(new object[] { typeof(float), ApplicationCommandOptionType.Number })]

      [InlineData(new object[] { typeof(double), ApplicationCommandOptionType.Number })]

      [InlineData(new object[] { typeof(decimal), ApplicationCommandOptionType.Number })]

      [InlineData(new object[] { typeof(string), ApplicationCommandOptionType.String })]

      [InlineData(new object[] { typeof(IPartialRole), ApplicationCommandOptionType.Role })]

      [InlineData(new object[] { typeof(IRole), ApplicationCommandOptionType.Role })]

      [InlineData(new object[] { typeof(IPartialUser), ApplicationCommandOptionType.User })]

      [InlineData(new object[] { typeof(IUser), ApplicationCommandOptionType.User })]

      [InlineData(new object[] { typeof(IPartialGuildMember), ApplicationCommandOptionType.User })]

      [InlineData(new object[] { typeof(IGuildMember), ApplicationCommandOptionType.User })]

      [InlineData(new object[] { typeof(IPartialChannel), ApplicationCommandOptionType.Channel })]

      [InlineData(new object[] { typeof(IChannel), ApplicationCommandOptionType.Channel })]

      [InlineData(new object[] { typeof(IPartialAttachment), ApplicationCommandOptionType.Attachment })]

      [InlineData(new object[] { typeof(IAttachment), ApplicationCommandOptionType.Attachment })]

      [Theory]

      public void ReturnsWithoutTypeHintAttributeCorrectly(Type parameterType, ApplicationCommandOptionType expectedResult)
    parameters:
    - id: parameterType
      type: System.Type
      description: The parameter type.
    - id: expectedResult
      type: Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType
      description: The expected result.
    content.vb: >-
      <InlineData(New Object() { GetType(Boolean), ApplicationCommandOptionType.Boolean })>

      <InlineData(New Object() { GetType(Byte), ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(SByte), ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(UShort), ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(Short), ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(UInteger), ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(Integer), ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(ULong), ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(Long), ApplicationCommandOptionType.Integer })>

      <InlineData(New Object() { GetType(Single), ApplicationCommandOptionType.Number })>

      <InlineData(New Object() { GetType(Double), ApplicationCommandOptionType.Number })>

      <InlineData(New Object() { GetType(Decimal), ApplicationCommandOptionType.Number })>

      <InlineData(New Object() { GetType(String), ApplicationCommandOptionType.String })>

      <InlineData(New Object() { GetType(IPartialRole), ApplicationCommandOptionType.Role })>

      <InlineData(New Object() { GetType(IRole), ApplicationCommandOptionType.Role })>

      <InlineData(New Object() { GetType(IPartialUser), ApplicationCommandOptionType.User })>

      <InlineData(New Object() { GetType(IUser), ApplicationCommandOptionType.User })>

      <InlineData(New Object() { GetType(IPartialGuildMember), ApplicationCommandOptionType.User })>

      <InlineData(New Object() { GetType(IGuildMember), ApplicationCommandOptionType.User })>

      <InlineData(New Object() { GetType(IPartialChannel), ApplicationCommandOptionType.Channel })>

      <InlineData(New Object() { GetType(IChannel), ApplicationCommandOptionType.Channel })>

      <InlineData(New Object() { GetType(IPartialAttachment), ApplicationCommandOptionType.Attachment })>

      <InlineData(New Object() { GetType(IAttachment), ApplicationCommandOptionType.Attachment })>

      <Theory>

      Public Sub ReturnsWithoutTypeHintAttributeCorrectly(parameterType As Type, expectedResult As ApplicationCommandOptionType)
  overload: Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithoutTypeHintAttributeCorrectly*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithTypeHintAttributeCorrectly(System.Type)
  commentId: M:Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithTypeHintAttributeCorrectly(System.Type)
  id: ReturnsWithTypeHintAttributeCorrectly(System.Type)
  parent: Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType
  langs:
  - csharp
  - vb
  name: ReturnsWithTypeHintAttributeCorrectly(Type)
  nameWithType: ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithTypeHintAttributeCorrectly(Type)
  fullName: Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithTypeHintAttributeCorrectly(System.Type)
  type: Method
  source:
    id: ReturnsWithTypeHintAttributeCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\ParameterShapeExtensionsTests.cs
    startLine: 117
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method performs as expected in multiple cases.
  example: []
  syntax:
    content: >-
      [InlineData(new object[] { typeof(bool) })]

      [InlineData(new object[] { typeof(byte) })]

      [InlineData(new object[] { typeof(short) })]

      [InlineData(new object[] { typeof(int) })]

      [InlineData(new object[] { typeof(long) })]

      [InlineData(new object[] { typeof(float) })]

      [InlineData(new object[] { typeof(double) })]

      [InlineData(new object[] { typeof(decimal) })]

      [InlineData(new object[] { typeof(string) })]

      [InlineData(new object[] { typeof(IPartialRole) })]

      [InlineData(new object[] { typeof(IPartialUser) })]

      [InlineData(new object[] { typeof(IPartialGuildMember) })]

      [InlineData(new object[] { typeof(IPartialChannel) })]

      [InlineData(new object[] { typeof(IPartialAttachment) })]

      [Theory]

      public void ReturnsWithTypeHintAttributeCorrectly(Type parameterType)
    parameters:
    - id: parameterType
      type: System.Type
      description: The parameter type.
    content.vb: >-
      <InlineData(New Object() { GetType(Boolean) })>

      <InlineData(New Object() { GetType(Byte) })>

      <InlineData(New Object() { GetType(Short) })>

      <InlineData(New Object() { GetType(Integer) })>

      <InlineData(New Object() { GetType(Long) })>

      <InlineData(New Object() { GetType(Single) })>

      <InlineData(New Object() { GetType(Double) })>

      <InlineData(New Object() { GetType(Decimal) })>

      <InlineData(New Object() { GetType(String) })>

      <InlineData(New Object() { GetType(IPartialRole) })>

      <InlineData(New Object() { GetType(IPartialUser) })>

      <InlineData(New Object() { GetType(IPartialGuildMember) })>

      <InlineData(New Object() { GetType(IPartialChannel) })>

      <InlineData(New Object() { GetType(IPartialAttachment) })>

      <Theory>

      Public Sub ReturnsWithTypeHintAttributeCorrectly(parameterType As Type)
  overload: Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithTypeHintAttributeCorrectly*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
references:
- uid: Remora.Discord.Commands.Extensions.ParameterShapeExtensions.GetDiscordType(Remora.Commands.Signatures.IParameterShape)
  commentId: M:Remora.Discord.Commands.Extensions.ParameterShapeExtensions.GetDiscordType(Remora.Commands.Signatures.IParameterShape)
  isExternal: true
  name: GetDiscordType(IParameterShape)
  nameWithType: ParameterShapeExtensions.GetDiscordType(IParameterShape)
  fullName: Remora.Discord.Commands.Extensions.ParameterShapeExtensions.GetDiscordType(Remora.Commands.Signatures.IParameterShape)
  spec.csharp:
  - uid: Remora.Discord.Commands.Extensions.ParameterShapeExtensions.GetDiscordType(Remora.Commands.Signatures.IParameterShape)
    name: GetDiscordType
  - name: (
  - uid: Remora.Commands.Signatures.IParameterShape
    name: IParameterShape
    isExternal: true
  - name: )
  spec.vb:
  - uid: Remora.Discord.Commands.Extensions.ParameterShapeExtensions.GetDiscordType(Remora.Commands.Signatures.IParameterShape)
    name: GetDiscordType
  - name: (
  - uid: Remora.Commands.Signatures.IParameterShape
    name: IParameterShape
    isExternal: true
  - name: )
- uid: Remora.Discord.Commands.Tests.Extensions
  commentId: N:Remora.Discord.Commands.Tests.Extensions
  href: Remora.html
  name: Remora.Discord.Commands.Tests.Extensions
  nameWithType: Remora.Discord.Commands.Tests.Extensions
  fullName: Remora.Discord.Commands.Tests.Extensions
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Extensions
    name: Extensions
    href: Remora.Discord.Commands.Tests.Extensions.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Extensions
    name: Extensions
    href: Remora.Discord.Commands.Tests.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithoutTypeHintAttributeCorrectly*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithoutTypeHintAttributeCorrectly
  href: Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.html#Remora_Discord_Commands_Tests_Extensions_ParameterShapeExtensionsTests_GetDiscordType_ReturnsWithoutTypeHintAttributeCorrectly_System_Type_Remora_Discord_API_Abstractions_Objects_ApplicationCommandOptionType_
  name: ReturnsWithoutTypeHintAttributeCorrectly
  nameWithType: ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithoutTypeHintAttributeCorrectly
  fullName: Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithoutTypeHintAttributeCorrectly
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType
  commentId: T:Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType.html
  name: ApplicationCommandOptionType
  nameWithType: ApplicationCommandOptionType
  fullName: Remora.Discord.API.Abstractions.Objects.ApplicationCommandOptionType
- uid: Remora.Discord.API.Abstractions.Objects
  commentId: N:Remora.Discord.API.Abstractions.Objects
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Objects
  nameWithType: Remora.Discord.API.Abstractions.Objects
  fullName: Remora.Discord.API.Abstractions.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
- uid: Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithTypeHintAttributeCorrectly*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithTypeHintAttributeCorrectly
  href: Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.html#Remora_Discord_Commands_Tests_Extensions_ParameterShapeExtensionsTests_GetDiscordType_ReturnsWithTypeHintAttributeCorrectly_System_Type_
  name: ReturnsWithTypeHintAttributeCorrectly
  nameWithType: ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithTypeHintAttributeCorrectly
  fullName: Remora.Discord.Commands.Tests.Extensions.ParameterShapeExtensionsTests.GetDiscordType.ReturnsWithTypeHintAttributeCorrectly
