### YamlMime:ManagedReference
items:
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  commentId: T:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  id: DiscordPermissionSetTests
  parent: Remora.Discord.API.Tests.Objects
  children:
  - Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.#ctor(Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture)
  - Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissions
  - Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberAllowOverwrites
  - Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberDenyOverwrites
  - Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleAllowOverwrites
  - Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleDenyOverwrites
  - Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberWithRolePermissions
  - Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanGetPermissions
  - Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermission
  - Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte
  - Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentTextPermission
  - Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentVoicePermission
  - Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingPermission
  - Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingTextPermission
  - Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingVoicePermission
  - Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForLargeIntegers
  langs:
  - csharp
  - vb
  name: DiscordPermissionSetTests
  nameWithType: DiscordPermissionSetTests
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  type: Class
  source:
    id: DiscordPermissionSetTests
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 35
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  summary: Tests the <xref href="Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet" data-throw-if-not-resolved="false"></xref> type.
  example: []
  syntax:
    content: 'public class DiscordPermissionSetTests : ObjectTestBase<IDiscordPermissionSet>'
    content.vb: Public Class DiscordPermissionSetTests Inherits ObjectTestBase(Of IDiscordPermissionSet)
  inheritance:
  - System.Object
  - Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}
  - Remora.Discord.API.Tests.TestBases.ObjectTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}
  inheritedMembers:
  - Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.SampleSource
  - Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.Options
  - Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.AssertOptions
  - Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.AllowUnknownEvents
  - Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  - Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  - Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.#ctor(Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture)
  commentId: M:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.#ctor(Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture)
  id: '#ctor(Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture)'
  parent: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  langs:
  - csharp
  - vb
  name: DiscordPermissionSetTests(JsonBackedTypeTestFixture)
  nameWithType: DiscordPermissionSetTests.DiscordPermissionSetTests(JsonBackedTypeTestFixture)
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.DiscordPermissionSetTests(Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 41
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  summary: Initializes a new instance of the <xref href="Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public DiscordPermissionSetTests(JsonBackedTypeTestFixture fixture)
    parameters:
    - id: fixture
      type: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture
      description: The test fixture.
    content.vb: Public Sub New(fixture As JsonBackedTypeTestFixture)
  overload: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.#ctor*
  nameWithType.vb: DiscordPermissionSetTests.New(JsonBackedTypeTestFixture)
  fullName.vb: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.New(Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture)
  name.vb: New(JsonBackedTypeTestFixture)
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingPermission
  commentId: M:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingPermission
  id: HasPermissionReturnsTrueForExistingPermission
  parent: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  langs:
  - csharp
  - vb
  name: HasPermissionReturnsTrueForExistingPermission()
  nameWithType: DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingPermission()
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingPermission()
  type: Method
  source:
    id: HasPermissionReturnsTrueForExistingPermission
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 46
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  syntax:
    content: >-
      [Fact]

      public void HasPermissionReturnsTrueForExistingPermission()
    content.vb: >-
      <Fact>

      Public Sub HasPermissionReturnsTrueForExistingPermission()
  overload: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingPermission*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermission
  commentId: M:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermission
  id: HasPermissionReturnsFalseForNonExistentPermission
  parent: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  langs:
  - csharp
  - vb
  name: HasPermissionReturnsFalseForNonExistentPermission()
  nameWithType: DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermission()
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermission()
  type: Method
  source:
    id: HasPermissionReturnsFalseForNonExistentPermission
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 55
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  syntax:
    content: >-
      [Fact]

      public void HasPermissionReturnsFalseForNonExistentPermission()
    content.vb: >-
      <Fact>

      Public Sub HasPermissionReturnsFalseForNonExistentPermission()
  overload: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermission*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte
  commentId: M:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte
  id: HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte
  parent: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  langs:
  - csharp
  - vb
  name: HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte()
  nameWithType: DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte()
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte()
  type: Method
  source:
    id: HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 64
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  syntax:
    content: >-
      [Fact]

      public void HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte()
    content.vb: >-
      <Fact>

      Public Sub HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte()
  overload: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingTextPermission
  commentId: M:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingTextPermission
  id: HasPermissionReturnsTrueForExistingTextPermission
  parent: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  langs:
  - csharp
  - vb
  name: HasPermissionReturnsTrueForExistingTextPermission()
  nameWithType: DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingTextPermission()
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingTextPermission()
  type: Method
  source:
    id: HasPermissionReturnsTrueForExistingTextPermission
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 73
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  syntax:
    content: >-
      [Fact]

      public void HasPermissionReturnsTrueForExistingTextPermission()
    content.vb: >-
      <Fact>

      Public Sub HasPermissionReturnsTrueForExistingTextPermission()
  overload: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingTextPermission*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentTextPermission
  commentId: M:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentTextPermission
  id: HasPermissionReturnsFalseForNonExistentTextPermission
  parent: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  langs:
  - csharp
  - vb
  name: HasPermissionReturnsFalseForNonExistentTextPermission()
  nameWithType: DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentTextPermission()
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentTextPermission()
  type: Method
  source:
    id: HasPermissionReturnsFalseForNonExistentTextPermission
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 82
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  syntax:
    content: >-
      [Fact]

      public void HasPermissionReturnsFalseForNonExistentTextPermission()
    content.vb: >-
      <Fact>

      Public Sub HasPermissionReturnsFalseForNonExistentTextPermission()
  overload: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentTextPermission*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingVoicePermission
  commentId: M:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingVoicePermission
  id: HasPermissionReturnsTrueForExistingVoicePermission
  parent: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  langs:
  - csharp
  - vb
  name: HasPermissionReturnsTrueForExistingVoicePermission()
  nameWithType: DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingVoicePermission()
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingVoicePermission()
  type: Method
  source:
    id: HasPermissionReturnsTrueForExistingVoicePermission
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 91
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  syntax:
    content: >-
      [Fact]

      public void HasPermissionReturnsTrueForExistingVoicePermission()
    content.vb: >-
      <Fact>

      Public Sub HasPermissionReturnsTrueForExistingVoicePermission()
  overload: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingVoicePermission*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentVoicePermission
  commentId: M:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentVoicePermission
  id: HasPermissionReturnsFalseForNonExistentVoicePermission
  parent: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  langs:
  - csharp
  - vb
  name: HasPermissionReturnsFalseForNonExistentVoicePermission()
  nameWithType: DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentVoicePermission()
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentVoicePermission()
  type: Method
  source:
    id: HasPermissionReturnsFalseForNonExistentVoicePermission
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 100
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  syntax:
    content: >-
      [Fact]

      public void HasPermissionReturnsFalseForNonExistentVoicePermission()
    content.vb: >-
      <Fact>

      Public Sub HasPermissionReturnsFalseForNonExistentVoicePermission()
  overload: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentVoicePermission*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForLargeIntegers
  commentId: M:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForLargeIntegers
  id: HasPermissionReturnsTrueForLargeIntegers
  parent: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  langs:
  - csharp
  - vb
  name: HasPermissionReturnsTrueForLargeIntegers()
  nameWithType: DiscordPermissionSetTests.HasPermissionReturnsTrueForLargeIntegers()
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForLargeIntegers()
  type: Method
  source:
    id: HasPermissionReturnsTrueForLargeIntegers
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 113
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  summary: >-
    Tests that <xref href="Remora.Discord.API.Objects.DiscordPermissionSet.HasPermission(Remora.Discord.API.Abstractions.Objects.DiscordPermission)" data-throw-if-not-resolved="false"></xref> works correctly for large

    integers that are considered signed as default by <xref href="System.Numerics.BigInteger" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [Fact]

      public void HasPermissionReturnsTrueForLargeIntegers()
    content.vb: >-
      <Fact>

      Public Sub HasPermissionReturnsTrueForLargeIntegers()
  overload: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForLargeIntegers*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissions
  commentId: M:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissions
  id: CanComputeMemberPermissions
  parent: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  langs:
  - csharp
  - vb
  name: CanComputeMemberPermissions()
  nameWithType: DiscordPermissionSetTests.CanComputeMemberPermissions()
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissions()
  type: Method
  source:
    id: CanComputeMemberPermissions
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 131
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  syntax:
    content: >-
      [Fact]

      public void CanComputeMemberPermissions()
    content.vb: >-
      <Fact>

      Public Sub CanComputeMemberPermissions()
  overload: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissions*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberAllowOverwrites
  commentId: M:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberAllowOverwrites
  id: CanComputeMemberPermissionsWithMemberAllowOverwrites
  parent: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  langs:
  - csharp
  - vb
  name: CanComputeMemberPermissionsWithMemberAllowOverwrites()
  nameWithType: DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberAllowOverwrites()
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberAllowOverwrites()
  type: Method
  source:
    id: CanComputeMemberPermissionsWithMemberAllowOverwrites
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 154
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  syntax:
    content: >-
      [Fact]

      public void CanComputeMemberPermissionsWithMemberAllowOverwrites()
    content.vb: >-
      <Fact>

      Public Sub CanComputeMemberPermissionsWithMemberAllowOverwrites()
  overload: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberAllowOverwrites*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberDenyOverwrites
  commentId: M:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberDenyOverwrites
  id: CanComputeMemberPermissionsWithMemberDenyOverwrites
  parent: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  langs:
  - csharp
  - vb
  name: CanComputeMemberPermissionsWithMemberDenyOverwrites()
  nameWithType: DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberDenyOverwrites()
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberDenyOverwrites()
  type: Method
  source:
    id: CanComputeMemberPermissionsWithMemberDenyOverwrites
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 191
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  syntax:
    content: >-
      [Fact]

      public void CanComputeMemberPermissionsWithMemberDenyOverwrites()
    content.vb: >-
      <Fact>

      Public Sub CanComputeMemberPermissionsWithMemberDenyOverwrites()
  overload: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberDenyOverwrites*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberWithRolePermissions
  commentId: M:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberWithRolePermissions
  id: CanComputeMemberWithRolePermissions
  parent: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  langs:
  - csharp
  - vb
  name: CanComputeMemberWithRolePermissions()
  nameWithType: DiscordPermissionSetTests.CanComputeMemberWithRolePermissions()
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberWithRolePermissions()
  type: Method
  source:
    id: CanComputeMemberWithRolePermissions
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 223
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  syntax:
    content: >-
      [Fact]

      public void CanComputeMemberWithRolePermissions()
    content.vb: >-
      <Fact>

      Public Sub CanComputeMemberWithRolePermissions()
  overload: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberWithRolePermissions*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleAllowOverwrites
  commentId: M:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleAllowOverwrites
  id: CanComputeMemberPermissionsWithRoleAllowOverwrites
  parent: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  langs:
  - csharp
  - vb
  name: CanComputeMemberPermissionsWithRoleAllowOverwrites()
  nameWithType: DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleAllowOverwrites()
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleAllowOverwrites()
  type: Method
  source:
    id: CanComputeMemberPermissionsWithRoleAllowOverwrites
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 253
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  syntax:
    content: >-
      [Fact]

      public void CanComputeMemberPermissionsWithRoleAllowOverwrites()
    content.vb: >-
      <Fact>

      Public Sub CanComputeMemberPermissionsWithRoleAllowOverwrites()
  overload: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleAllowOverwrites*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleDenyOverwrites
  commentId: M:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleDenyOverwrites
  id: CanComputeMemberPermissionsWithRoleDenyOverwrites
  parent: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  langs:
  - csharp
  - vb
  name: CanComputeMemberPermissionsWithRoleDenyOverwrites()
  nameWithType: DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleDenyOverwrites()
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleDenyOverwrites()
  type: Method
  source:
    id: CanComputeMemberPermissionsWithRoleDenyOverwrites
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 298
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  syntax:
    content: >-
      [Fact]

      public void CanComputeMemberPermissionsWithRoleDenyOverwrites()
    content.vb: >-
      <Fact>

      Public Sub CanComputeMemberPermissionsWithRoleDenyOverwrites()
  overload: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleDenyOverwrites*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanGetPermissions
  commentId: M:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanGetPermissions
  id: CanGetPermissions
  parent: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  langs:
  - csharp
  - vb
  name: CanGetPermissions()
  nameWithType: DiscordPermissionSetTests.CanGetPermissions()
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanGetPermissions()
  type: Method
  source:
    id: CanGetPermissions
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.API.Tests\API\Objects\Permissions\DiscordPermissionSetTests.cs
    startLine: 341
  assemblies:
  - Remora.Discord.API.Tests
  namespace: Remora.Discord.API.Tests.Objects
  syntax:
    content: >-
      [Fact]

      public void CanGetPermissions()
    content.vb: >-
      <Fact>

      Public Sub CanGetPermissions()
  overload: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanGetPermissions*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
  commentId: T:Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet.html
  name: IDiscordPermissionSet
  nameWithType: IDiscordPermissionSet
  fullName: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
- uid: Remora.Discord.API.Tests.Objects
  commentId: N:Remora.Discord.API.Tests.Objects
  href: Remora.html
  name: Remora.Discord.API.Tests.Objects
  nameWithType: Remora.Discord.API.Tests.Objects
  fullName: Remora.Discord.API.Tests.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Tests
    name: Tests
    href: Remora.Discord.API.Tests.html
  - name: .
  - uid: Remora.Discord.API.Tests.Objects
    name: Objects
    href: Remora.Discord.API.Tests.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Tests
    name: Tests
    href: Remora.Discord.API.Tests.html
  - name: .
  - uid: Remora.Discord.API.Tests.Objects
    name: Objects
    href: Remora.Discord.API.Tests.Objects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}
  commentId: T:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}
  parent: Remora.Discord.API.Tests.TestBases
  definition: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html
  name: JsonBackedTypeTestBase<IDiscordPermissionSet, SampleObjectDataSource<IDiscordPermissionSet>>
  nameWithType: JsonBackedTypeTestBase<IDiscordPermissionSet, SampleObjectDataSource<IDiscordPermissionSet>>
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet, Remora.Discord.API.Tests.Services.SampleObjectDataSource<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet>>
  nameWithType.vb: JsonBackedTypeTestBase(Of IDiscordPermissionSet, SampleObjectDataSource(Of IDiscordPermissionSet))
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet, Remora.Discord.API.Tests.Services.SampleObjectDataSource(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet))
  name.vb: JsonBackedTypeTestBase(Of IDiscordPermissionSet, SampleObjectDataSource(Of IDiscordPermissionSet))
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2
    name: JsonBackedTypeTestBase
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Tests.Services.SampleObjectDataSource`1
    name: SampleObjectDataSource
    href: Remora.Discord.API.Tests.Services.SampleObjectDataSource-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2
    name: JsonBackedTypeTestBase
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Tests.Services.SampleObjectDataSource`1
    name: SampleObjectDataSource
    href: Remora.Discord.API.Tests.Services.SampleObjectDataSource-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
  - name: )
  - name: )
- uid: Remora.Discord.API.Tests.TestBases.ObjectTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}
  commentId: T:Remora.Discord.API.Tests.TestBases.ObjectTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}
  parent: Remora.Discord.API.Tests.TestBases
  definition: Remora.Discord.API.Tests.TestBases.ObjectTestBase`1
  href: Remora.Discord.API.Tests.TestBases.ObjectTestBase-1.html
  name: ObjectTestBase<IDiscordPermissionSet>
  nameWithType: ObjectTestBase<IDiscordPermissionSet>
  fullName: Remora.Discord.API.Tests.TestBases.ObjectTestBase<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet>
  nameWithType.vb: ObjectTestBase(Of IDiscordPermissionSet)
  fullName.vb: Remora.Discord.API.Tests.TestBases.ObjectTestBase(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet)
  name.vb: ObjectTestBase(Of IDiscordPermissionSet)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.ObjectTestBase`1
    name: ObjectTestBase
    href: Remora.Discord.API.Tests.TestBases.ObjectTestBase-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.ObjectTestBase`1
    name: ObjectTestBase
    href: Remora.Discord.API.Tests.TestBases.ObjectTestBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
  - name: )
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.SampleSource
  commentId: P:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.SampleSource
  parent: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}
  definition: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.SampleSource
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_SampleSource
  name: SampleSource
  nameWithType: JsonBackedTypeTestBase<IDiscordPermissionSet, SampleObjectDataSource<IDiscordPermissionSet>>.SampleSource
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet, Remora.Discord.API.Tests.Services.SampleObjectDataSource<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet>>.SampleSource
  nameWithType.vb: JsonBackedTypeTestBase(Of IDiscordPermissionSet, SampleObjectDataSource(Of IDiscordPermissionSet)).SampleSource
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet, Remora.Discord.API.Tests.Services.SampleObjectDataSource(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet)).SampleSource
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.Options
  commentId: P:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.Options
  parent: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}
  definition: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.Options
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_Options
  name: Options
  nameWithType: JsonBackedTypeTestBase<IDiscordPermissionSet, SampleObjectDataSource<IDiscordPermissionSet>>.Options
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet, Remora.Discord.API.Tests.Services.SampleObjectDataSource<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet>>.Options
  nameWithType.vb: JsonBackedTypeTestBase(Of IDiscordPermissionSet, SampleObjectDataSource(Of IDiscordPermissionSet)).Options
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet, Remora.Discord.API.Tests.Services.SampleObjectDataSource(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet)).Options
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.AssertOptions
  commentId: P:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.AssertOptions
  parent: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}
  definition: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.AssertOptions
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_AssertOptions
  name: AssertOptions
  nameWithType: JsonBackedTypeTestBase<IDiscordPermissionSet, SampleObjectDataSource<IDiscordPermissionSet>>.AssertOptions
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet, Remora.Discord.API.Tests.Services.SampleObjectDataSource<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet>>.AssertOptions
  nameWithType.vb: JsonBackedTypeTestBase(Of IDiscordPermissionSet, SampleObjectDataSource(Of IDiscordPermissionSet)).AssertOptions
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet, Remora.Discord.API.Tests.Services.SampleObjectDataSource(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet)).AssertOptions
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.AllowUnknownEvents
  commentId: P:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.AllowUnknownEvents
  parent: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}
  definition: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.AllowUnknownEvents
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_AllowUnknownEvents
  name: AllowUnknownEvents
  nameWithType: JsonBackedTypeTestBase<IDiscordPermissionSet, SampleObjectDataSource<IDiscordPermissionSet>>.AllowUnknownEvents
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet, Remora.Discord.API.Tests.Services.SampleObjectDataSource<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet>>.AllowUnknownEvents
  nameWithType.vb: JsonBackedTypeTestBase(Of IDiscordPermissionSet, SampleObjectDataSource(Of IDiscordPermissionSet)).AllowUnknownEvents
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet, Remora.Discord.API.Tests.Services.SampleObjectDataSource(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet)).AllowUnknownEvents
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  commentId: M:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  parent: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}
  definition: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanDeserialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  name: CanDeserialize(SampleDataDescriptor)
  nameWithType: JsonBackedTypeTestBase<IDiscordPermissionSet, SampleObjectDataSource<IDiscordPermissionSet>>.CanDeserialize(SampleDataDescriptor)
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet, Remora.Discord.API.Tests.Services.SampleObjectDataSource<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet>>.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  nameWithType.vb: JsonBackedTypeTestBase(Of IDiscordPermissionSet, SampleObjectDataSource(Of IDiscordPermissionSet)).CanDeserialize(SampleDataDescriptor)
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet, Remora.Discord.API.Tests.Services.SampleObjectDataSource(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet)).CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: CanDeserialize
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanDeserialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: CanDeserialize
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanDeserialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  commentId: M:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  parent: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}
  definition: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanSerialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  name: CanSerialize(SampleDataDescriptor)
  nameWithType: JsonBackedTypeTestBase<IDiscordPermissionSet, SampleObjectDataSource<IDiscordPermissionSet>>.CanSerialize(SampleDataDescriptor)
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet, Remora.Discord.API.Tests.Services.SampleObjectDataSource<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet>>.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  nameWithType.vb: JsonBackedTypeTestBase(Of IDiscordPermissionSet, SampleObjectDataSource(Of IDiscordPermissionSet)).CanSerialize(SampleDataDescriptor)
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet, Remora.Discord.API.Tests.Services.SampleObjectDataSource(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet)).CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: CanSerialize
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanSerialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: CanSerialize
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanSerialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  commentId: M:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  parent: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}
  definition: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_SurvivesRoundTrip_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  name: SurvivesRoundTrip(SampleDataDescriptor)
  nameWithType: JsonBackedTypeTestBase<IDiscordPermissionSet, SampleObjectDataSource<IDiscordPermissionSet>>.SurvivesRoundTrip(SampleDataDescriptor)
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet, Remora.Discord.API.Tests.Services.SampleObjectDataSource<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet>>.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  nameWithType.vb: JsonBackedTypeTestBase(Of IDiscordPermissionSet, SampleObjectDataSource(Of IDiscordPermissionSet)).SurvivesRoundTrip(SampleDataDescriptor)
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet, Remora.Discord.API.Tests.Services.SampleObjectDataSource(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet)).SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: SurvivesRoundTrip
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_SurvivesRoundTrip_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet,Remora.Discord.API.Tests.Services.SampleObjectDataSource{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: SurvivesRoundTrip
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_SurvivesRoundTrip_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects
  commentId: N:Remora.Discord.API.Abstractions.Objects
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Objects
  nameWithType: Remora.Discord.API.Abstractions.Objects
  fullName: Remora.Discord.API.Abstractions.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2
  commentId: T:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html
  name: JsonBackedTypeTestBase<TType, TSampleSource>
  nameWithType: JsonBackedTypeTestBase<TType, TSampleSource>
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<TType, TSampleSource>
  nameWithType.vb: JsonBackedTypeTestBase(Of TType, TSampleSource)
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of TType, TSampleSource)
  name.vb: JsonBackedTypeTestBase(Of TType, TSampleSource)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2
    name: JsonBackedTypeTestBase
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html
  - name: <
  - name: TType
  - name: ','
  - name: " "
  - name: TSampleSource
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2
    name: JsonBackedTypeTestBase
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TType
  - name: ','
  - name: " "
  - name: TSampleSource
  - name: )
- uid: Remora.Discord.API.Tests.TestBases
  commentId: N:Remora.Discord.API.Tests.TestBases
  href: Remora.html
  name: Remora.Discord.API.Tests.TestBases
  nameWithType: Remora.Discord.API.Tests.TestBases
  fullName: Remora.Discord.API.Tests.TestBases
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Tests
    name: Tests
    href: Remora.Discord.API.Tests.html
  - name: .
  - uid: Remora.Discord.API.Tests.TestBases
    name: TestBases
    href: Remora.Discord.API.Tests.TestBases.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Tests
    name: Tests
    href: Remora.Discord.API.Tests.html
  - name: .
  - uid: Remora.Discord.API.Tests.TestBases
    name: TestBases
    href: Remora.Discord.API.Tests.TestBases.html
- uid: Remora.Discord.API.Tests.TestBases.ObjectTestBase`1
  commentId: T:Remora.Discord.API.Tests.TestBases.ObjectTestBase`1
  href: Remora.Discord.API.Tests.TestBases.ObjectTestBase-1.html
  name: ObjectTestBase<TType>
  nameWithType: ObjectTestBase<TType>
  fullName: Remora.Discord.API.Tests.TestBases.ObjectTestBase<TType>
  nameWithType.vb: ObjectTestBase(Of TType)
  fullName.vb: Remora.Discord.API.Tests.TestBases.ObjectTestBase(Of TType)
  name.vb: ObjectTestBase(Of TType)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.ObjectTestBase`1
    name: ObjectTestBase
    href: Remora.Discord.API.Tests.TestBases.ObjectTestBase-1.html
  - name: <
  - name: TType
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.ObjectTestBase`1
    name: ObjectTestBase
    href: Remora.Discord.API.Tests.TestBases.ObjectTestBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TType
  - name: )
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.SampleSource
  commentId: P:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.SampleSource
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_SampleSource
  name: SampleSource
  nameWithType: JsonBackedTypeTestBase<TType, TSampleSource>.SampleSource
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<TType, TSampleSource>.SampleSource
  nameWithType.vb: JsonBackedTypeTestBase(Of TType, TSampleSource).SampleSource
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of TType, TSampleSource).SampleSource
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.Options
  commentId: P:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.Options
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_Options
  name: Options
  nameWithType: JsonBackedTypeTestBase<TType, TSampleSource>.Options
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<TType, TSampleSource>.Options
  nameWithType.vb: JsonBackedTypeTestBase(Of TType, TSampleSource).Options
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of TType, TSampleSource).Options
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.AssertOptions
  commentId: P:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.AssertOptions
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_AssertOptions
  name: AssertOptions
  nameWithType: JsonBackedTypeTestBase<TType, TSampleSource>.AssertOptions
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<TType, TSampleSource>.AssertOptions
  nameWithType.vb: JsonBackedTypeTestBase(Of TType, TSampleSource).AssertOptions
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of TType, TSampleSource).AssertOptions
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.AllowUnknownEvents
  commentId: P:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.AllowUnknownEvents
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_AllowUnknownEvents
  name: AllowUnknownEvents
  nameWithType: JsonBackedTypeTestBase<TType, TSampleSource>.AllowUnknownEvents
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<TType, TSampleSource>.AllowUnknownEvents
  nameWithType.vb: JsonBackedTypeTestBase(Of TType, TSampleSource).AllowUnknownEvents
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of TType, TSampleSource).AllowUnknownEvents
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  commentId: M:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanDeserialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  name: CanDeserialize(SampleDataDescriptor)
  nameWithType: JsonBackedTypeTestBase<TType, TSampleSource>.CanDeserialize(SampleDataDescriptor)
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<TType, TSampleSource>.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  nameWithType.vb: JsonBackedTypeTestBase(Of TType, TSampleSource).CanDeserialize(SampleDataDescriptor)
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of TType, TSampleSource).CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: CanDeserialize
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanDeserialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanDeserialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: CanDeserialize
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanDeserialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  commentId: M:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanSerialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  name: CanSerialize(SampleDataDescriptor)
  nameWithType: JsonBackedTypeTestBase<TType, TSampleSource>.CanSerialize(SampleDataDescriptor)
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<TType, TSampleSource>.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  nameWithType.vb: JsonBackedTypeTestBase(Of TType, TSampleSource).CanSerialize(SampleDataDescriptor)
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of TType, TSampleSource).CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: CanSerialize
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanSerialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.CanSerialize(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: CanSerialize
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_CanSerialize_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  commentId: M:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_SurvivesRoundTrip_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  name: SurvivesRoundTrip(SampleDataDescriptor)
  nameWithType: JsonBackedTypeTestBase<TType, TSampleSource>.SurvivesRoundTrip(SampleDataDescriptor)
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase<TType, TSampleSource>.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  nameWithType.vb: JsonBackedTypeTestBase(Of TType, TSampleSource).SurvivesRoundTrip(SampleDataDescriptor)
  fullName.vb: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase(Of TType, TSampleSource).SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
  spec.csharp:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: SurvivesRoundTrip
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_SurvivesRoundTrip_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase`2.SurvivesRoundTrip(Remora.Discord.API.Tests.Services.SampleDataDescriptor)
    name: SurvivesRoundTrip
    href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestBase-2.html#Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestBase_2_SurvivesRoundTrip_Remora_Discord_API_Tests_Services_SampleDataDescriptor_
  - name: (
  - uid: Remora.Discord.API.Tests.Services.SampleDataDescriptor
    name: SampleDataDescriptor
    href: Remora.Discord.API.Tests.Services.SampleDataDescriptor.html
  - name: )
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  commentId: T:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html
  name: DiscordPermissionSetTests
  nameWithType: DiscordPermissionSetTests
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.#ctor*
  commentId: Overload:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.#ctor
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html#Remora_Discord_API_Tests_Objects_DiscordPermissionSetTests__ctor_Remora_Discord_API_Tests_TestBases_JsonBackedTypeTestFixture_
  name: DiscordPermissionSetTests
  nameWithType: DiscordPermissionSetTests.DiscordPermissionSetTests
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.DiscordPermissionSetTests
  nameWithType.vb: DiscordPermissionSetTests.New
  fullName.vb: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.New
  name.vb: New
- uid: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture
  commentId: T:Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture
  parent: Remora.Discord.API.Tests.TestBases
  href: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture.html
  name: JsonBackedTypeTestFixture
  nameWithType: JsonBackedTypeTestFixture
  fullName: Remora.Discord.API.Tests.TestBases.JsonBackedTypeTestFixture
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingPermission*
  commentId: Overload:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingPermission
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html#Remora_Discord_API_Tests_Objects_DiscordPermissionSetTests_HasPermissionReturnsTrueForExistingPermission
  name: HasPermissionReturnsTrueForExistingPermission
  nameWithType: DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingPermission
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingPermission
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermission*
  commentId: Overload:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermission
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html#Remora_Discord_API_Tests_Objects_DiscordPermissionSetTests_HasPermissionReturnsFalseForNonExistentPermission
  name: HasPermissionReturnsFalseForNonExistentPermission
  nameWithType: DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermission
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermission
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte*
  commentId: Overload:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html#Remora_Discord_API_Tests_Objects_DiscordPermissionSetTests_HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte
  name: HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte
  nameWithType: DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentPermissionInAnotherByte
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingTextPermission*
  commentId: Overload:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingTextPermission
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html#Remora_Discord_API_Tests_Objects_DiscordPermissionSetTests_HasPermissionReturnsTrueForExistingTextPermission
  name: HasPermissionReturnsTrueForExistingTextPermission
  nameWithType: DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingTextPermission
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingTextPermission
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentTextPermission*
  commentId: Overload:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentTextPermission
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html#Remora_Discord_API_Tests_Objects_DiscordPermissionSetTests_HasPermissionReturnsFalseForNonExistentTextPermission
  name: HasPermissionReturnsFalseForNonExistentTextPermission
  nameWithType: DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentTextPermission
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentTextPermission
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingVoicePermission*
  commentId: Overload:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingVoicePermission
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html#Remora_Discord_API_Tests_Objects_DiscordPermissionSetTests_HasPermissionReturnsTrueForExistingVoicePermission
  name: HasPermissionReturnsTrueForExistingVoicePermission
  nameWithType: DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingVoicePermission
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForExistingVoicePermission
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentVoicePermission*
  commentId: Overload:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentVoicePermission
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html#Remora_Discord_API_Tests_Objects_DiscordPermissionSetTests_HasPermissionReturnsFalseForNonExistentVoicePermission
  name: HasPermissionReturnsFalseForNonExistentVoicePermission
  nameWithType: DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentVoicePermission
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsFalseForNonExistentVoicePermission
- uid: Remora.Discord.API.Objects.DiscordPermissionSet.HasPermission(Remora.Discord.API.Abstractions.Objects.DiscordPermission)
  commentId: M:Remora.Discord.API.Objects.DiscordPermissionSet.HasPermission(Remora.Discord.API.Abstractions.Objects.DiscordPermission)
  name: HasPermission(DiscordPermission)
  nameWithType: DiscordPermissionSet.HasPermission(DiscordPermission)
  fullName: Remora.Discord.API.Objects.DiscordPermissionSet.HasPermission(Remora.Discord.API.Abstractions.Objects.DiscordPermission)
  spec.csharp:
  - uid: Remora.Discord.API.Objects.DiscordPermissionSet.HasPermission(Remora.Discord.API.Abstractions.Objects.DiscordPermission)
    name: HasPermission
  - name: (
  - uid: Remora.Discord.API.Abstractions.Objects.DiscordPermission
    name: DiscordPermission
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Objects.DiscordPermissionSet.HasPermission(Remora.Discord.API.Abstractions.Objects.DiscordPermission)
    name: HasPermission
  - name: (
  - uid: Remora.Discord.API.Abstractions.Objects.DiscordPermission
    name: DiscordPermission
  - name: )
- uid: System.Numerics.BigInteger
  commentId: T:System.Numerics.BigInteger
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.biginteger
  name: BigInteger
  nameWithType: BigInteger
  fullName: System.Numerics.BigInteger
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForLargeIntegers*
  commentId: Overload:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForLargeIntegers
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html#Remora_Discord_API_Tests_Objects_DiscordPermissionSetTests_HasPermissionReturnsTrueForLargeIntegers
  name: HasPermissionReturnsTrueForLargeIntegers
  nameWithType: DiscordPermissionSetTests.HasPermissionReturnsTrueForLargeIntegers
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.HasPermissionReturnsTrueForLargeIntegers
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissions*
  commentId: Overload:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissions
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html#Remora_Discord_API_Tests_Objects_DiscordPermissionSetTests_CanComputeMemberPermissions
  name: CanComputeMemberPermissions
  nameWithType: DiscordPermissionSetTests.CanComputeMemberPermissions
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissions
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberAllowOverwrites*
  commentId: Overload:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberAllowOverwrites
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html#Remora_Discord_API_Tests_Objects_DiscordPermissionSetTests_CanComputeMemberPermissionsWithMemberAllowOverwrites
  name: CanComputeMemberPermissionsWithMemberAllowOverwrites
  nameWithType: DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberAllowOverwrites
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberAllowOverwrites
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberDenyOverwrites*
  commentId: Overload:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberDenyOverwrites
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html#Remora_Discord_API_Tests_Objects_DiscordPermissionSetTests_CanComputeMemberPermissionsWithMemberDenyOverwrites
  name: CanComputeMemberPermissionsWithMemberDenyOverwrites
  nameWithType: DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberDenyOverwrites
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithMemberDenyOverwrites
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberWithRolePermissions*
  commentId: Overload:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberWithRolePermissions
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html#Remora_Discord_API_Tests_Objects_DiscordPermissionSetTests_CanComputeMemberWithRolePermissions
  name: CanComputeMemberWithRolePermissions
  nameWithType: DiscordPermissionSetTests.CanComputeMemberWithRolePermissions
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberWithRolePermissions
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleAllowOverwrites*
  commentId: Overload:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleAllowOverwrites
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html#Remora_Discord_API_Tests_Objects_DiscordPermissionSetTests_CanComputeMemberPermissionsWithRoleAllowOverwrites
  name: CanComputeMemberPermissionsWithRoleAllowOverwrites
  nameWithType: DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleAllowOverwrites
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleAllowOverwrites
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleDenyOverwrites*
  commentId: Overload:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleDenyOverwrites
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html#Remora_Discord_API_Tests_Objects_DiscordPermissionSetTests_CanComputeMemberPermissionsWithRoleDenyOverwrites
  name: CanComputeMemberPermissionsWithRoleDenyOverwrites
  nameWithType: DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleDenyOverwrites
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanComputeMemberPermissionsWithRoleDenyOverwrites
- uid: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanGetPermissions*
  commentId: Overload:Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanGetPermissions
  href: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.html#Remora_Discord_API_Tests_Objects_DiscordPermissionSetTests_CanGetPermissions
  name: CanGetPermissions
  nameWithType: DiscordPermissionSetTests.CanGetPermissions
  fullName: Remora.Discord.API.Tests.Objects.DiscordPermissionSetTests.CanGetPermissions
