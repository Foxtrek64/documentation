### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
  commentId: T:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
  id: DiscordRestWebhookAPITests.ExecuteWebhookAsync
  parent: Remora.Discord.Rest.Tests.API.Webhooks
  children:
  - Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  - Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsEmbedRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsFileUploadRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsForumThreadRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsInThreadRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsMultiFileUploadRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNormalRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNullReturnRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsPollRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsRetainingFileUploadRequestCorrectly
  langs:
  - csharp
  - vb
  name: DiscordRestWebhookAPITests.ExecuteWebhookAsync
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
  type: Class
  source:
    id: ExecuteWebhookAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Webhooks\DiscordRestWebhookAPITests.cs
    startLine: 727
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Webhooks
  summary: Tests the <xref href="Remora.Discord.Rest.API.DiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake%2cSystem.String%2cRemora.Rest.Core.Optional%7bSystem.Boolean%7d%2cRemora.Rest.Core.Optional%7bSystem.String%7d%2cRemora.Rest.Core.Optional%7bSystem.String%7d%2cRemora.Rest.Core.Optional%7bSystem.String%7d%2cRemora.Rest.Core.Optional%7bSystem.Boolean%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyList%7bRemora.Discord.API.Abstractions.Objects.IEmbed%7d%7d%2cRemora.Rest.Core.Optional%7bRemora.Discord.API.Abstractions.Objects.IAllowedMentions%7d%2cRemora.Rest.Core.Optional%7bRemora.Rest.Core.Snowflake%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyList%7bRemora.Discord.API.Abstractions.Objects.IMessageComponent%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyList%7bOneOf.OneOf%7bRemora.Discord.API.Abstractions.Rest.FileData%2cRemora.Discord.API.Abstractions.Objects.IPartialAttachment%7d%7d%7d%2cRemora.Rest.Core.Optional%7bRemora.Discord.API.Abstractions.Objects.MessageFlags%7d%2cRemora.Rest.Core.Optional%7bSystem.String%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyList%7bRemora.Rest.Core.Snowflake%7d%7d%2cRemora.Rest.Core.Optional%7bRemora.Discord.API.Abstractions.Objects.IPollCreateRequest%7d%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: 'public class DiscordRestWebhookAPITests.ExecuteWebhookAsync : RestAPITestBase<IDiscordRestWebhookAPI>'
    content.vb: Public Class DiscordRestWebhookAPITests.ExecuteWebhookAsync Inherits RestAPITestBase(Of IDiscordRestWebhookAPI)
  inheritance:
  - System.Object
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI}
  inheritedMembers:
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  commentId: M:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  id: '#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)'
  parent: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
  langs:
  - csharp
  - vb
  name: ExecuteWebhookAsync(RestAPITestFixture)
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.ExecuteWebhookAsync(RestAPITestFixture)
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.ExecuteWebhookAsync(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Webhooks\DiscordRestWebhookAPITests.cs
    startLine: 733
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Webhooks
  summary: Initializes a new instance of the <xref href="Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public ExecuteWebhookAsync(RestAPITestFixture fixture)
    parameters:
    - id: fixture
      type: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
      description: The test fixture.
    content.vb: Public Sub New(fixture As RestAPITestFixture)
  overload: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.#ctor*
  nameWithType.vb: DiscordRestWebhookAPITests.ExecuteWebhookAsync.New(RestAPITestFixture)
  fullName.vb: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.New(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  name.vb: New(RestAPITestFixture)
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNormalRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNormalRequestCorrectly
  id: PerformsNormalRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
  langs:
  - csharp
  - vb
  name: PerformsNormalRequestCorrectly()
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNormalRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNormalRequestCorrectly()
  type: Method
  source:
    id: PerformsNormalRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Webhooks\DiscordRestWebhookAPITests.cs
    startLine: 742
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Webhooks
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsNormalRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsNormalRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNormalRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsInThreadRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsInThreadRequestCorrectly
  id: PerformsInThreadRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
  langs:
  - csharp
  - vb
  name: PerformsInThreadRequestCorrectly()
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsInThreadRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsInThreadRequestCorrectly()
  type: Method
  source:
    id: PerformsInThreadRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Webhooks\DiscordRestWebhookAPITests.cs
    startLine: 803
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Webhooks
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsInThreadRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsInThreadRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsInThreadRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsForumThreadRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsForumThreadRequestCorrectly
  id: PerformsForumThreadRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
  langs:
  - csharp
  - vb
  name: PerformsForumThreadRequestCorrectly()
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsForumThreadRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsForumThreadRequestCorrectly()
  type: Method
  source:
    id: PerformsForumThreadRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Webhooks\DiscordRestWebhookAPITests.cs
    startLine: 867
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Webhooks
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsForumThreadRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsForumThreadRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsForumThreadRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsEmbedRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsEmbedRequestCorrectly
  id: PerformsEmbedRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
  langs:
  - csharp
  - vb
  name: PerformsEmbedRequestCorrectly()
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsEmbedRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsEmbedRequestCorrectly()
  type: Method
  source:
    id: PerformsEmbedRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Webhooks\DiscordRestWebhookAPITests.cs
    startLine: 928
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Webhooks
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsEmbedRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsEmbedRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsEmbedRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsFileUploadRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsFileUploadRequestCorrectly
  id: PerformsFileUploadRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
  langs:
  - csharp
  - vb
  name: PerformsFileUploadRequestCorrectly()
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsFileUploadRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsFileUploadRequestCorrectly()
  type: Method
  source:
    id: PerformsFileUploadRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Webhooks\DiscordRestWebhookAPITests.cs
    startLine: 980
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Webhooks
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsFileUploadRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsFileUploadRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsFileUploadRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsMultiFileUploadRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsMultiFileUploadRequestCorrectly
  id: PerformsMultiFileUploadRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
  langs:
  - csharp
  - vb
  name: PerformsMultiFileUploadRequestCorrectly()
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsMultiFileUploadRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsMultiFileUploadRequestCorrectly()
  type: Method
  source:
    id: PerformsMultiFileUploadRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Webhooks\DiscordRestWebhookAPITests.cs
    startLine: 1039
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Webhooks
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsMultiFileUploadRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsMultiFileUploadRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsMultiFileUploadRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsRetainingFileUploadRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsRetainingFileUploadRequestCorrectly
  id: PerformsRetainingFileUploadRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
  langs:
  - csharp
  - vb
  name: PerformsRetainingFileUploadRequestCorrectly()
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsRetainingFileUploadRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsRetainingFileUploadRequestCorrectly()
  type: Method
  source:
    id: PerformsRetainingFileUploadRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Webhooks\DiscordRestWebhookAPITests.cs
    startLine: 1118
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Webhooks
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsRetainingFileUploadRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsRetainingFileUploadRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsRetainingFileUploadRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsPollRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsPollRequestCorrectly
  id: PerformsPollRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
  langs:
  - csharp
  - vb
  name: PerformsPollRequestCorrectly()
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsPollRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsPollRequestCorrectly()
  type: Method
  source:
    id: PerformsPollRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Webhooks\DiscordRestWebhookAPITests.cs
    startLine: 1191
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Webhooks
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsPollRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsPollRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsPollRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNullReturnRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNullReturnRequestCorrectly
  id: PerformsNullReturnRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
  langs:
  - csharp
  - vb
  name: PerformsNullReturnRequestCorrectly()
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNullReturnRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNullReturnRequestCorrectly()
  type: Method
  source:
    id: PerformsNullReturnRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Webhooks\DiscordRestWebhookAPITests.cs
    startLine: 1236
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Webhooks
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsNullReturnRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsNullReturnRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNullReturnRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ExecuteWebhookAsync(Snowflake, string, Optional<bool>, Optional<string>, Optional<string>, Optional<string>, Optional<bool>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<Snowflake>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, Optional<MessageFlags>, Optional<string>, Optional<IReadOnlyList<Snowflake>>, Optional<IPollCreateRequest>, CancellationToken)
  nameWithType: DiscordRestWebhookAPI.ExecuteWebhookAsync(Snowflake, string, Optional<bool>, Optional<string>, Optional<string>, Optional<string>, Optional<bool>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<Snowflake>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, Optional<MessageFlags>, Optional<string>, Optional<IReadOnlyList<Snowflake>>, Optional<IPollCreateRequest>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<OneOf.OneOf<Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment>>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.MessageFlags>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IPollCreateRequest>, System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestWebhookAPI.ExecuteWebhookAsync(Snowflake, String, Optional(Of Boolean), Optional(Of String), Optional(Of String), Optional(Of String), Optional(Of Boolean), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of Snowflake), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), Optional(Of MessageFlags), Optional(Of String), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of IPollCreateRequest), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of OneOf.OneOf(Of Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment))), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.MessageFlags), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IPollCreateRequest), System.Threading.CancellationToken)
  name.vb: ExecuteWebhookAsync(Snowflake, String, Optional(Of Boolean), Optional(Of String), Optional(Of String), Optional(Of String), Optional(Of Boolean), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of Snowflake), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), Optional(Of MessageFlags), Optional(Of String), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of IPollCreateRequest), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
    name: ExecuteWebhookAsync
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
    name: IPartialAttachment
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest
    name: IPollCreateRequest
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
    name: ExecuteWebhookAsync
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
    name: IPartialAttachment
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest
    name: IPollCreateRequest
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.Tests.API.Webhooks
  commentId: N:Remora.Discord.Rest.Tests.API.Webhooks
  href: Remora.html
  name: Remora.Discord.Rest.Tests.API.Webhooks
  nameWithType: Remora.Discord.Rest.Tests.API.Webhooks
  fullName: Remora.Discord.Rest.Tests.API.Webhooks
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API
    name: API
    href: Remora.Discord.Rest.Tests.API.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Webhooks
    name: Webhooks
    href: Remora.Discord.Rest.Tests.API.Webhooks.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API
    name: API
    href: Remora.Discord.Rest.Tests.API.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Webhooks
    name: Webhooks
    href: Remora.Discord.Rest.Tests.API.Webhooks.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI}
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI}
  parent: Remora.Discord.Rest.Tests.TestBases
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  name: RestAPITestBase<IDiscordRestWebhookAPI>
  nameWithType: RestAPITestBase<IDiscordRestWebhookAPI>
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI>
  nameWithType.vb: RestAPITestBase(Of IDiscordRestWebhookAPI)
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI)
  name.vb: RestAPITestBase(Of IDiscordRestWebhookAPI)
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
    name: IDiscordRestWebhookAPI
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
    name: IDiscordRestWebhookAPI
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  parent: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI}
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateAPI(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<IDiscordRestWebhookAPI>.CreateAPI(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI>.CreateAPI(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of IDiscordRestWebhookAPI).CreateAPI(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI).CreateAPI(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateAPI(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  parent: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI}
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<IDiscordRestWebhookAPI>.CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI>.CreateConfiguredAPIServices(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of IDiscordRestWebhookAPI).CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI).CreateConfiguredAPIServices(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  name: RestAPITestBase<TAPI>
  nameWithType: RestAPITestBase<TAPI>
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>
  nameWithType.vb: RestAPITestBase(Of TAPI)
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI)
  name.vb: RestAPITestBase(Of TAPI)
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: <
  - name: TAPI
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TAPI
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases
  commentId: N:Remora.Discord.Rest.Tests.TestBases
  href: Remora.html
  name: Remora.Discord.Rest.Tests.TestBases
  nameWithType: Remora.Discord.Rest.Tests.TestBases
  fullName: Remora.Discord.Rest.Tests.TestBases
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.TestBases
    name: TestBases
    href: Remora.Discord.Rest.Tests.TestBases.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.TestBases
    name: TestBases
    href: Remora.Discord.Rest.Tests.TestBases.html
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  isExternal: true
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateAPI(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<TAPI>.CreateAPI(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>.CreateAPI(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of TAPI).CreateAPI(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI).CreateAPI(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateAPI(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  isExternal: true
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<TAPI>.CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>.CreateConfiguredAPIServices(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of TAPI).CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI).CreateConfiguredAPIServices(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
  commentId: T:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
  href: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.html
  name: DiscordRestWebhookAPITests.ExecuteWebhookAsync
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests
    name: DiscordRestWebhookAPITests
    href: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
    name: ExecuteWebhookAsync
    href: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.html
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests
    name: DiscordRestWebhookAPITests
    href: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync
    name: ExecuteWebhookAsync
    href: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.html
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.#ctor*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.#ctor
  href: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.html#Remora_Discord_Rest_Tests_API_Webhooks_DiscordRestWebhookAPITests_ExecuteWebhookAsync__ctor_Remora_Discord_Rest_Tests_TestBases_RestAPITestFixture_
  name: ExecuteWebhookAsync
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.ExecuteWebhookAsync
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.ExecuteWebhookAsync
  nameWithType.vb: DiscordRestWebhookAPITests.ExecuteWebhookAsync.New
  fullName.vb: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.New
  name.vb: New
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
  parent: Remora.Discord.Rest.Tests.TestBases
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture.html
  name: RestAPITestFixture
  nameWithType: RestAPITestFixture
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNormalRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNormalRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.html#Remora_Discord_Rest_Tests_API_Webhooks_DiscordRestWebhookAPITests_ExecuteWebhookAsync_PerformsNormalRequestCorrectly
  name: PerformsNormalRequestCorrectly
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNormalRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNormalRequestCorrectly
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsInThreadRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsInThreadRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.html#Remora_Discord_Rest_Tests_API_Webhooks_DiscordRestWebhookAPITests_ExecuteWebhookAsync_PerformsInThreadRequestCorrectly
  name: PerformsInThreadRequestCorrectly
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsInThreadRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsInThreadRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsForumThreadRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsForumThreadRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.html#Remora_Discord_Rest_Tests_API_Webhooks_DiscordRestWebhookAPITests_ExecuteWebhookAsync_PerformsForumThreadRequestCorrectly
  name: PerformsForumThreadRequestCorrectly
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsForumThreadRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsForumThreadRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsEmbedRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsEmbedRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.html#Remora_Discord_Rest_Tests_API_Webhooks_DiscordRestWebhookAPITests_ExecuteWebhookAsync_PerformsEmbedRequestCorrectly
  name: PerformsEmbedRequestCorrectly
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsEmbedRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsEmbedRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsFileUploadRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsFileUploadRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.html#Remora_Discord_Rest_Tests_API_Webhooks_DiscordRestWebhookAPITests_ExecuteWebhookAsync_PerformsFileUploadRequestCorrectly
  name: PerformsFileUploadRequestCorrectly
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsFileUploadRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsFileUploadRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsMultiFileUploadRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsMultiFileUploadRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.html#Remora_Discord_Rest_Tests_API_Webhooks_DiscordRestWebhookAPITests_ExecuteWebhookAsync_PerformsMultiFileUploadRequestCorrectly
  name: PerformsMultiFileUploadRequestCorrectly
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsMultiFileUploadRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsMultiFileUploadRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsRetainingFileUploadRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsRetainingFileUploadRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.html#Remora_Discord_Rest_Tests_API_Webhooks_DiscordRestWebhookAPITests_ExecuteWebhookAsync_PerformsRetainingFileUploadRequestCorrectly
  name: PerformsRetainingFileUploadRequestCorrectly
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsRetainingFileUploadRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsRetainingFileUploadRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsPollRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsPollRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.html#Remora_Discord_Rest_Tests_API_Webhooks_DiscordRestWebhookAPITests_ExecuteWebhookAsync_PerformsPollRequestCorrectly
  name: PerformsPollRequestCorrectly
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsPollRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsPollRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNullReturnRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNullReturnRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.html#Remora_Discord_Rest_Tests_API_Webhooks_DiscordRestWebhookAPITests_ExecuteWebhookAsync_PerformsNullReturnRequestCorrectly
  name: PerformsNullReturnRequestCorrectly
  nameWithType: DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNullReturnRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Webhooks.DiscordRestWebhookAPITests.ExecuteWebhookAsync.PerformsNullReturnRequestCorrectly
