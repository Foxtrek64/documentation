### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID
  commentId: T:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID
  id: CustomIDHelperTests.CreateID
  parent: Remora.Discord.Interactivity.Tests
  children:
  - Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedCaseThrowsIfAnyPathComponentIsWhitespace
  - Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedCaseThrowsIfNameIsWhitespace
  - Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfAnyPathComponentContainsWhitespace
  - Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfArgumentCombinationIsTooLong
  - Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfNameContainsWhitespace
  - Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfNameIsTooLong
  - Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.ReturnsCorrectValueForGroupedCase
  - Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.ReturnsCorrectValueForSimpleCase
  - Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleCaseThrowsIfNameIsWhitespace
  - Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleThrowsIfNameContainsWhitespace
  - Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleThrowsIfNameIsTooLong
  langs:
  - csharp
  - vb
  name: CustomIDHelperTests.CreateID
  nameWithType: CustomIDHelperTests.CreateID
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID
  type: Class
  source:
    id: CreateID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Interactivity.Tests\CustomIDHelperTests.cs
    startLine: 136
  assemblies:
  - Remora.Discord.Interactivity.Tests
  namespace: Remora.Discord.Interactivity.Tests
  summary: Tests the <xref href="Remora.Discord.Interactivity.CustomIDHelpers.CreateID(System.String%2cRemora.Discord.API.Abstractions.Objects.ComponentType)" data-throw-if-not-resolved="false"></xref> method and its overloads.
  example: []
  syntax:
    content: public class CustomIDHelperTests.CreateID
    content.vb: Public Class CustomIDHelperTests.CreateID
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.ReturnsCorrectValueForSimpleCase
  commentId: M:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.ReturnsCorrectValueForSimpleCase
  id: ReturnsCorrectValueForSimpleCase
  parent: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID
  langs:
  - csharp
  - vb
  name: ReturnsCorrectValueForSimpleCase()
  nameWithType: CustomIDHelperTests.CreateID.ReturnsCorrectValueForSimpleCase()
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.ReturnsCorrectValueForSimpleCase()
  type: Method
  source:
    id: ReturnsCorrectValueForSimpleCase
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Interactivity.Tests\CustomIDHelperTests.cs
    startLine: 141
  assemblies:
  - Remora.Discord.Interactivity.Tests
  namespace: Remora.Discord.Interactivity.Tests
  summary: Tests whether simple method returns a correctly formatted value.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ReturnsCorrectValueForSimpleCase()
    content.vb: >-
      <Fact>

      Public Sub ReturnsCorrectValueForSimpleCase()
  overload: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.ReturnsCorrectValueForSimpleCase*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.ReturnsCorrectValueForGroupedCase
  commentId: M:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.ReturnsCorrectValueForGroupedCase
  id: ReturnsCorrectValueForGroupedCase
  parent: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID
  langs:
  - csharp
  - vb
  name: ReturnsCorrectValueForGroupedCase()
  nameWithType: CustomIDHelperTests.CreateID.ReturnsCorrectValueForGroupedCase()
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.ReturnsCorrectValueForGroupedCase()
  type: Method
  source:
    id: ReturnsCorrectValueForGroupedCase
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Interactivity.Tests\CustomIDHelperTests.cs
    startLine: 156
  assemblies:
  - Remora.Discord.Interactivity.Tests
  namespace: Remora.Discord.Interactivity.Tests
  summary: >-
    Tests whether the group-aware method returns a correctly formatted

    value.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ReturnsCorrectValueForGroupedCase()
    content.vb: >-
      <Fact>

      Public Sub ReturnsCorrectValueForGroupedCase()
  overload: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.ReturnsCorrectValueForGroupedCase*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleCaseThrowsIfNameIsWhitespace
  commentId: M:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleCaseThrowsIfNameIsWhitespace
  id: SimpleCaseThrowsIfNameIsWhitespace
  parent: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID
  langs:
  - csharp
  - vb
  name: SimpleCaseThrowsIfNameIsWhitespace()
  nameWithType: CustomIDHelperTests.CreateID.SimpleCaseThrowsIfNameIsWhitespace()
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleCaseThrowsIfNameIsWhitespace()
  type: Method
  source:
    id: SimpleCaseThrowsIfNameIsWhitespace
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Interactivity.Tests\CustomIDHelperTests.cs
    startLine: 172
  assemblies:
  - Remora.Discord.Interactivity.Tests
  namespace: Remora.Discord.Interactivity.Tests
  summary: Tests whether the simple method throws if the provided name is composed entirely of whitespace.
  example: []
  syntax:
    content: >-
      [Fact]

      public void SimpleCaseThrowsIfNameIsWhitespace()
    content.vb: >-
      <Fact>

      Public Sub SimpleCaseThrowsIfNameIsWhitespace()
  overload: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleCaseThrowsIfNameIsWhitespace*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedCaseThrowsIfNameIsWhitespace
  commentId: M:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedCaseThrowsIfNameIsWhitespace
  id: GroupedCaseThrowsIfNameIsWhitespace
  parent: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID
  langs:
  - csharp
  - vb
  name: GroupedCaseThrowsIfNameIsWhitespace()
  nameWithType: CustomIDHelperTests.CreateID.GroupedCaseThrowsIfNameIsWhitespace()
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedCaseThrowsIfNameIsWhitespace()
  type: Method
  source:
    id: GroupedCaseThrowsIfNameIsWhitespace
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Interactivity.Tests\CustomIDHelperTests.cs
    startLine: 182
  assemblies:
  - Remora.Discord.Interactivity.Tests
  namespace: Remora.Discord.Interactivity.Tests
  summary: Tests whether the grouped method throws if the provided name is composed entirely of whitespace.
  example: []
  syntax:
    content: >-
      [Fact]

      public void GroupedCaseThrowsIfNameIsWhitespace()
    content.vb: >-
      <Fact>

      Public Sub GroupedCaseThrowsIfNameIsWhitespace()
  overload: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedCaseThrowsIfNameIsWhitespace*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedCaseThrowsIfAnyPathComponentIsWhitespace
  commentId: M:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedCaseThrowsIfAnyPathComponentIsWhitespace
  id: GroupedCaseThrowsIfAnyPathComponentIsWhitespace
  parent: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID
  langs:
  - csharp
  - vb
  name: GroupedCaseThrowsIfAnyPathComponentIsWhitespace()
  nameWithType: CustomIDHelperTests.CreateID.GroupedCaseThrowsIfAnyPathComponentIsWhitespace()
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedCaseThrowsIfAnyPathComponentIsWhitespace()
  type: Method
  source:
    id: GroupedCaseThrowsIfAnyPathComponentIsWhitespace
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Interactivity.Tests\CustomIDHelperTests.cs
    startLine: 192
  assemblies:
  - Remora.Discord.Interactivity.Tests
  namespace: Remora.Discord.Interactivity.Tests
  summary: Tests whether the grouped method throws if any provided path component is composed entirely of whitespace.
  example: []
  syntax:
    content: >-
      [Fact]

      public void GroupedCaseThrowsIfAnyPathComponentIsWhitespace()
    content.vb: >-
      <Fact>

      Public Sub GroupedCaseThrowsIfAnyPathComponentIsWhitespace()
  overload: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedCaseThrowsIfAnyPathComponentIsWhitespace*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleThrowsIfNameContainsWhitespace
  commentId: M:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleThrowsIfNameContainsWhitespace
  id: SimpleThrowsIfNameContainsWhitespace
  parent: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID
  langs:
  - csharp
  - vb
  name: SimpleThrowsIfNameContainsWhitespace()
  nameWithType: CustomIDHelperTests.CreateID.SimpleThrowsIfNameContainsWhitespace()
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleThrowsIfNameContainsWhitespace()
  type: Method
  source:
    id: SimpleThrowsIfNameContainsWhitespace
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Interactivity.Tests\CustomIDHelperTests.cs
    startLine: 214
  assemblies:
  - Remora.Discord.Interactivity.Tests
  namespace: Remora.Discord.Interactivity.Tests
  summary: Tests whether the simple method throws if the provided name contains whitespace.
  example: []
  syntax:
    content: >-
      [Fact]

      public void SimpleThrowsIfNameContainsWhitespace()
    content.vb: >-
      <Fact>

      Public Sub SimpleThrowsIfNameContainsWhitespace()
  overload: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleThrowsIfNameContainsWhitespace*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfNameContainsWhitespace
  commentId: M:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfNameContainsWhitespace
  id: GroupedThrowsIfNameContainsWhitespace
  parent: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID
  langs:
  - csharp
  - vb
  name: GroupedThrowsIfNameContainsWhitespace()
  nameWithType: CustomIDHelperTests.CreateID.GroupedThrowsIfNameContainsWhitespace()
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfNameContainsWhitespace()
  type: Method
  source:
    id: GroupedThrowsIfNameContainsWhitespace
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Interactivity.Tests\CustomIDHelperTests.cs
    startLine: 224
  assemblies:
  - Remora.Discord.Interactivity.Tests
  namespace: Remora.Discord.Interactivity.Tests
  summary: Tests whether the grouped method throws if the provided name contains whitespace.
  example: []
  syntax:
    content: >-
      [Fact]

      public void GroupedThrowsIfNameContainsWhitespace()
    content.vb: >-
      <Fact>

      Public Sub GroupedThrowsIfNameContainsWhitespace()
  overload: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfNameContainsWhitespace*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfAnyPathComponentContainsWhitespace
  commentId: M:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfAnyPathComponentContainsWhitespace
  id: GroupedThrowsIfAnyPathComponentContainsWhitespace
  parent: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID
  langs:
  - csharp
  - vb
  name: GroupedThrowsIfAnyPathComponentContainsWhitespace()
  nameWithType: CustomIDHelperTests.CreateID.GroupedThrowsIfAnyPathComponentContainsWhitespace()
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfAnyPathComponentContainsWhitespace()
  type: Method
  source:
    id: GroupedThrowsIfAnyPathComponentContainsWhitespace
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Interactivity.Tests\CustomIDHelperTests.cs
    startLine: 234
  assemblies:
  - Remora.Discord.Interactivity.Tests
  namespace: Remora.Discord.Interactivity.Tests
  summary: Tests whether the simple method throws if any provided path component contains whitespace.
  example: []
  syntax:
    content: >-
      [Fact]

      public void GroupedThrowsIfAnyPathComponentContainsWhitespace()
    content.vb: >-
      <Fact>

      Public Sub GroupedThrowsIfAnyPathComponentContainsWhitespace()
  overload: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfAnyPathComponentContainsWhitespace*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleThrowsIfNameIsTooLong
  commentId: M:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleThrowsIfNameIsTooLong
  id: SimpleThrowsIfNameIsTooLong
  parent: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID
  langs:
  - csharp
  - vb
  name: SimpleThrowsIfNameIsTooLong()
  nameWithType: CustomIDHelperTests.CreateID.SimpleThrowsIfNameIsTooLong()
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleThrowsIfNameIsTooLong()
  type: Method
  source:
    id: SimpleThrowsIfNameIsTooLong
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Interactivity.Tests\CustomIDHelperTests.cs
    startLine: 256
  assemblies:
  - Remora.Discord.Interactivity.Tests
  namespace: Remora.Discord.Interactivity.Tests
  summary: Tests whether the simple method throws if the final ID is longer than 100 characters.
  example: []
  syntax:
    content: >-
      [Fact]

      public void SimpleThrowsIfNameIsTooLong()
    content.vb: >-
      <Fact>

      Public Sub SimpleThrowsIfNameIsTooLong()
  overload: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleThrowsIfNameIsTooLong*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfNameIsTooLong
  commentId: M:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfNameIsTooLong
  id: GroupedThrowsIfNameIsTooLong
  parent: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID
  langs:
  - csharp
  - vb
  name: GroupedThrowsIfNameIsTooLong()
  nameWithType: CustomIDHelperTests.CreateID.GroupedThrowsIfNameIsTooLong()
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfNameIsTooLong()
  type: Method
  source:
    id: GroupedThrowsIfNameIsTooLong
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Interactivity.Tests\CustomIDHelperTests.cs
    startLine: 267
  assemblies:
  - Remora.Discord.Interactivity.Tests
  namespace: Remora.Discord.Interactivity.Tests
  summary: Tests whether the group-aware method throws if the final ID is longer than 100 characters.
  example: []
  syntax:
    content: >-
      [Fact]

      public void GroupedThrowsIfNameIsTooLong()
    content.vb: >-
      <Fact>

      Public Sub GroupedThrowsIfNameIsTooLong()
  overload: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfNameIsTooLong*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfArgumentCombinationIsTooLong
  commentId: M:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfArgumentCombinationIsTooLong
  id: GroupedThrowsIfArgumentCombinationIsTooLong
  parent: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID
  langs:
  - csharp
  - vb
  name: GroupedThrowsIfArgumentCombinationIsTooLong()
  nameWithType: CustomIDHelperTests.CreateID.GroupedThrowsIfArgumentCombinationIsTooLong()
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfArgumentCombinationIsTooLong()
  type: Method
  source:
    id: GroupedThrowsIfArgumentCombinationIsTooLong
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Interactivity.Tests\CustomIDHelperTests.cs
    startLine: 278
  assemblies:
  - Remora.Discord.Interactivity.Tests
  namespace: Remora.Discord.Interactivity.Tests
  summary: Tests whether the group-aware method throws if the final ID is longer than 100 characters.
  example: []
  syntax:
    content: >-
      [Fact]

      public void GroupedThrowsIfArgumentCombinationIsTooLong()
    content.vb: >-
      <Fact>

      Public Sub GroupedThrowsIfArgumentCombinationIsTooLong()
  overload: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfArgumentCombinationIsTooLong*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: Remora.Discord.Interactivity.CustomIDHelpers.CreateID(System.String,Remora.Discord.API.Abstractions.Objects.ComponentType)
  commentId: M:Remora.Discord.Interactivity.CustomIDHelpers.CreateID(System.String,Remora.Discord.API.Abstractions.Objects.ComponentType)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: CreateID(string, ComponentType)
  nameWithType: CustomIDHelpers.CreateID(string, ComponentType)
  fullName: Remora.Discord.Interactivity.CustomIDHelpers.CreateID(string, Remora.Discord.API.Abstractions.Objects.ComponentType)
  nameWithType.vb: CustomIDHelpers.CreateID(String, ComponentType)
  fullName.vb: Remora.Discord.Interactivity.CustomIDHelpers.CreateID(String, Remora.Discord.API.Abstractions.Objects.ComponentType)
  name.vb: CreateID(String, ComponentType)
  spec.csharp:
  - uid: Remora.Discord.Interactivity.CustomIDHelpers.CreateID(System.String,Remora.Discord.API.Abstractions.Objects.ComponentType)
    name: CreateID
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ComponentType
    name: ComponentType
  - name: )
  spec.vb:
  - uid: Remora.Discord.Interactivity.CustomIDHelpers.CreateID(System.String,Remora.Discord.API.Abstractions.Objects.ComponentType)
    name: CreateID
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ComponentType
    name: ComponentType
  - name: )
- uid: Remora.Discord.Interactivity.Tests
  commentId: N:Remora.Discord.Interactivity.Tests
  href: Remora.html
  name: Remora.Discord.Interactivity.Tests
  nameWithType: Remora.Discord.Interactivity.Tests
  fullName: Remora.Discord.Interactivity.Tests
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Interactivity
    name: Interactivity
    href: Remora.Discord.Interactivity.html
  - name: .
  - uid: Remora.Discord.Interactivity.Tests
    name: Tests
    href: Remora.Discord.Interactivity.Tests.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Interactivity
    name: Interactivity
    href: Remora.Discord.Interactivity.html
  - name: .
  - uid: Remora.Discord.Interactivity.Tests
    name: Tests
    href: Remora.Discord.Interactivity.Tests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.ReturnsCorrectValueForSimpleCase*
  commentId: Overload:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.ReturnsCorrectValueForSimpleCase
  href: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.html#Remora_Discord_Interactivity_Tests_CustomIDHelperTests_CreateID_ReturnsCorrectValueForSimpleCase
  name: ReturnsCorrectValueForSimpleCase
  nameWithType: CustomIDHelperTests.CreateID.ReturnsCorrectValueForSimpleCase
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.ReturnsCorrectValueForSimpleCase
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.ReturnsCorrectValueForGroupedCase*
  commentId: Overload:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.ReturnsCorrectValueForGroupedCase
  href: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.html#Remora_Discord_Interactivity_Tests_CustomIDHelperTests_CreateID_ReturnsCorrectValueForGroupedCase
  name: ReturnsCorrectValueForGroupedCase
  nameWithType: CustomIDHelperTests.CreateID.ReturnsCorrectValueForGroupedCase
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.ReturnsCorrectValueForGroupedCase
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleCaseThrowsIfNameIsWhitespace*
  commentId: Overload:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleCaseThrowsIfNameIsWhitespace
  href: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.html#Remora_Discord_Interactivity_Tests_CustomIDHelperTests_CreateID_SimpleCaseThrowsIfNameIsWhitespace
  name: SimpleCaseThrowsIfNameIsWhitespace
  nameWithType: CustomIDHelperTests.CreateID.SimpleCaseThrowsIfNameIsWhitespace
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleCaseThrowsIfNameIsWhitespace
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedCaseThrowsIfNameIsWhitespace*
  commentId: Overload:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedCaseThrowsIfNameIsWhitespace
  href: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.html#Remora_Discord_Interactivity_Tests_CustomIDHelperTests_CreateID_GroupedCaseThrowsIfNameIsWhitespace
  name: GroupedCaseThrowsIfNameIsWhitespace
  nameWithType: CustomIDHelperTests.CreateID.GroupedCaseThrowsIfNameIsWhitespace
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedCaseThrowsIfNameIsWhitespace
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedCaseThrowsIfAnyPathComponentIsWhitespace*
  commentId: Overload:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedCaseThrowsIfAnyPathComponentIsWhitespace
  href: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.html#Remora_Discord_Interactivity_Tests_CustomIDHelperTests_CreateID_GroupedCaseThrowsIfAnyPathComponentIsWhitespace
  name: GroupedCaseThrowsIfAnyPathComponentIsWhitespace
  nameWithType: CustomIDHelperTests.CreateID.GroupedCaseThrowsIfAnyPathComponentIsWhitespace
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedCaseThrowsIfAnyPathComponentIsWhitespace
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleThrowsIfNameContainsWhitespace*
  commentId: Overload:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleThrowsIfNameContainsWhitespace
  href: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.html#Remora_Discord_Interactivity_Tests_CustomIDHelperTests_CreateID_SimpleThrowsIfNameContainsWhitespace
  name: SimpleThrowsIfNameContainsWhitespace
  nameWithType: CustomIDHelperTests.CreateID.SimpleThrowsIfNameContainsWhitespace
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleThrowsIfNameContainsWhitespace
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfNameContainsWhitespace*
  commentId: Overload:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfNameContainsWhitespace
  href: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.html#Remora_Discord_Interactivity_Tests_CustomIDHelperTests_CreateID_GroupedThrowsIfNameContainsWhitespace
  name: GroupedThrowsIfNameContainsWhitespace
  nameWithType: CustomIDHelperTests.CreateID.GroupedThrowsIfNameContainsWhitespace
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfNameContainsWhitespace
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfAnyPathComponentContainsWhitespace*
  commentId: Overload:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfAnyPathComponentContainsWhitespace
  href: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.html#Remora_Discord_Interactivity_Tests_CustomIDHelperTests_CreateID_GroupedThrowsIfAnyPathComponentContainsWhitespace
  name: GroupedThrowsIfAnyPathComponentContainsWhitespace
  nameWithType: CustomIDHelperTests.CreateID.GroupedThrowsIfAnyPathComponentContainsWhitespace
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfAnyPathComponentContainsWhitespace
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleThrowsIfNameIsTooLong*
  commentId: Overload:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleThrowsIfNameIsTooLong
  href: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.html#Remora_Discord_Interactivity_Tests_CustomIDHelperTests_CreateID_SimpleThrowsIfNameIsTooLong
  name: SimpleThrowsIfNameIsTooLong
  nameWithType: CustomIDHelperTests.CreateID.SimpleThrowsIfNameIsTooLong
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.SimpleThrowsIfNameIsTooLong
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfNameIsTooLong*
  commentId: Overload:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfNameIsTooLong
  href: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.html#Remora_Discord_Interactivity_Tests_CustomIDHelperTests_CreateID_GroupedThrowsIfNameIsTooLong
  name: GroupedThrowsIfNameIsTooLong
  nameWithType: CustomIDHelperTests.CreateID.GroupedThrowsIfNameIsTooLong
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfNameIsTooLong
- uid: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfArgumentCombinationIsTooLong*
  commentId: Overload:Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfArgumentCombinationIsTooLong
  href: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.html#Remora_Discord_Interactivity_Tests_CustomIDHelperTests_CreateID_GroupedThrowsIfArgumentCombinationIsTooLong
  name: GroupedThrowsIfArgumentCombinationIsTooLong
  nameWithType: CustomIDHelperTests.CreateID.GroupedThrowsIfArgumentCombinationIsTooLong
  fullName: Remora.Discord.Interactivity.Tests.CustomIDHelperTests.CreateID.GroupedThrowsIfArgumentCombinationIsTooLong
