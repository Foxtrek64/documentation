### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportService
  commentId: T:Remora.Discord.Gateway.Tests.Transport.MockedTransportService
  id: MockedTransportService
  parent: Remora.Discord.Gateway.Tests.Transport
  children:
  - Remora.Discord.Gateway.Tests.Transport.MockedTransportService.#ctor(Xunit.Abstractions.ITestOutputHelper,System.Collections.Generic.IReadOnlyList{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence},System.Collections.Generic.IReadOnlyList{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence},Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceOptions,System.Threading.CancellationTokenSource)
  - Remora.Discord.Gateway.Tests.Transport.MockedTransportService.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  - Remora.Discord.Gateway.Tests.Transport.MockedTransportService.DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
  - Remora.Discord.Gateway.Tests.Transport.MockedTransportService.IsConnected
  - Remora.Discord.Gateway.Tests.Transport.MockedTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
  - Remora.Discord.Gateway.Tests.Transport.MockedTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: MockedTransportService
  nameWithType: MockedTransportService
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportService
  type: Class
  source:
    id: MockedTransportService
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Transport\MockedTransportService.cs
    startLine: 41
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Transport
  summary: Represents a mocked transport service.
  example: []
  syntax:
    content: 'public class MockedTransportService : IPayloadTransportService'
    content.vb: Public Class MockedTransportService Implements IPayloadTransportService
  inheritance:
  - System.Object
  implements:
  - Remora.Discord.Gateway.Transport.IPayloadTransportService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.IsConnected
  commentId: P:Remora.Discord.Gateway.Tests.Transport.MockedTransportService.IsConnected
  id: IsConnected
  parent: Remora.Discord.Gateway.Tests.Transport.MockedTransportService
  langs:
  - csharp
  - vb
  name: IsConnected
  nameWithType: MockedTransportService.IsConnected
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.IsConnected
  type: Property
  source:
    id: IsConnected
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Transport\MockedTransportService.cs
    startLine: 56
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Transport
  summary: Gets a value indicating whether the service has successfully connected.
  example: []
  syntax:
    content: public bool IsConnected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsConnected As Boolean
  overload: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.IsConnected*
  implements:
  - Remora.Discord.Gateway.Transport.IPayloadTransportService.IsConnected
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.#ctor(Xunit.Abstractions.ITestOutputHelper,System.Collections.Generic.IReadOnlyList{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence},System.Collections.Generic.IReadOnlyList{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence},Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceOptions,System.Threading.CancellationTokenSource)
  commentId: M:Remora.Discord.Gateway.Tests.Transport.MockedTransportService.#ctor(Xunit.Abstractions.ITestOutputHelper,System.Collections.Generic.IReadOnlyList{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence},System.Collections.Generic.IReadOnlyList{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence},Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceOptions,System.Threading.CancellationTokenSource)
  id: '#ctor(Xunit.Abstractions.ITestOutputHelper,System.Collections.Generic.IReadOnlyList{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence},System.Collections.Generic.IReadOnlyList{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence},Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceOptions,System.Threading.CancellationTokenSource)'
  parent: Remora.Discord.Gateway.Tests.Transport.MockedTransportService
  langs:
  - csharp
  - vb
  name: MockedTransportService(ITestOutputHelper, IReadOnlyList<MockedTransportSequence>, IReadOnlyList<MockedTransportSequence>, MockedTransportServiceOptions, CancellationTokenSource)
  nameWithType: MockedTransportService.MockedTransportService(ITestOutputHelper, IReadOnlyList<MockedTransportSequence>, IReadOnlyList<MockedTransportSequence>, MockedTransportServiceOptions, CancellationTokenSource)
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.MockedTransportService(Xunit.Abstractions.ITestOutputHelper, System.Collections.Generic.IReadOnlyList<Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence>, System.Collections.Generic.IReadOnlyList<Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence>, Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceOptions, System.Threading.CancellationTokenSource)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Transport\MockedTransportService.cs
    startLine: 66
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Transport
  summary: Initializes a new instance of the <xref href="Remora.Discord.Gateway.Tests.Transport.MockedTransportService" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public MockedTransportService(ITestOutputHelper testOutput, IReadOnlyList<MockedTransportSequence> sequences, IReadOnlyList<MockedTransportSequence> continuousSequences, MockedTransportServiceOptions serviceOptions, CancellationTokenSource finisher)
    parameters:
    - id: testOutput
      type: Xunit.Abstractions.ITestOutputHelper
      description: The test output helper.
    - id: sequences
      type: System.Collections.Generic.IReadOnlyList{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence}
      description: The sequences in use.
    - id: continuousSequences
      type: System.Collections.Generic.IReadOnlyList{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence}
      description: The continuous sequences in use.
    - id: serviceOptions
      type: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceOptions
      description: The service options.
    - id: finisher
      type: System.Threading.CancellationTokenSource
      description: The token source to cancel when all sequences are finished.
    content.vb: Public Sub New(testOutput As ITestOutputHelper, sequences As IReadOnlyList(Of MockedTransportSequence), continuousSequences As IReadOnlyList(Of MockedTransportSequence), serviceOptions As MockedTransportServiceOptions, finisher As CancellationTokenSource)
  overload: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.#ctor*
  nameWithType.vb: MockedTransportService.New(ITestOutputHelper, IReadOnlyList(Of MockedTransportSequence), IReadOnlyList(Of MockedTransportSequence), MockedTransportServiceOptions, CancellationTokenSource)
  fullName.vb: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.New(Xunit.Abstractions.ITestOutputHelper, System.Collections.Generic.IReadOnlyList(Of Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence), System.Collections.Generic.IReadOnlyList(Of Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence), Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceOptions, System.Threading.CancellationTokenSource)
  name.vb: New(ITestOutputHelper, IReadOnlyList(Of MockedTransportSequence), IReadOnlyList(Of MockedTransportSequence), MockedTransportServiceOptions, CancellationTokenSource)
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Tests.Transport.MockedTransportService.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  id: ConnectAsync(System.Uri,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Tests.Transport.MockedTransportService
  langs:
  - csharp
  - vb
  name: ConnectAsync(Uri, CancellationToken)
  nameWithType: MockedTransportService.ConnectAsync(Uri, CancellationToken)
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.ConnectAsync(System.Uri, System.Threading.CancellationToken)
  type: Method
  source:
    id: ConnectAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Transport\MockedTransportService.cs
    startLine: 85
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Transport
  summary: Connects to the transport endpoint, enabling I/O operations.
  example: []
  syntax:
    content: public Task<Result> ConnectAsync(Uri endpoint, CancellationToken ct = default)
    parameters:
    - id: endpoint
      type: System.Uri
      description: The endpoint to connect to.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A connection result which may or may not have succeeded.
    content.vb: Public Function ConnectAsync(endpoint As Uri, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.ConnectAsync*
  implements:
  - Remora.Discord.Gateway.Transport.IPayloadTransportService.ConnectAsync(System.Uri,System.Threading.CancellationToken)
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Tests.Transport.MockedTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
  id: SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Tests.Transport.MockedTransportService
  langs:
  - csharp
  - vb
  name: SendPayloadAsync(IPayload, CancellationToken)
  nameWithType: MockedTransportService.SendPayloadAsync(IPayload, CancellationToken)
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendPayloadAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Transport\MockedTransportService.cs
    startLine: 185
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Transport
  summary: Asynchronously sends a payload.
  remarks: This method should be thread-safe in conjunction with <xref href="Remora.Discord.Gateway.Transport.IPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ValueTask<Result> SendPayloadAsync(IPayload payload, CancellationToken ct = default)
    parameters:
    - id: payload
      type: Remora.Discord.API.Abstractions.Gateway.IPayload
      description: The payload.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.ValueTask{Remora.Results.Result}
      description: A send result which may or may not have succeeded.
    content.vb: Public Function SendPayloadAsync(payload As IPayload, ct As CancellationToken = Nothing) As ValueTask(Of Result)
  overload: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.SendPayloadAsync*
  implements:
  - Remora.Discord.Gateway.Transport.IPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Tests.Transport.MockedTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
  id: ReceivePayloadAsync(System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Tests.Transport.MockedTransportService
  langs:
  - csharp
  - vb
  name: ReceivePayloadAsync(CancellationToken)
  nameWithType: MockedTransportService.ReceivePayloadAsync(CancellationToken)
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
  type: Method
  source:
    id: ReceivePayloadAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Transport\MockedTransportService.cs
    startLine: 297
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Transport
  summary: Asynchronously receives a payload.
  remarks: This method should be thread-safe in conjunction with <xref href="Remora.Discord.Gateway.Transport.IPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ValueTask<Result<IPayload>> ReceivePayloadAsync(CancellationToken ct = default)
    parameters:
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.ValueTask{Remora.Results.Result{Remora.Discord.API.Abstractions.Gateway.IPayload}}
      description: A receive result which may or may not have succeeded.
    content.vb: Public Function ReceivePayloadAsync(ct As CancellationToken = Nothing) As ValueTask(Of Result(Of IPayload))
  overload: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.ReceivePayloadAsync*
  implements:
  - Remora.Discord.Gateway.Transport.IPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Tests.Transport.MockedTransportService.DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
  id: DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Tests.Transport.MockedTransportService
  langs:
  - csharp
  - vb
  name: DisconnectAsync(bool, CancellationToken)
  nameWithType: MockedTransportService.DisconnectAsync(bool, CancellationToken)
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.DisconnectAsync(bool, System.Threading.CancellationToken)
  type: Method
  source:
    id: DisconnectAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Transport\MockedTransportService.cs
    startLine: 389
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Transport
  summary: Disconnects from the transport endpoint.
  example: []
  syntax:
    content: public Task<Result> DisconnectAsync(bool reconnectionIntended, CancellationToken ct = default)
    parameters:
    - id: reconnectionIntended
      type: System.Boolean
      description: Whether reconnection is intended.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A connection result which may or may not have succeeded.
    content.vb: Public Function DisconnectAsync(reconnectionIntended As Boolean, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.DisconnectAsync*
  implements:
  - Remora.Discord.Gateway.Transport.IPayloadTransportService.DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: MockedTransportService.DisconnectAsync(Boolean, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.DisconnectAsync(Boolean, System.Threading.CancellationToken)
  name.vb: DisconnectAsync(Boolean, CancellationToken)
references:
- uid: Remora.Discord.Gateway.Tests.Transport
  commentId: N:Remora.Discord.Gateway.Tests.Transport
  href: Remora.html
  name: Remora.Discord.Gateway.Tests.Transport
  nameWithType: Remora.Discord.Gateway.Tests.Transport
  fullName: Remora.Discord.Gateway.Tests.Transport
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Tests
    name: Tests
    href: Remora.Discord.Gateway.Tests.html
  - name: .
  - uid: Remora.Discord.Gateway.Tests.Transport
    name: Transport
    href: Remora.Discord.Gateway.Tests.Transport.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Tests
    name: Tests
    href: Remora.Discord.Gateway.Tests.html
  - name: .
  - uid: Remora.Discord.Gateway.Tests.Transport
    name: Transport
    href: Remora.Discord.Gateway.Tests.Transport.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Gateway.Transport.IPayloadTransportService
  commentId: T:Remora.Discord.Gateway.Transport.IPayloadTransportService
  parent: Remora.Discord.Gateway.Transport
  href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html
  name: IPayloadTransportService
  nameWithType: IPayloadTransportService
  fullName: Remora.Discord.Gateway.Transport.IPayloadTransportService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Gateway.Transport
  commentId: N:Remora.Discord.Gateway.Transport
  href: Remora.html
  name: Remora.Discord.Gateway.Transport
  nameWithType: Remora.Discord.Gateway.Transport
  fullName: Remora.Discord.Gateway.Transport
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Transport
    name: Transport
    href: Remora.Discord.Gateway.Transport.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Transport
    name: Transport
    href: Remora.Discord.Gateway.Transport.html
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.IsConnected*
  commentId: Overload:Remora.Discord.Gateway.Tests.Transport.MockedTransportService.IsConnected
  href: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.html#Remora_Discord_Gateway_Tests_Transport_MockedTransportService_IsConnected
  name: IsConnected
  nameWithType: MockedTransportService.IsConnected
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.IsConnected
- uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.IsConnected
  commentId: P:Remora.Discord.Gateway.Transport.IPayloadTransportService.IsConnected
  parent: Remora.Discord.Gateway.Transport.IPayloadTransportService
  href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_IsConnected
  name: IsConnected
  nameWithType: IPayloadTransportService.IsConnected
  fullName: Remora.Discord.Gateway.Transport.IPayloadTransportService.IsConnected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportService
  commentId: T:Remora.Discord.Gateway.Tests.Transport.MockedTransportService
  href: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.html
  name: MockedTransportService
  nameWithType: MockedTransportService
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportService
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.#ctor*
  commentId: Overload:Remora.Discord.Gateway.Tests.Transport.MockedTransportService.#ctor
  href: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.html#Remora_Discord_Gateway_Tests_Transport_MockedTransportService__ctor_Xunit_Abstractions_ITestOutputHelper_System_Collections_Generic_IReadOnlyList_Remora_Discord_Gateway_Tests_Transport_MockedTransportSequence__System_Collections_Generic_IReadOnlyList_Remora_Discord_Gateway_Tests_Transport_MockedTransportSequence__Remora_Discord_Gateway_Tests_Transport_MockedTransportServiceOptions_System_Threading_CancellationTokenSource_
  name: MockedTransportService
  nameWithType: MockedTransportService.MockedTransportService
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.MockedTransportService
  nameWithType.vb: MockedTransportService.New
  fullName.vb: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.New
  name.vb: New
- uid: Xunit.Abstractions.ITestOutputHelper
  commentId: T:Xunit.Abstractions.ITestOutputHelper
  parent: Xunit.Abstractions
  isExternal: true
  name: ITestOutputHelper
  nameWithType: ITestOutputHelper
  fullName: Xunit.Abstractions.ITestOutputHelper
- uid: System.Collections.Generic.IReadOnlyList{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence}
  commentId: T:System.Collections.Generic.IReadOnlyList{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<MockedTransportSequence>
  nameWithType: IReadOnlyList<MockedTransportSequence>
  fullName: System.Collections.Generic.IReadOnlyList<Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence>
  nameWithType.vb: IReadOnlyList(Of MockedTransportSequence)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence)
  name.vb: IReadOnlyList(Of MockedTransportSequence)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence
    name: MockedTransportSequence
    href: Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence
    name: MockedTransportSequence
    href: Remora.Discord.Gateway.Tests.Transport.MockedTransportSequence.html
  - name: )
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceOptions
  commentId: T:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceOptions
  parent: Remora.Discord.Gateway.Tests.Transport
  href: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceOptions.html
  name: MockedTransportServiceOptions
  nameWithType: MockedTransportServiceOptions
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceOptions
- uid: System.Threading.CancellationTokenSource
  commentId: T:System.Threading.CancellationTokenSource
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtokensource
  name: CancellationTokenSource
  nameWithType: CancellationTokenSource
  fullName: System.Threading.CancellationTokenSource
- uid: Xunit.Abstractions
  commentId: N:Xunit.Abstractions
  isExternal: true
  name: Xunit.Abstractions
  nameWithType: Xunit.Abstractions
  fullName: Xunit.Abstractions
  spec.csharp:
  - uid: Xunit
    name: Xunit
    isExternal: true
  - name: .
  - uid: Xunit.Abstractions
    name: Abstractions
    isExternal: true
  spec.vb:
  - uid: Xunit
    name: Xunit
    isExternal: true
  - name: .
  - uid: Xunit.Abstractions
    name: Abstractions
    isExternal: true
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.ConnectAsync*
  commentId: Overload:Remora.Discord.Gateway.Tests.Transport.MockedTransportService.ConnectAsync
  href: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.html#Remora_Discord_Gateway_Tests_Transport_MockedTransportService_ConnectAsync_System_Uri_System_Threading_CancellationToken_
  name: ConnectAsync
  nameWithType: MockedTransportService.ConnectAsync
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.ConnectAsync
- uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Transport.IPayloadTransportService.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Transport.IPayloadTransportService
  isExternal: true
  href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_ConnectAsync_System_Uri_System_Threading_CancellationToken_
  name: ConnectAsync(Uri, CancellationToken)
  nameWithType: IPayloadTransportService.ConnectAsync(Uri, CancellationToken)
  fullName: Remora.Discord.Gateway.Transport.IPayloadTransportService.ConnectAsync(System.Uri, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.ConnectAsync(System.Uri,System.Threading.CancellationToken)
    name: ConnectAsync
    href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_ConnectAsync_System_Uri_System_Threading_CancellationToken_
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.ConnectAsync(System.Uri,System.Threading.CancellationToken)
    name: ConnectAsync
    href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_ConnectAsync_System_Uri_System_Threading_CancellationToken_
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result>
  nameWithType: Task<Result>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result>
  nameWithType.vb: Task(Of Result)
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result)
  name.vb: Task(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Transport.IPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Transport.IPayloadTransportService
  isExternal: true
  href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_ReceivePayloadAsync_System_Threading_CancellationToken_
  name: ReceivePayloadAsync(CancellationToken)
  nameWithType: IPayloadTransportService.ReceivePayloadAsync(CancellationToken)
  fullName: Remora.Discord.Gateway.Transport.IPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
    name: ReceivePayloadAsync
    href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_ReceivePayloadAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
    name: ReceivePayloadAsync
    href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_ReceivePayloadAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.SendPayloadAsync*
  commentId: Overload:Remora.Discord.Gateway.Tests.Transport.MockedTransportService.SendPayloadAsync
  href: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.html#Remora_Discord_Gateway_Tests_Transport_MockedTransportService_SendPayloadAsync_Remora_Discord_API_Abstractions_Gateway_IPayload_System_Threading_CancellationToken_
  name: SendPayloadAsync
  nameWithType: MockedTransportService.SendPayloadAsync
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.SendPayloadAsync
- uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Transport.IPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Transport.IPayloadTransportService
  isExternal: true
  href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_SendPayloadAsync_Remora_Discord_API_Abstractions_Gateway_IPayload_System_Threading_CancellationToken_
  name: SendPayloadAsync(IPayload, CancellationToken)
  nameWithType: IPayloadTransportService.SendPayloadAsync(IPayload, CancellationToken)
  fullName: Remora.Discord.Gateway.Transport.IPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
    name: SendPayloadAsync
    href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_SendPayloadAsync_Remora_Discord_API_Abstractions_Gateway_IPayload_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.IPayload
    name: IPayload
    href: Remora.Discord.API.Abstractions.Gateway.IPayload.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
    name: SendPayloadAsync
    href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_SendPayloadAsync_Remora_Discord_API_Abstractions_Gateway_IPayload_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.IPayload
    name: IPayload
    href: Remora.Discord.API.Abstractions.Gateway.IPayload.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway.IPayload
  commentId: T:Remora.Discord.API.Abstractions.Gateway.IPayload
  parent: Remora.Discord.API.Abstractions.Gateway
  href: Remora.Discord.API.Abstractions.Gateway.IPayload.html
  name: IPayload
  nameWithType: IPayload
  fullName: Remora.Discord.API.Abstractions.Gateway.IPayload
- uid: System.Threading.Tasks.ValueTask{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.ValueTask{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<Result>
  nameWithType: ValueTask<Result>
  fullName: System.Threading.Tasks.ValueTask<Remora.Results.Result>
  nameWithType.vb: ValueTask(Of Result)
  fullName.vb: System.Threading.Tasks.ValueTask(Of Remora.Results.Result)
  name.vb: ValueTask(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway
  commentId: N:Remora.Discord.API.Abstractions.Gateway
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Gateway
  nameWithType: Remora.Discord.API.Abstractions.Gateway
  fullName: Remora.Discord.API.Abstractions.Gateway
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.ReceivePayloadAsync*
  commentId: Overload:Remora.Discord.Gateway.Tests.Transport.MockedTransportService.ReceivePayloadAsync
  href: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.html#Remora_Discord_Gateway_Tests_Transport_MockedTransportService_ReceivePayloadAsync_System_Threading_CancellationToken_
  name: ReceivePayloadAsync
  nameWithType: MockedTransportService.ReceivePayloadAsync
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.ReceivePayloadAsync
- uid: System.Threading.Tasks.ValueTask{Remora.Results.Result{Remora.Discord.API.Abstractions.Gateway.IPayload}}
  commentId: T:System.Threading.Tasks.ValueTask{Remora.Results.Result{Remora.Discord.API.Abstractions.Gateway.IPayload}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<Result<IPayload>>
  nameWithType: ValueTask<Result<IPayload>>
  fullName: System.Threading.Tasks.ValueTask<Remora.Results.Result<Remora.Discord.API.Abstractions.Gateway.IPayload>>
  nameWithType.vb: ValueTask(Of Result(Of IPayload))
  fullName.vb: System.Threading.Tasks.ValueTask(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Gateway.IPayload))
  name.vb: ValueTask(Of Result(Of IPayload))
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Gateway.IPayload
    name: IPayload
    href: Remora.Discord.API.Abstractions.Gateway.IPayload.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Gateway.IPayload
    name: IPayload
    href: Remora.Discord.API.Abstractions.Gateway.IPayload.html
  - name: )
  - name: )
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.DisconnectAsync*
  commentId: Overload:Remora.Discord.Gateway.Tests.Transport.MockedTransportService.DisconnectAsync
  href: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.html#Remora_Discord_Gateway_Tests_Transport_MockedTransportService_DisconnectAsync_System_Boolean_System_Threading_CancellationToken_
  name: DisconnectAsync
  nameWithType: MockedTransportService.DisconnectAsync
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportService.DisconnectAsync
- uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Transport.IPayloadTransportService.DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Transport.IPayloadTransportService
  isExternal: true
  href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_DisconnectAsync_System_Boolean_System_Threading_CancellationToken_
  name: DisconnectAsync(bool, CancellationToken)
  nameWithType: IPayloadTransportService.DisconnectAsync(bool, CancellationToken)
  fullName: Remora.Discord.Gateway.Transport.IPayloadTransportService.DisconnectAsync(bool, System.Threading.CancellationToken)
  nameWithType.vb: IPayloadTransportService.DisconnectAsync(Boolean, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Transport.IPayloadTransportService.DisconnectAsync(Boolean, System.Threading.CancellationToken)
  name.vb: DisconnectAsync(Boolean, CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
    name: DisconnectAsync
    href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_DisconnectAsync_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
    name: DisconnectAsync
    href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_DisconnectAsync_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
