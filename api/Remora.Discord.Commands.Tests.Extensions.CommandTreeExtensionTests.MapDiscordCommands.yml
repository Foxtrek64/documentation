### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands
  commentId: T:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands
  id: CommandTreeExtensionTests.MapDiscordCommands
  parent: Remora.Discord.Commands.Tests.Extensions
  children:
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapComplexTree
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapDeeplyNestedCommand
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleNestedCommand
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleTopLevelCommands
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleNestedCommand
  - Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleTopLevelCommand
  langs:
  - csharp
  - vb
  name: CommandTreeExtensionTests.MapDiscordCommands
  nameWithType: CommandTreeExtensionTests.MapDiscordCommands
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands
  type: Class
  source:
    id: MapDiscordCommands
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 1519
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests the <xref href="Remora.Discord.Commands.Extensions.CommandTreeExtensions.MapDiscordCommands(Remora.Commands.Trees.CommandTree%2cSystem.Collections.Generic.IReadOnlyList%7bRemora.Discord.API.Abstractions.Objects.IApplicationCommand%7d)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: public class CommandTreeExtensionTests.MapDiscordCommands
    content.vb: Public Class CommandTreeExtensionTests.MapDiscordCommands
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleTopLevelCommand
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleTopLevelCommand
  id: CanMapSingleTopLevelCommand
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands
  langs:
  - csharp
  - vb
  name: CanMapSingleTopLevelCommand()
  nameWithType: CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleTopLevelCommand()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleTopLevelCommand()
  type: Method
  source:
    id: CanMapSingleTopLevelCommand
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 1524
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method can successfully map a single top-level command.
  example: []
  syntax:
    content: >-
      [Fact]

      public void CanMapSingleTopLevelCommand()
    content.vb: >-
      <Fact>

      Public Sub CanMapSingleTopLevelCommand()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleTopLevelCommand*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleTopLevelCommands
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleTopLevelCommands
  id: CanMapMultipleTopLevelCommands
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands
  langs:
  - csharp
  - vb
  name: CanMapMultipleTopLevelCommands()
  nameWithType: CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleTopLevelCommands()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleTopLevelCommands()
  type: Method
  source:
    id: CanMapMultipleTopLevelCommands
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 1562
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method can successfully map multiple top-level commands.
  example: []
  syntax:
    content: >-
      [Fact]

      public void CanMapMultipleTopLevelCommands()
    content.vb: >-
      <Fact>

      Public Sub CanMapMultipleTopLevelCommands()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleTopLevelCommands*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleNestedCommand
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleNestedCommand
  id: CanMapSingleNestedCommand
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands
  langs:
  - csharp
  - vb
  name: CanMapSingleNestedCommand()
  nameWithType: CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleNestedCommand()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleNestedCommand()
  type: Method
  source:
    id: CanMapSingleNestedCommand
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 1617
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method can successfully map a single nested command.
  example: []
  syntax:
    content: >-
      [Fact]

      public void CanMapSingleNestedCommand()
    content.vb: >-
      <Fact>

      Public Sub CanMapSingleNestedCommand()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleNestedCommand*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleNestedCommand
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleNestedCommand
  id: CanMapMultipleNestedCommand
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands
  langs:
  - csharp
  - vb
  name: CanMapMultipleNestedCommand()
  nameWithType: CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleNestedCommand()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleNestedCommand()
  type: Method
  source:
    id: CanMapMultipleNestedCommand
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 1665
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method can successfully map a single nested command.
  example: []
  syntax:
    content: >-
      [Fact]

      public void CanMapMultipleNestedCommand()
    content.vb: >-
      <Fact>

      Public Sub CanMapMultipleNestedCommand()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleNestedCommand*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapDeeplyNestedCommand
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapDeeplyNestedCommand
  id: CanMapDeeplyNestedCommand
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands
  langs:
  - csharp
  - vb
  name: CanMapDeeplyNestedCommand()
  nameWithType: CommandTreeExtensionTests.MapDiscordCommands.CanMapDeeplyNestedCommand()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapDeeplyNestedCommand()
  type: Method
  source:
    id: CanMapDeeplyNestedCommand
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 1720
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: Tests whether the method can successfully map a single deeply nested command.
  example: []
  syntax:
    content: >-
      [Fact]

      public void CanMapDeeplyNestedCommand()
    content.vb: >-
      <Fact>

      Public Sub CanMapDeeplyNestedCommand()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapDeeplyNestedCommand*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapComplexTree
  commentId: M:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapComplexTree
  id: CanMapComplexTree
  parent: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands
  langs:
  - csharp
  - vb
  name: CanMapComplexTree()
  nameWithType: CommandTreeExtensionTests.MapDiscordCommands.CanMapComplexTree()
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapComplexTree()
  type: Method
  source:
    id: CanMapComplexTree
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Extensions\CommandTreeExtensionTests.cs
    startLine: 1776
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Extensions
  summary: >-
    Tests whether the method can successfully map a complex tree, which is a combination of all previous

    tests.
  example: []
  syntax:
    content: >-
      [Fact]

      public void CanMapComplexTree()
    content.vb: >-
      <Fact>

      Public Sub CanMapComplexTree()
  overload: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapComplexTree*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: Remora.Discord.Commands.Extensions.CommandTreeExtensions.MapDiscordCommands(Remora.Commands.Trees.CommandTree,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommand})
  commentId: M:Remora.Discord.Commands.Extensions.CommandTreeExtensions.MapDiscordCommands(Remora.Commands.Trees.CommandTree,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommand})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: MapDiscordCommands(CommandTree, IReadOnlyList<IApplicationCommand>)
  nameWithType: CommandTreeExtensions.MapDiscordCommands(CommandTree, IReadOnlyList<IApplicationCommand>)
  fullName: Remora.Discord.Commands.Extensions.CommandTreeExtensions.MapDiscordCommands(Remora.Commands.Trees.CommandTree, System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IApplicationCommand>)
  nameWithType.vb: CommandTreeExtensions.MapDiscordCommands(CommandTree, IReadOnlyList(Of IApplicationCommand))
  fullName.vb: Remora.Discord.Commands.Extensions.CommandTreeExtensions.MapDiscordCommands(Remora.Commands.Trees.CommandTree, System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IApplicationCommand))
  name.vb: MapDiscordCommands(CommandTree, IReadOnlyList(Of IApplicationCommand))
  spec.csharp:
  - uid: Remora.Discord.Commands.Extensions.CommandTreeExtensions.MapDiscordCommands(Remora.Commands.Trees.CommandTree,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommand})
    name: MapDiscordCommands
  - name: (
  - uid: Remora.Commands.Trees.CommandTree
    name: CommandTree
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationCommand
    name: IApplicationCommand
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Commands.Extensions.CommandTreeExtensions.MapDiscordCommands(Remora.Commands.Trees.CommandTree,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommand})
    name: MapDiscordCommands
  - name: (
  - uid: Remora.Commands.Trees.CommandTree
    name: CommandTree
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationCommand
    name: IApplicationCommand
  - name: )
  - name: )
- uid: Remora.Discord.Commands.Tests.Extensions
  commentId: N:Remora.Discord.Commands.Tests.Extensions
  href: Remora.html
  name: Remora.Discord.Commands.Tests.Extensions
  nameWithType: Remora.Discord.Commands.Tests.Extensions
  fullName: Remora.Discord.Commands.Tests.Extensions
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Extensions
    name: Extensions
    href: Remora.Discord.Commands.Tests.Extensions.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Extensions
    name: Extensions
    href: Remora.Discord.Commands.Tests.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleTopLevelCommand*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleTopLevelCommand
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_MapDiscordCommands_CanMapSingleTopLevelCommand
  name: CanMapSingleTopLevelCommand
  nameWithType: CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleTopLevelCommand
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleTopLevelCommand
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleTopLevelCommands*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleTopLevelCommands
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_MapDiscordCommands_CanMapMultipleTopLevelCommands
  name: CanMapMultipleTopLevelCommands
  nameWithType: CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleTopLevelCommands
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleTopLevelCommands
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleNestedCommand*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleNestedCommand
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_MapDiscordCommands_CanMapSingleNestedCommand
  name: CanMapSingleNestedCommand
  nameWithType: CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleNestedCommand
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapSingleNestedCommand
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleNestedCommand*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleNestedCommand
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_MapDiscordCommands_CanMapMultipleNestedCommand
  name: CanMapMultipleNestedCommand
  nameWithType: CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleNestedCommand
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapMultipleNestedCommand
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapDeeplyNestedCommand*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapDeeplyNestedCommand
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_MapDiscordCommands_CanMapDeeplyNestedCommand
  name: CanMapDeeplyNestedCommand
  nameWithType: CommandTreeExtensionTests.MapDiscordCommands.CanMapDeeplyNestedCommand
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapDeeplyNestedCommand
- uid: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapComplexTree*
  commentId: Overload:Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapComplexTree
  href: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.html#Remora_Discord_Commands_Tests_Extensions_CommandTreeExtensionTests_MapDiscordCommands_CanMapComplexTree
  name: CanMapComplexTree
  nameWithType: CommandTreeExtensionTests.MapDiscordCommands.CanMapComplexTree
  fullName: Remora.Discord.Commands.Tests.Extensions.CommandTreeExtensionTests.MapDiscordCommands.CanMapComplexTree
