### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests
  commentId: T:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests
  id: AnsiStringBuilderTests
  parent: Remora.Discord.Extensions.Tests
  children:
  - Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundDefaultSuccess(System.String)
  - Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundLeadingCharsSuccess(System.String,System.Int32)
  - Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldDefaultSuccess(System.String)
  - Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldLeadingCharsSuccess(System.String,System.Int32)
  - Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundDefaultSuccess(System.String)
  - Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundLeadingCharsSuccess(System.String,System.Int32)
  - Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixAllSuccess(Remora.Discord.Extensions.Formatting.AnsiForegroundColor,Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)
  - Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixBoldAndUnderlineSuccess
  - Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixForegroundAndBackgroundSuccess(Remora.Discord.Extensions.Formatting.AnsiForegroundColor,Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)
  - Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ResetSuccess
  - Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineDefaultSuccess(System.String)
  - Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineLeadingCharsSuccess(System.String,System.Int32)
  langs:
  - csharp
  - vb
  name: AnsiStringBuilderTests
  nameWithType: AnsiStringBuilderTests
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests
  type: Class
  source:
    id: AnsiStringBuilderTests
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Extensions.Tests\AnsiStringBuilderTests.cs
    startLine: 31
  assemblies:
  - Remora.Discord.Extensions.Tests
  namespace: Remora.Discord.Extensions.Tests
  summary: Tests to ensure the <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder" data-throw-if-not-resolved="false"></xref> build a correct ANSI formatted string.
  example: []
  syntax:
    content: public class AnsiStringBuilderTests
    content.vb: Public Class AnsiStringBuilderTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldDefaultSuccess(System.String)
  commentId: M:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldDefaultSuccess(System.String)
  id: BoldDefaultSuccess(System.String)
  parent: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests
  langs:
  - csharp
  - vb
  name: BoldDefaultSuccess(string)
  nameWithType: AnsiStringBuilderTests.BoldDefaultSuccess(string)
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldDefaultSuccess(string)
  type: Method
  source:
    id: BoldDefaultSuccess
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Extensions.Tests\AnsiStringBuilderTests.cs
    startLine: 39
  assemblies:
  - Remora.Discord.Extensions.Tests
  namespace: Remora.Discord.Extensions.Tests
  summary: Tests to see if the <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Bold(System.Boolean)" data-throw-if-not-resolved="false"></xref> method bolds the input text.
  example: []
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "Sample" })]

      [InlineData(new object[] { "Remora.Discord" })]

      public void BoldDefaultSuccess(string data)
    parameters:
    - id: data
      type: System.String
      description: The input text to format.
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "Sample" })>

      <InlineData(New Object() { "Remora.Discord" })>

      Public Sub BoldDefaultSuccess(data As String)
  overload: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldDefaultSuccess*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: AnsiStringBuilderTests.BoldDefaultSuccess(String)
  fullName.vb: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldDefaultSuccess(String)
  name.vb: BoldDefaultSuccess(String)
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldLeadingCharsSuccess(System.String,System.Int32)
  commentId: M:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldLeadingCharsSuccess(System.String,System.Int32)
  id: BoldLeadingCharsSuccess(System.String,System.Int32)
  parent: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests
  langs:
  - csharp
  - vb
  name: BoldLeadingCharsSuccess(string, int)
  nameWithType: AnsiStringBuilderTests.BoldLeadingCharsSuccess(string, int)
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldLeadingCharsSuccess(string, int)
  type: Method
  source:
    id: BoldLeadingCharsSuccess
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Extensions.Tests\AnsiStringBuilderTests.cs
    startLine: 54
  assemblies:
  - Remora.Discord.Extensions.Tests
  namespace: Remora.Discord.Extensions.Tests
  summary: Tests to see if the <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Bold(System.Boolean)" data-throw-if-not-resolved="false"></xref> method bolds the first n characters.
  example: []
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "Sample", 3 })]

      [InlineData(new object[] { "Remora.Discord", 7 })]

      public void BoldLeadingCharsSuccess(string data, int charCount)
    parameters:
    - id: data
      type: System.String
      description: The input text to format.
    - id: charCount
      type: System.Int32
      description: The n leading characters that should be bold.
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "Sample", 3 })>

      <InlineData(New Object() { "Remora.Discord", 7 })>

      Public Sub BoldLeadingCharsSuccess(data As String, charCount As Integer)
  overload: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldLeadingCharsSuccess*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: AnsiStringBuilderTests.BoldLeadingCharsSuccess(String, Integer)
  fullName.vb: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldLeadingCharsSuccess(String, Integer)
  name.vb: BoldLeadingCharsSuccess(String, Integer)
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineDefaultSuccess(System.String)
  commentId: M:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineDefaultSuccess(System.String)
  id: UnderlineDefaultSuccess(System.String)
  parent: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests
  langs:
  - csharp
  - vb
  name: UnderlineDefaultSuccess(string)
  nameWithType: AnsiStringBuilderTests.UnderlineDefaultSuccess(string)
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineDefaultSuccess(string)
  type: Method
  source:
    id: UnderlineDefaultSuccess
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Extensions.Tests\AnsiStringBuilderTests.cs
    startLine: 71
  assemblies:
  - Remora.Discord.Extensions.Tests
  namespace: Remora.Discord.Extensions.Tests
  summary: Tests to see if the <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Underline(System.Boolean)" data-throw-if-not-resolved="false"></xref> method underlines the input text.
  example: []
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "Sample" })]

      [InlineData(new object[] { "Remora.Discord" })]

      public void UnderlineDefaultSuccess(string data)
    parameters:
    - id: data
      type: System.String
      description: The input text to format.
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "Sample" })>

      <InlineData(New Object() { "Remora.Discord" })>

      Public Sub UnderlineDefaultSuccess(data As String)
  overload: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineDefaultSuccess*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: AnsiStringBuilderTests.UnderlineDefaultSuccess(String)
  fullName.vb: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineDefaultSuccess(String)
  name.vb: UnderlineDefaultSuccess(String)
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineLeadingCharsSuccess(System.String,System.Int32)
  commentId: M:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineLeadingCharsSuccess(System.String,System.Int32)
  id: UnderlineLeadingCharsSuccess(System.String,System.Int32)
  parent: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests
  langs:
  - csharp
  - vb
  name: UnderlineLeadingCharsSuccess(string, int)
  nameWithType: AnsiStringBuilderTests.UnderlineLeadingCharsSuccess(string, int)
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineLeadingCharsSuccess(string, int)
  type: Method
  source:
    id: UnderlineLeadingCharsSuccess
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Extensions.Tests\AnsiStringBuilderTests.cs
    startLine: 86
  assemblies:
  - Remora.Discord.Extensions.Tests
  namespace: Remora.Discord.Extensions.Tests
  summary: Tests to see if the <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Underline(System.Boolean)" data-throw-if-not-resolved="false"></xref> method underlines the first n characters.
  example: []
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "Sample", 3 })]

      [InlineData(new object[] { "Remora.Discord", 7 })]

      public void UnderlineLeadingCharsSuccess(string data, int charCount)
    parameters:
    - id: data
      type: System.String
      description: The input text to format.
    - id: charCount
      type: System.Int32
      description: The n leading characters that should be underlined.
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "Sample", 3 })>

      <InlineData(New Object() { "Remora.Discord", 7 })>

      Public Sub UnderlineLeadingCharsSuccess(data As String, charCount As Integer)
  overload: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineLeadingCharsSuccess*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: AnsiStringBuilderTests.UnderlineLeadingCharsSuccess(String, Integer)
  fullName.vb: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineLeadingCharsSuccess(String, Integer)
  name.vb: UnderlineLeadingCharsSuccess(String, Integer)
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundDefaultSuccess(System.String)
  commentId: M:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundDefaultSuccess(System.String)
  id: ForegroundDefaultSuccess(System.String)
  parent: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests
  langs:
  - csharp
  - vb
  name: ForegroundDefaultSuccess(string)
  nameWithType: AnsiStringBuilderTests.ForegroundDefaultSuccess(string)
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundDefaultSuccess(string)
  type: Method
  source:
    id: ForegroundDefaultSuccess
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Extensions.Tests\AnsiStringBuilderTests.cs
    startLine: 104
  assemblies:
  - Remora.Discord.Extensions.Tests
  namespace: Remora.Discord.Extensions.Tests
  summary: >-
    Tests to see if the <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Foreground(Remora.Discord.Extensions.Formatting.AnsiForegroundColor)" data-throw-if-not-resolved="false"></xref> method sets the foreground color for the input

    text.
  example: []
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "Sample" })]

      [InlineData(new object[] { "Remora.Discord" })]

      public void ForegroundDefaultSuccess(string data)
    parameters:
    - id: data
      type: System.String
      description: The input text to format.
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "Sample" })>

      <InlineData(New Object() { "Remora.Discord" })>

      Public Sub ForegroundDefaultSuccess(data As String)
  overload: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundDefaultSuccess*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: AnsiStringBuilderTests.ForegroundDefaultSuccess(String)
  fullName.vb: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundDefaultSuccess(String)
  name.vb: ForegroundDefaultSuccess(String)
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundLeadingCharsSuccess(System.String,System.Int32)
  commentId: M:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundLeadingCharsSuccess(System.String,System.Int32)
  id: ForegroundLeadingCharsSuccess(System.String,System.Int32)
  parent: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests
  langs:
  - csharp
  - vb
  name: ForegroundLeadingCharsSuccess(string, int)
  nameWithType: AnsiStringBuilderTests.ForegroundLeadingCharsSuccess(string, int)
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundLeadingCharsSuccess(string, int)
  type: Method
  source:
    id: ForegroundLeadingCharsSuccess
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Extensions.Tests\AnsiStringBuilderTests.cs
    startLine: 129
  assemblies:
  - Remora.Discord.Extensions.Tests
  namespace: Remora.Discord.Extensions.Tests
  summary: >-
    Tests to see if the <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Foreground(Remora.Discord.Extensions.Formatting.AnsiForegroundColor)" data-throw-if-not-resolved="false"></xref> method sets the foreground color for the first n

    characters.
  example: []
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "Sample", 3 })]

      [InlineData(new object[] { "Remora.Discord", 7 })]

      public void ForegroundLeadingCharsSuccess(string data, int charCount)
    parameters:
    - id: data
      type: System.String
      description: The input text to format.
    - id: charCount
      type: System.Int32
      description: The n leading characters that should have a foreground color.
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "Sample", 3 })>

      <InlineData(New Object() { "Remora.Discord", 7 })>

      Public Sub ForegroundLeadingCharsSuccess(data As String, charCount As Integer)
  overload: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundLeadingCharsSuccess*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: AnsiStringBuilderTests.ForegroundLeadingCharsSuccess(String, Integer)
  fullName.vb: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundLeadingCharsSuccess(String, Integer)
  name.vb: ForegroundLeadingCharsSuccess(String, Integer)
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundDefaultSuccess(System.String)
  commentId: M:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundDefaultSuccess(System.String)
  id: BackgroundDefaultSuccess(System.String)
  parent: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests
  langs:
  - csharp
  - vb
  name: BackgroundDefaultSuccess(string)
  nameWithType: AnsiStringBuilderTests.BackgroundDefaultSuccess(string)
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundDefaultSuccess(string)
  type: Method
  source:
    id: BackgroundDefaultSuccess
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Extensions.Tests\AnsiStringBuilderTests.cs
    startLine: 163
  assemblies:
  - Remora.Discord.Extensions.Tests
  namespace: Remora.Discord.Extensions.Tests
  summary: >-
    Tests to see if the <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Background(Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)" data-throw-if-not-resolved="false"></xref> method sets the background color for the input

    text.
  example: []
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "Sample" })]

      [InlineData(new object[] { "Remora.Discord" })]

      public void BackgroundDefaultSuccess(string data)
    parameters:
    - id: data
      type: System.String
      description: The input text to format.
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "Sample" })>

      <InlineData(New Object() { "Remora.Discord" })>

      Public Sub BackgroundDefaultSuccess(data As String)
  overload: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundDefaultSuccess*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: AnsiStringBuilderTests.BackgroundDefaultSuccess(String)
  fullName.vb: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundDefaultSuccess(String)
  name.vb: BackgroundDefaultSuccess(String)
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundLeadingCharsSuccess(System.String,System.Int32)
  commentId: M:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundLeadingCharsSuccess(System.String,System.Int32)
  id: BackgroundLeadingCharsSuccess(System.String,System.Int32)
  parent: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests
  langs:
  - csharp
  - vb
  name: BackgroundLeadingCharsSuccess(string, int)
  nameWithType: AnsiStringBuilderTests.BackgroundLeadingCharsSuccess(string, int)
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundLeadingCharsSuccess(string, int)
  type: Method
  source:
    id: BackgroundLeadingCharsSuccess
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Extensions.Tests\AnsiStringBuilderTests.cs
    startLine: 188
  assemblies:
  - Remora.Discord.Extensions.Tests
  namespace: Remora.Discord.Extensions.Tests
  summary: >-
    Tests to see if the <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Background(Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)" data-throw-if-not-resolved="false"></xref> method sets the background color for the first n

    characters.
  example: []
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "Sample", 3 })]

      [InlineData(new object[] { "Remora.Discord", 7 })]

      public void BackgroundLeadingCharsSuccess(string data, int charCount)
    parameters:
    - id: data
      type: System.String
      description: The input text to format.
    - id: charCount
      type: System.Int32
      description: The n leading characters that should have a background color.
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "Sample", 3 })>

      <InlineData(New Object() { "Remora.Discord", 7 })>

      Public Sub BackgroundLeadingCharsSuccess(data As String, charCount As Integer)
  overload: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundLeadingCharsSuccess*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: AnsiStringBuilderTests.BackgroundLeadingCharsSuccess(String, Integer)
  fullName.vb: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundLeadingCharsSuccess(String, Integer)
  name.vb: BackgroundLeadingCharsSuccess(String, Integer)
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixBoldAndUnderlineSuccess
  commentId: M:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixBoldAndUnderlineSuccess
  id: MixBoldAndUnderlineSuccess
  parent: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests
  langs:
  - csharp
  - vb
  name: MixBoldAndUnderlineSuccess()
  nameWithType: AnsiStringBuilderTests.MixBoldAndUnderlineSuccess()
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixBoldAndUnderlineSuccess()
  type: Method
  source:
    id: MixBoldAndUnderlineSuccess
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Extensions.Tests\AnsiStringBuilderTests.cs
    startLine: 221
  assemblies:
  - Remora.Discord.Extensions.Tests
  namespace: Remora.Discord.Extensions.Tests
  summary: >-
    Tests to see if mixing <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Bold(System.Boolean)" data-throw-if-not-resolved="false"></xref> and <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Underline(System.Boolean)" data-throw-if-not-resolved="false"></xref> method

    format as expected.
  example: []
  syntax:
    content: >-
      [Fact]

      public void MixBoldAndUnderlineSuccess()
    content.vb: >-
      <Fact>

      Public Sub MixBoldAndUnderlineSuccess()
  overload: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixBoldAndUnderlineSuccess*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixForegroundAndBackgroundSuccess(Remora.Discord.Extensions.Formatting.AnsiForegroundColor,Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)
  commentId: M:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixForegroundAndBackgroundSuccess(Remora.Discord.Extensions.Formatting.AnsiForegroundColor,Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)
  id: MixForegroundAndBackgroundSuccess(Remora.Discord.Extensions.Formatting.AnsiForegroundColor,Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)
  parent: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests
  langs:
  - csharp
  - vb
  name: MixForegroundAndBackgroundSuccess(AnsiForegroundColor, AnsiBackgroundColor)
  nameWithType: AnsiStringBuilderTests.MixForegroundAndBackgroundSuccess(AnsiForegroundColor, AnsiBackgroundColor)
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixForegroundAndBackgroundSuccess(Remora.Discord.Extensions.Formatting.AnsiForegroundColor, Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)
  type: Method
  source:
    id: MixForegroundAndBackgroundSuccess
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Extensions.Tests\AnsiStringBuilderTests.cs
    startLine: 251
  assemblies:
  - Remora.Discord.Extensions.Tests
  namespace: Remora.Discord.Extensions.Tests
  summary: >-
    Tests to see if mixing <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Foreground(Remora.Discord.Extensions.Formatting.AnsiForegroundColor)" data-throw-if-not-resolved="false"></xref> and <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Background(Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)" data-throw-if-not-resolved="false"></xref>

    method format as expected.
  example: []
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { AnsiForegroundColor.Red, AnsiBackgroundColor.Violet })]

      [InlineData(new object[] { AnsiForegroundColor.Magenta, AnsiBackgroundColor.Base0 })]

      [InlineData(new object[] { AnsiForegroundColor.Cyan, AnsiBackgroundColor.Orange })]

      public void MixForegroundAndBackgroundSuccess(AnsiForegroundColor foregroundColor, AnsiBackgroundColor backgroundColor)
    parameters:
    - id: foregroundColor
      type: Remora.Discord.Extensions.Formatting.AnsiForegroundColor
      description: The foreground color to use.
    - id: backgroundColor
      type: Remora.Discord.Extensions.Formatting.AnsiBackgroundColor
      description: The background color to use.
    content.vb: >-
      <Theory>

      <InlineData(New Object() { AnsiForegroundColor.Red, AnsiBackgroundColor.Violet })>

      <InlineData(New Object() { AnsiForegroundColor.Magenta, AnsiBackgroundColor.Base0 })>

      <InlineData(New Object() { AnsiForegroundColor.Cyan, AnsiBackgroundColor.Orange })>

      Public Sub MixForegroundAndBackgroundSuccess(foregroundColor As AnsiForegroundColor, backgroundColor As AnsiBackgroundColor)
  overload: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixForegroundAndBackgroundSuccess*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixAllSuccess(Remora.Discord.Extensions.Formatting.AnsiForegroundColor,Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)
  commentId: M:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixAllSuccess(Remora.Discord.Extensions.Formatting.AnsiForegroundColor,Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)
  id: MixAllSuccess(Remora.Discord.Extensions.Formatting.AnsiForegroundColor,Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)
  parent: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests
  langs:
  - csharp
  - vb
  name: MixAllSuccess(AnsiForegroundColor, AnsiBackgroundColor)
  nameWithType: AnsiStringBuilderTests.MixAllSuccess(AnsiForegroundColor, AnsiBackgroundColor)
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixAllSuccess(Remora.Discord.Extensions.Formatting.AnsiForegroundColor, Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)
  type: Method
  source:
    id: MixAllSuccess
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Extensions.Tests\AnsiStringBuilderTests.cs
    startLine: 289
  assemblies:
  - Remora.Discord.Extensions.Tests
  namespace: Remora.Discord.Extensions.Tests
  summary: >-
    Tests to see if mixing <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Bold(System.Boolean)" data-throw-if-not-resolved="false"></xref> and <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Underline(System.Boolean)" data-throw-if-not-resolved="false"></xref> and

    <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Foreground(Remora.Discord.Extensions.Formatting.AnsiForegroundColor)" data-throw-if-not-resolved="false"></xref> and <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Background(Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)" data-throw-if-not-resolved="false"></xref> method format as

    expected.
  example: []
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { AnsiForegroundColor.Red, AnsiBackgroundColor.Violet })]

      [InlineData(new object[] { AnsiForegroundColor.Magenta, AnsiBackgroundColor.Base0 })]

      [InlineData(new object[] { AnsiForegroundColor.Cyan, AnsiBackgroundColor.Orange })]

      public void MixAllSuccess(AnsiForegroundColor foregroundColor, AnsiBackgroundColor backgroundColor)
    parameters:
    - id: foregroundColor
      type: Remora.Discord.Extensions.Formatting.AnsiForegroundColor
      description: The foreground color to use.
    - id: backgroundColor
      type: Remora.Discord.Extensions.Formatting.AnsiBackgroundColor
      description: The background color to use.
    content.vb: >-
      <Theory>

      <InlineData(New Object() { AnsiForegroundColor.Red, AnsiBackgroundColor.Violet })>

      <InlineData(New Object() { AnsiForegroundColor.Magenta, AnsiBackgroundColor.Base0 })>

      <InlineData(New Object() { AnsiForegroundColor.Cyan, AnsiBackgroundColor.Orange })>

      Public Sub MixAllSuccess(foregroundColor As AnsiForegroundColor, backgroundColor As AnsiBackgroundColor)
  overload: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixAllSuccess*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ResetSuccess
  commentId: M:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ResetSuccess
  id: ResetSuccess
  parent: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests
  langs:
  - csharp
  - vb
  name: ResetSuccess()
  nameWithType: AnsiStringBuilderTests.ResetSuccess()
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ResetSuccess()
  type: Method
  source:
    id: ResetSuccess
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Extensions.Tests\AnsiStringBuilderTests.cs
    startLine: 331
  assemblies:
  - Remora.Discord.Extensions.Tests
  namespace: Remora.Discord.Extensions.Tests
  summary: Tests to see if the <xref href="Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Reset" data-throw-if-not-resolved="false"></xref> method resets the styling.
  example: []
  syntax:
    content: >-
      [Fact]

      public void ResetSuccess()
    content.vb: >-
      <Fact>

      Public Sub ResetSuccess()
  overload: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ResetSuccess*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: Remora.Discord.Extensions.Formatting.AnsiStringBuilder
  commentId: T:Remora.Discord.Extensions.Formatting.AnsiStringBuilder
  parent: Remora.Discord.Extensions.Formatting
  href: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.html
  name: AnsiStringBuilder
  nameWithType: AnsiStringBuilder
  fullName: Remora.Discord.Extensions.Formatting.AnsiStringBuilder
- uid: Remora.Discord.Extensions.Tests
  commentId: N:Remora.Discord.Extensions.Tests
  href: Remora.html
  name: Remora.Discord.Extensions.Tests
  nameWithType: Remora.Discord.Extensions.Tests
  fullName: Remora.Discord.Extensions.Tests
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Extensions
    name: Extensions
    href: Remora.Discord.Extensions.html
  - name: .
  - uid: Remora.Discord.Extensions.Tests
    name: Tests
    href: Remora.Discord.Extensions.Tests.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Extensions
    name: Extensions
    href: Remora.Discord.Extensions.html
  - name: .
  - uid: Remora.Discord.Extensions.Tests
    name: Tests
    href: Remora.Discord.Extensions.Tests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Remora.Discord.Extensions.Formatting
  commentId: N:Remora.Discord.Extensions.Formatting
  href: Remora.html
  name: Remora.Discord.Extensions.Formatting
  nameWithType: Remora.Discord.Extensions.Formatting
  fullName: Remora.Discord.Extensions.Formatting
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Extensions
    name: Extensions
    href: Remora.Discord.Extensions.html
  - name: .
  - uid: Remora.Discord.Extensions.Formatting
    name: Formatting
    href: Remora.Discord.Extensions.Formatting.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Extensions
    name: Extensions
    href: Remora.Discord.Extensions.html
  - name: .
  - uid: Remora.Discord.Extensions.Formatting
    name: Formatting
    href: Remora.Discord.Extensions.Formatting.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Bold(System.Boolean)
  commentId: M:Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Bold(System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Bold(bool)
  nameWithType: AnsiStringBuilder.Bold(bool)
  fullName: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Bold(bool)
  nameWithType.vb: AnsiStringBuilder.Bold(Boolean)
  fullName.vb: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Bold(Boolean)
  name.vb: Bold(Boolean)
  spec.csharp:
  - uid: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Bold(System.Boolean)
    name: Bold
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Bold(System.Boolean)
    name: Bold
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldDefaultSuccess*
  commentId: Overload:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldDefaultSuccess
  href: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.html#Remora_Discord_Extensions_Tests_AnsiStringBuilderTests_BoldDefaultSuccess_System_String_
  name: BoldDefaultSuccess
  nameWithType: AnsiStringBuilderTests.BoldDefaultSuccess
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldDefaultSuccess
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldLeadingCharsSuccess*
  commentId: Overload:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldLeadingCharsSuccess
  href: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.html#Remora_Discord_Extensions_Tests_AnsiStringBuilderTests_BoldLeadingCharsSuccess_System_String_System_Int32_
  name: BoldLeadingCharsSuccess
  nameWithType: AnsiStringBuilderTests.BoldLeadingCharsSuccess
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BoldLeadingCharsSuccess
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Underline(System.Boolean)
  commentId: M:Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Underline(System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Underline(bool)
  nameWithType: AnsiStringBuilder.Underline(bool)
  fullName: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Underline(bool)
  nameWithType.vb: AnsiStringBuilder.Underline(Boolean)
  fullName.vb: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Underline(Boolean)
  name.vb: Underline(Boolean)
  spec.csharp:
  - uid: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Underline(System.Boolean)
    name: Underline
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Underline(System.Boolean)
    name: Underline
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineDefaultSuccess*
  commentId: Overload:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineDefaultSuccess
  href: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.html#Remora_Discord_Extensions_Tests_AnsiStringBuilderTests_UnderlineDefaultSuccess_System_String_
  name: UnderlineDefaultSuccess
  nameWithType: AnsiStringBuilderTests.UnderlineDefaultSuccess
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineDefaultSuccess
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineLeadingCharsSuccess*
  commentId: Overload:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineLeadingCharsSuccess
  href: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.html#Remora_Discord_Extensions_Tests_AnsiStringBuilderTests_UnderlineLeadingCharsSuccess_System_String_System_Int32_
  name: UnderlineLeadingCharsSuccess
  nameWithType: AnsiStringBuilderTests.UnderlineLeadingCharsSuccess
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.UnderlineLeadingCharsSuccess
- uid: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Foreground(Remora.Discord.Extensions.Formatting.AnsiForegroundColor)
  commentId: M:Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Foreground(Remora.Discord.Extensions.Formatting.AnsiForegroundColor)
  name: Foreground(AnsiForegroundColor)
  nameWithType: AnsiStringBuilder.Foreground(AnsiForegroundColor)
  fullName: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Foreground(Remora.Discord.Extensions.Formatting.AnsiForegroundColor)
  spec.csharp:
  - uid: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Foreground(Remora.Discord.Extensions.Formatting.AnsiForegroundColor)
    name: Foreground
  - name: (
  - uid: Remora.Discord.Extensions.Formatting.AnsiForegroundColor
    name: AnsiForegroundColor
  - name: )
  spec.vb:
  - uid: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Foreground(Remora.Discord.Extensions.Formatting.AnsiForegroundColor)
    name: Foreground
  - name: (
  - uid: Remora.Discord.Extensions.Formatting.AnsiForegroundColor
    name: AnsiForegroundColor
  - name: )
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundDefaultSuccess*
  commentId: Overload:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundDefaultSuccess
  href: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.html#Remora_Discord_Extensions_Tests_AnsiStringBuilderTests_ForegroundDefaultSuccess_System_String_
  name: ForegroundDefaultSuccess
  nameWithType: AnsiStringBuilderTests.ForegroundDefaultSuccess
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundDefaultSuccess
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundLeadingCharsSuccess*
  commentId: Overload:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundLeadingCharsSuccess
  href: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.html#Remora_Discord_Extensions_Tests_AnsiStringBuilderTests_ForegroundLeadingCharsSuccess_System_String_System_Int32_
  name: ForegroundLeadingCharsSuccess
  nameWithType: AnsiStringBuilderTests.ForegroundLeadingCharsSuccess
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ForegroundLeadingCharsSuccess
- uid: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Background(Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)
  commentId: M:Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Background(Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)
  name: Background(AnsiBackgroundColor)
  nameWithType: AnsiStringBuilder.Background(AnsiBackgroundColor)
  fullName: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Background(Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)
  spec.csharp:
  - uid: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Background(Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)
    name: Background
  - name: (
  - uid: Remora.Discord.Extensions.Formatting.AnsiBackgroundColor
    name: AnsiBackgroundColor
  - name: )
  spec.vb:
  - uid: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Background(Remora.Discord.Extensions.Formatting.AnsiBackgroundColor)
    name: Background
  - name: (
  - uid: Remora.Discord.Extensions.Formatting.AnsiBackgroundColor
    name: AnsiBackgroundColor
  - name: )
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundDefaultSuccess*
  commentId: Overload:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundDefaultSuccess
  href: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.html#Remora_Discord_Extensions_Tests_AnsiStringBuilderTests_BackgroundDefaultSuccess_System_String_
  name: BackgroundDefaultSuccess
  nameWithType: AnsiStringBuilderTests.BackgroundDefaultSuccess
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundDefaultSuccess
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundLeadingCharsSuccess*
  commentId: Overload:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundLeadingCharsSuccess
  href: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.html#Remora_Discord_Extensions_Tests_AnsiStringBuilderTests_BackgroundLeadingCharsSuccess_System_String_System_Int32_
  name: BackgroundLeadingCharsSuccess
  nameWithType: AnsiStringBuilderTests.BackgroundLeadingCharsSuccess
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.BackgroundLeadingCharsSuccess
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixBoldAndUnderlineSuccess*
  commentId: Overload:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixBoldAndUnderlineSuccess
  href: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.html#Remora_Discord_Extensions_Tests_AnsiStringBuilderTests_MixBoldAndUnderlineSuccess
  name: MixBoldAndUnderlineSuccess
  nameWithType: AnsiStringBuilderTests.MixBoldAndUnderlineSuccess
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixBoldAndUnderlineSuccess
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixForegroundAndBackgroundSuccess*
  commentId: Overload:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixForegroundAndBackgroundSuccess
  href: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.html#Remora_Discord_Extensions_Tests_AnsiStringBuilderTests_MixForegroundAndBackgroundSuccess_Remora_Discord_Extensions_Formatting_AnsiForegroundColor_Remora_Discord_Extensions_Formatting_AnsiBackgroundColor_
  name: MixForegroundAndBackgroundSuccess
  nameWithType: AnsiStringBuilderTests.MixForegroundAndBackgroundSuccess
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixForegroundAndBackgroundSuccess
- uid: Remora.Discord.Extensions.Formatting.AnsiForegroundColor
  commentId: T:Remora.Discord.Extensions.Formatting.AnsiForegroundColor
  parent: Remora.Discord.Extensions.Formatting
  href: Remora.Discord.Extensions.Formatting.AnsiForegroundColor.html
  name: AnsiForegroundColor
  nameWithType: AnsiForegroundColor
  fullName: Remora.Discord.Extensions.Formatting.AnsiForegroundColor
- uid: Remora.Discord.Extensions.Formatting.AnsiBackgroundColor
  commentId: T:Remora.Discord.Extensions.Formatting.AnsiBackgroundColor
  parent: Remora.Discord.Extensions.Formatting
  href: Remora.Discord.Extensions.Formatting.AnsiBackgroundColor.html
  name: AnsiBackgroundColor
  nameWithType: AnsiBackgroundColor
  fullName: Remora.Discord.Extensions.Formatting.AnsiBackgroundColor
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixAllSuccess*
  commentId: Overload:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixAllSuccess
  href: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.html#Remora_Discord_Extensions_Tests_AnsiStringBuilderTests_MixAllSuccess_Remora_Discord_Extensions_Formatting_AnsiForegroundColor_Remora_Discord_Extensions_Formatting_AnsiBackgroundColor_
  name: MixAllSuccess
  nameWithType: AnsiStringBuilderTests.MixAllSuccess
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.MixAllSuccess
- uid: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Reset
  commentId: M:Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Reset
  name: Reset()
  nameWithType: AnsiStringBuilder.Reset()
  fullName: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Reset()
  spec.csharp:
  - uid: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Reset
    name: Reset
  - name: (
  - name: )
  spec.vb:
  - uid: Remora.Discord.Extensions.Formatting.AnsiStringBuilder.Reset
    name: Reset
  - name: (
  - name: )
- uid: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ResetSuccess*
  commentId: Overload:Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ResetSuccess
  href: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.html#Remora_Discord_Extensions_Tests_AnsiStringBuilderTests_ResetSuccess
  name: ResetSuccess
  nameWithType: AnsiStringBuilderTests.ResetSuccess
  fullName: Remora.Discord.Extensions.Tests.AnsiStringBuilderTests.ResetSuccess
