### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
  commentId: T:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
  id: MockedTransportServiceBuilder
  parent: Remora.Discord.Gateway.Tests.Transport
  children:
  - Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.#ctor(Xunit.Abstractions.ITestOutputHelper)
  - Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Build
  - Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Continuously(System.Action{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder})
  - Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Finish(System.Threading.CancellationTokenSource)
  - Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.IgnoreUnexpected(System.Boolean)
  - Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Sequence(System.Action{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder})
  - Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.WithTimeout(System.TimeSpan)
  langs:
  - csharp
  - vb
  name: MockedTransportServiceBuilder
  nameWithType: MockedTransportServiceBuilder
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
  type: Class
  source:
    id: MockedTransportServiceBuilder
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Transport\MockedTransportServiceBuilder.cs
    startLine: 34
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Transport
  summary: Builds a mocked transport service.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class MockedTransportServiceBuilder
    content.vb: >-
      <PublicAPI>

      Public Class MockedTransportServiceBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.#ctor(Xunit.Abstractions.ITestOutputHelper)
  commentId: M:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.#ctor(Xunit.Abstractions.ITestOutputHelper)
  id: '#ctor(Xunit.Abstractions.ITestOutputHelper)'
  parent: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
  langs:
  - csharp
  - vb
  name: MockedTransportServiceBuilder(ITestOutputHelper)
  nameWithType: MockedTransportServiceBuilder.MockedTransportServiceBuilder(ITestOutputHelper)
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.MockedTransportServiceBuilder(Xunit.Abstractions.ITestOutputHelper)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Transport\MockedTransportServiceBuilder.cs
    startLine: 49
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Transport
  summary: Initializes a new instance of the <xref href="Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public MockedTransportServiceBuilder(ITestOutputHelper testOutput)
    parameters:
    - id: testOutput
      type: Xunit.Abstractions.ITestOutputHelper
      description: The test output helper.
    content.vb: Public Sub New(testOutput As ITestOutputHelper)
  overload: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.#ctor*
  nameWithType.vb: MockedTransportServiceBuilder.New(ITestOutputHelper)
  fullName.vb: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.New(Xunit.Abstractions.ITestOutputHelper)
  name.vb: New(ITestOutputHelper)
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.WithTimeout(System.TimeSpan)
  commentId: M:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.WithTimeout(System.TimeSpan)
  id: WithTimeout(System.TimeSpan)
  parent: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
  langs:
  - csharp
  - vb
  name: WithTimeout(TimeSpan)
  nameWithType: MockedTransportServiceBuilder.WithTimeout(TimeSpan)
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.WithTimeout(System.TimeSpan)
  type: Method
  source:
    id: WithTimeout
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Transport\MockedTransportServiceBuilder.cs
    startLine: 60
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Transport
  summary: >-
    Sets a timeout for the service. If no sequences have advanced within this timeout, the service will

    terminate and throw.
  example: []
  syntax:
    content: public MockedTransportServiceBuilder WithTimeout(TimeSpan timeout)
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The timeout.
    return:
      type: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
      description: The builder, with the timeout.
    content.vb: Public Function WithTimeout(timeout As TimeSpan) As MockedTransportServiceBuilder
  overload: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.WithTimeout*
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.IgnoreUnexpected(System.Boolean)
  commentId: M:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.IgnoreUnexpected(System.Boolean)
  id: IgnoreUnexpected(System.Boolean)
  parent: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
  langs:
  - csharp
  - vb
  name: IgnoreUnexpected(bool)
  nameWithType: MockedTransportServiceBuilder.IgnoreUnexpected(bool)
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.IgnoreUnexpected(bool)
  type: Method
  source:
    id: IgnoreUnexpected
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Transport\MockedTransportServiceBuilder.cs
    startLine: 71
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Transport
  summary: Sets whether the service should ignore unexpected events.
  example: []
  syntax:
    content: public MockedTransportServiceBuilder IgnoreUnexpected(bool ignoreUnexpected = true)
    parameters:
    - id: ignoreUnexpected
      type: System.Boolean
      description: true if unexpected events should be ignored; otherwise, false.
    return:
      type: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
      description: The builder, with the option configured.
    content.vb: Public Function IgnoreUnexpected(ignoreUnexpected As Boolean = True) As MockedTransportServiceBuilder
  overload: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.IgnoreUnexpected*
  nameWithType.vb: MockedTransportServiceBuilder.IgnoreUnexpected(Boolean)
  fullName.vb: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.IgnoreUnexpected(Boolean)
  name.vb: IgnoreUnexpected(Boolean)
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Continuously(System.Action{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder})
  commentId: M:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Continuously(System.Action{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder})
  id: Continuously(System.Action{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder})
  parent: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
  langs:
  - csharp
  - vb
  name: Continuously(Action<MockedTransportSequenceBuilder>)
  nameWithType: MockedTransportServiceBuilder.Continuously(Action<MockedTransportSequenceBuilder>)
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Continuously(System.Action<Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder>)
  type: Method
  source:
    id: Continuously
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Transport\MockedTransportServiceBuilder.cs
    startLine: 82
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Transport
  summary: Adds a continuous expected action to the builder.
  example: []
  syntax:
    content: public MockedTransportServiceBuilder Continuously(Action<MockedTransportSequenceBuilder> continuousBuilder)
    parameters:
    - id: continuousBuilder
      type: System.Action{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder}
      description: The builder.
    return:
      type: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
      description: The builder, with the action.
    content.vb: Public Function Continuously(continuousBuilder As Action(Of MockedTransportSequenceBuilder)) As MockedTransportServiceBuilder
  overload: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Continuously*
  nameWithType.vb: MockedTransportServiceBuilder.Continuously(Action(Of MockedTransportSequenceBuilder))
  fullName.vb: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Continuously(System.Action(Of Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder))
  name.vb: Continuously(Action(Of MockedTransportSequenceBuilder))
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Sequence(System.Action{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder})
  commentId: M:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Sequence(System.Action{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder})
  id: Sequence(System.Action{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder})
  parent: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
  langs:
  - csharp
  - vb
  name: Sequence(Action<MockedTransportSequenceBuilder>)
  nameWithType: MockedTransportServiceBuilder.Sequence(Action<MockedTransportSequenceBuilder>)
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Sequence(System.Action<Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder>)
  type: Method
  source:
    id: Sequence
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Transport\MockedTransportServiceBuilder.cs
    startLine: 99
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Transport
  summary: Adds a single sequential expected action to the builder.
  example: []
  syntax:
    content: public MockedTransportServiceBuilder Sequence(Action<MockedTransportSequenceBuilder> sequenceBuilder)
    parameters:
    - id: sequenceBuilder
      type: System.Action{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder}
      description: The builder.
    return:
      type: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
      description: The builder, with the action.
    content.vb: Public Function Sequence(sequenceBuilder As Action(Of MockedTransportSequenceBuilder)) As MockedTransportServiceBuilder
  overload: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Sequence*
  nameWithType.vb: MockedTransportServiceBuilder.Sequence(Action(Of MockedTransportSequenceBuilder))
  fullName.vb: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Sequence(System.Action(Of Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder))
  name.vb: Sequence(Action(Of MockedTransportSequenceBuilder))
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Finish(System.Threading.CancellationTokenSource)
  commentId: M:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Finish(System.Threading.CancellationTokenSource)
  id: Finish(System.Threading.CancellationTokenSource)
  parent: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
  langs:
  - csharp
  - vb
  name: Finish(CancellationTokenSource)
  nameWithType: MockedTransportServiceBuilder.Finish(CancellationTokenSource)
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Finish(System.Threading.CancellationTokenSource)
  type: Method
  source:
    id: Finish
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Transport\MockedTransportServiceBuilder.cs
    startLine: 116
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Transport
  summary: Finishes the service, signalling the cancellation token source that it should stop.
  example: []
  syntax:
    content: public MockedTransportServiceBuilder Finish(CancellationTokenSource tokenSource)
    parameters:
    - id: tokenSource
      type: System.Threading.CancellationTokenSource
      description: The token source.
    return:
      type: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
      description: The sequence builder, with the finalizer.
    content.vb: Public Function Finish(tokenSource As CancellationTokenSource) As MockedTransportServiceBuilder
  overload: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Finish*
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Build
  commentId: M:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Build
  id: Build
  parent: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: MockedTransportServiceBuilder.Build()
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Build()
  type: Method
  source:
    id: Build
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Gateway.Tests\Transport\MockedTransportServiceBuilder.cs
    startLine: 126
  assemblies:
  - Remora.Discord.Gateway.Tests
  namespace: Remora.Discord.Gateway.Tests.Transport
  summary: Builds the transport service.
  example: []
  syntax:
    content: public IPayloadTransportService Build()
    return:
      type: Remora.Discord.Gateway.Transport.IPayloadTransportService
      description: The transport service.
    content.vb: Public Function Build() As IPayloadTransportService
  overload: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Build*
references:
- uid: Remora.Discord.Gateway.Tests.Transport
  commentId: N:Remora.Discord.Gateway.Tests.Transport
  href: Remora.html
  name: Remora.Discord.Gateway.Tests.Transport
  nameWithType: Remora.Discord.Gateway.Tests.Transport
  fullName: Remora.Discord.Gateway.Tests.Transport
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Tests
    name: Tests
    href: Remora.Discord.Gateway.Tests.html
  - name: .
  - uid: Remora.Discord.Gateway.Tests.Transport
    name: Transport
    href: Remora.Discord.Gateway.Tests.Transport.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Tests
    name: Tests
    href: Remora.Discord.Gateway.Tests.html
  - name: .
  - uid: Remora.Discord.Gateway.Tests.Transport
    name: Transport
    href: Remora.Discord.Gateway.Tests.Transport.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
  commentId: T:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
  parent: Remora.Discord.Gateway.Tests.Transport
  href: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.html
  name: MockedTransportServiceBuilder
  nameWithType: MockedTransportServiceBuilder
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.#ctor*
  commentId: Overload:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.#ctor
  href: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.html#Remora_Discord_Gateway_Tests_Transport_MockedTransportServiceBuilder__ctor_Xunit_Abstractions_ITestOutputHelper_
  name: MockedTransportServiceBuilder
  nameWithType: MockedTransportServiceBuilder.MockedTransportServiceBuilder
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.MockedTransportServiceBuilder
  nameWithType.vb: MockedTransportServiceBuilder.New
  fullName.vb: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.New
  name.vb: New
- uid: Xunit.Abstractions.ITestOutputHelper
  commentId: T:Xunit.Abstractions.ITestOutputHelper
  parent: Xunit.Abstractions
  isExternal: true
  name: ITestOutputHelper
  nameWithType: ITestOutputHelper
  fullName: Xunit.Abstractions.ITestOutputHelper
- uid: Xunit.Abstractions
  commentId: N:Xunit.Abstractions
  isExternal: true
  name: Xunit.Abstractions
  nameWithType: Xunit.Abstractions
  fullName: Xunit.Abstractions
  spec.csharp:
  - uid: Xunit
    name: Xunit
    isExternal: true
  - name: .
  - uid: Xunit.Abstractions
    name: Abstractions
    isExternal: true
  spec.vb:
  - uid: Xunit
    name: Xunit
    isExternal: true
  - name: .
  - uid: Xunit.Abstractions
    name: Abstractions
    isExternal: true
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.WithTimeout*
  commentId: Overload:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.WithTimeout
  href: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.html#Remora_Discord_Gateway_Tests_Transport_MockedTransportServiceBuilder_WithTimeout_System_TimeSpan_
  name: WithTimeout
  nameWithType: MockedTransportServiceBuilder.WithTimeout
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.WithTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.IgnoreUnexpected*
  commentId: Overload:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.IgnoreUnexpected
  href: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.html#Remora_Discord_Gateway_Tests_Transport_MockedTransportServiceBuilder_IgnoreUnexpected_System_Boolean_
  name: IgnoreUnexpected
  nameWithType: MockedTransportServiceBuilder.IgnoreUnexpected
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.IgnoreUnexpected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Continuously*
  commentId: Overload:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Continuously
  href: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.html#Remora_Discord_Gateway_Tests_Transport_MockedTransportServiceBuilder_Continuously_System_Action_Remora_Discord_Gateway_Tests_Transport_MockedTransportSequenceBuilder__
  name: Continuously
  nameWithType: MockedTransportServiceBuilder.Continuously
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Continuously
- uid: System.Action{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder}
  commentId: T:System.Action{Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<MockedTransportSequenceBuilder>
  nameWithType: Action<MockedTransportSequenceBuilder>
  fullName: System.Action<Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder>
  nameWithType.vb: Action(Of MockedTransportSequenceBuilder)
  fullName.vb: System.Action(Of Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder)
  name.vb: Action(Of MockedTransportSequenceBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder
    name: MockedTransportSequenceBuilder
    href: Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder
    name: MockedTransportSequenceBuilder
    href: Remora.Discord.Gateway.Tests.Transport.MockedTransportSequenceBuilder.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Sequence*
  commentId: Overload:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Sequence
  href: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.html#Remora_Discord_Gateway_Tests_Transport_MockedTransportServiceBuilder_Sequence_System_Action_Remora_Discord_Gateway_Tests_Transport_MockedTransportSequenceBuilder__
  name: Sequence
  nameWithType: MockedTransportServiceBuilder.Sequence
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Sequence
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Finish*
  commentId: Overload:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Finish
  href: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.html#Remora_Discord_Gateway_Tests_Transport_MockedTransportServiceBuilder_Finish_System_Threading_CancellationTokenSource_
  name: Finish
  nameWithType: MockedTransportServiceBuilder.Finish
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Finish
- uid: System.Threading.CancellationTokenSource
  commentId: T:System.Threading.CancellationTokenSource
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtokensource
  name: CancellationTokenSource
  nameWithType: CancellationTokenSource
  fullName: System.Threading.CancellationTokenSource
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Build*
  commentId: Overload:Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Build
  href: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.html#Remora_Discord_Gateway_Tests_Transport_MockedTransportServiceBuilder_Build
  name: Build
  nameWithType: MockedTransportServiceBuilder.Build
  fullName: Remora.Discord.Gateway.Tests.Transport.MockedTransportServiceBuilder.Build
- uid: Remora.Discord.Gateway.Transport.IPayloadTransportService
  commentId: T:Remora.Discord.Gateway.Transport.IPayloadTransportService
  parent: Remora.Discord.Gateway.Transport
  href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html
  name: IPayloadTransportService
  nameWithType: IPayloadTransportService
  fullName: Remora.Discord.Gateway.Transport.IPayloadTransportService
- uid: Remora.Discord.Gateway.Transport
  commentId: N:Remora.Discord.Gateway.Transport
  href: Remora.html
  name: Remora.Discord.Gateway.Transport
  nameWithType: Remora.Discord.Gateway.Transport
  fullName: Remora.Discord.Gateway.Transport
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Transport
    name: Transport
    href: Remora.Discord.Gateway.Transport.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Transport
    name: Transport
    href: Remora.Discord.Gateway.Transport.html
