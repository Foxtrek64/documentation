### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  commentId: T:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  id: DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  parent: Remora.Discord.Rest.Tests.API.Channels
  children:
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsComponentRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsEmbedRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsFileUploadRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsMultiFileUploadRequestCorrectly
  - Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsNormalRequestCorrectly
  langs:
  - csharp
  - vb
  name: DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  nameWithType: DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  type: Class
  source:
    id: StartThreadInForumChannelAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 3071
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests the <xref href="Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake%2cSystem.String%2cRemora.Rest.Core.Optional%7bRemora.Discord.API.Abstractions.Objects.AutoArchiveDuration%7d%2cRemora.Rest.Core.Optional%7bSystem.Nullable%7bSystem.Int32%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.String%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyList%7bRemora.Discord.API.Abstractions.Objects.IEmbed%7d%7d%2cRemora.Rest.Core.Optional%7bRemora.Discord.API.Abstractions.Objects.IAllowedMentions%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyList%7bRemora.Discord.API.Abstractions.Objects.IMessageComponent%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyList%7bRemora.Rest.Core.Snowflake%7d%7d%2cRemora.Rest.Core.Optional%7bSystem.Collections.Generic.IReadOnlyList%7bRemora.Discord.API.Abstractions.Rest.FileData%7d%7d%2cRemora.Rest.Core.Optional%7bRemora.Discord.API.Abstractions.Objects.MessageFlags%7d%2cRemora.Rest.Core.Optional%7bSystem.String%7d%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: 'public class DiscordRestChannelAPITests.StartThreadInForumChannelAsync : RestAPITestBase<IDiscordRestChannelAPI>'
    content.vb: Public Class DiscordRestChannelAPITests.StartThreadInForumChannelAsync Inherits RestAPITestBase(Of IDiscordRestChannelAPI)
  inheritance:
  - System.Object
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}
  inheritedMembers:
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  - Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  id: '#ctor(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)'
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  langs:
  - csharp
  - vb
  name: StartThreadInForumChannelAsync(RestAPITestFixture)
  nameWithType: DiscordRestChannelAPITests.StartThreadInForumChannelAsync.StartThreadInForumChannelAsync(RestAPITestFixture)
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.StartThreadInForumChannelAsync(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 3077
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Initializes a new instance of the <xref href="Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public StartThreadInForumChannelAsync(RestAPITestFixture fixture)
    parameters:
    - id: fixture
      type: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
      description: The test fixture.
    content.vb: Public Sub New(fixture As RestAPITestFixture)
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.#ctor*
  nameWithType.vb: DiscordRestChannelAPITests.StartThreadInForumChannelAsync.New(RestAPITestFixture)
  fullName.vb: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.New(Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture)
  name.vb: New(RestAPITestFixture)
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsNormalRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsNormalRequestCorrectly
  id: PerformsNormalRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsNormalRequestCorrectly()
  nameWithType: DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsNormalRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsNormalRequestCorrectly()
  type: Method
  source:
    id: PerformsNormalRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 3086
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsNormalRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsNormalRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsNormalRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsEmbedRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsEmbedRequestCorrectly
  id: PerformsEmbedRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsEmbedRequestCorrectly()
  nameWithType: DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsEmbedRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsEmbedRequestCorrectly()
  type: Method
  source:
    id: PerformsEmbedRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 3137
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsEmbedRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsEmbedRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsEmbedRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsComponentRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsComponentRequestCorrectly
  id: PerformsComponentRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsComponentRequestCorrectly()
  nameWithType: DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsComponentRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsComponentRequestCorrectly()
  type: Method
  source:
    id: PerformsComponentRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 3182
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsComponentRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsComponentRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsComponentRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsFileUploadRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsFileUploadRequestCorrectly
  id: PerformsFileUploadRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsFileUploadRequestCorrectly()
  nameWithType: DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsFileUploadRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsFileUploadRequestCorrectly()
  type: Method
  source:
    id: PerformsFileUploadRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 3230
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsFileUploadRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsFileUploadRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsFileUploadRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsMultiFileUploadRequestCorrectly
  commentId: M:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsMultiFileUploadRequestCorrectly
  id: PerformsMultiFileUploadRequestCorrectly
  parent: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  langs:
  - csharp
  - vb
  name: PerformsMultiFileUploadRequestCorrectly()
  nameWithType: DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsMultiFileUploadRequestCorrectly()
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsMultiFileUploadRequestCorrectly()
  type: Method
  source:
    id: PerformsMultiFileUploadRequestCorrectly
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Rest.Tests\API\Channels\DiscordRestChannelAPITests.cs
    startLine: 3297
  assemblies:
  - Remora.Discord.Rest.Tests
  namespace: Remora.Discord.Rest.Tests.API.Channels
  summary: Tests whether the API method performs its request correctly.
  example: []
  syntax:
    content: >-
      [Fact]

      public Task PerformsMultiFileUploadRequestCorrectly()
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: >-
      <Fact>

      Public Function PerformsMultiFileUploadRequestCorrectly() As Task
  overload: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsMultiFileUploadRequestCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Rest.FileData}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Rest.FileData}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: StartThreadInForumChannelAsync(Snowflake, string, Optional<AutoArchiveDuration>, Optional<int?>, Optional<string>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<Snowflake>>, Optional<IReadOnlyList<FileData>>, Optional<MessageFlags>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.StartThreadInForumChannelAsync(Snowflake, string, Optional<AutoArchiveDuration>, Optional<int?>, Optional<string>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<Snowflake>>, Optional<IReadOnlyList<FileData>>, Optional<MessageFlags>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Rest.FileData>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.MessageFlags>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.StartThreadInForumChannelAsync(Snowflake, String, Optional(Of AutoArchiveDuration), Optional(Of Integer?), Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of IReadOnlyList(Of FileData)), Optional(Of MessageFlags), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Rest.FileData)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.MessageFlags), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: StartThreadInForumChannelAsync(Snowflake, String, Optional(Of AutoArchiveDuration), Optional(Of Integer?), Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of IReadOnlyList(Of FileData)), Optional(Of MessageFlags), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Rest.FileData}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: StartThreadInForumChannelAsync
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Rest.FileData}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: StartThreadInForumChannelAsync
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.Tests.API.Channels
  commentId: N:Remora.Discord.Rest.Tests.API.Channels
  href: Remora.html
  name: Remora.Discord.Rest.Tests.API.Channels
  nameWithType: Remora.Discord.Rest.Tests.API.Channels
  fullName: Remora.Discord.Rest.Tests.API.Channels
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API
    name: API
    href: Remora.Discord.Rest.Tests.API.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Channels
    name: Channels
    href: Remora.Discord.Rest.Tests.API.Channels.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API
    name: API
    href: Remora.Discord.Rest.Tests.API.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Channels
    name: Channels
    href: Remora.Discord.Rest.Tests.API.Channels.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}
  parent: Remora.Discord.Rest.Tests.TestBases
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  name: RestAPITestBase<IDiscordRestChannelAPI>
  nameWithType: RestAPITestBase<IDiscordRestChannelAPI>
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI>
  nameWithType.vb: RestAPITestBase(Of IDiscordRestChannelAPI)
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  name.vb: RestAPITestBase(Of IDiscordRestChannelAPI)
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
    name: IDiscordRestChannelAPI
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
    name: IDiscordRestChannelAPI
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  parent: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateAPI(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<IDiscordRestChannelAPI>.CreateAPI(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI>.CreateAPI(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of IDiscordRestChannelAPI).CreateAPI(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI).CreateAPI(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateAPI(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  parent: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}
  definition: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<IDiscordRestChannelAPI>.CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI>.CreateConfiguredAPIServices(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of IDiscordRestChannelAPI).CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI).CreateConfiguredAPIServices(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase{Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI}.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  name: RestAPITestBase<TAPI>
  nameWithType: RestAPITestBase<TAPI>
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>
  nameWithType.vb: RestAPITestBase(Of TAPI)
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI)
  name.vb: RestAPITestBase(Of TAPI)
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: <
  - name: TAPI
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1
    name: RestAPITestBase
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TAPI
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases
  commentId: N:Remora.Discord.Rest.Tests.TestBases
  href: Remora.html
  name: Remora.Discord.Rest.Tests.TestBases
  nameWithType: Remora.Discord.Rest.Tests.TestBases
  fullName: Remora.Discord.Rest.Tests.TestBases
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.TestBases
    name: TestBases
    href: Remora.Discord.Rest.Tests.TestBases.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Tests
    name: Tests
    href: Remora.Discord.Rest.Tests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.TestBases
    name: TestBases
    href: Remora.Discord.Rest.Tests.TestBases.html
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  isExternal: true
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateAPI(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<TAPI>.CreateAPI(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>.CreateAPI(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of TAPI).CreateAPI(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI).CreateAPI(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateAPI(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateAPI(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateAPI
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateAPI_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  commentId: M:Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
  isExternal: true
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  name: CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  nameWithType: RestAPITestBase<TAPI>.CreateConfiguredAPIServices(Action<MockHttpMessageHandler>)
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase<TAPI>.CreateConfiguredAPIServices(System.Action<RichardSzalay.MockHttp.MockHttpMessageHandler>)
  nameWithType.vb: RestAPITestBase(Of TAPI).CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  fullName.vb: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase(Of TAPI).CreateConfiguredAPIServices(System.Action(Of RichardSzalay.MockHttp.MockHttpMessageHandler))
  name.vb: CreateConfiguredAPIServices(Action(Of MockHttpMessageHandler))
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase`1.CreateConfiguredAPIServices(System.Action{RichardSzalay.MockHttp.MockHttpMessageHandler})
    name: CreateConfiguredAPIServices
    href: Remora.Discord.Rest.Tests.TestBases.RestAPITestBase-1.html#Remora_Discord_Rest_Tests_TestBases_RestAPITestBase_1_CreateConfiguredAPIServices_System_Action_RichardSzalay_MockHttp_MockHttpMessageHandler__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RichardSzalay.MockHttp.MockHttpMessageHandler
    name: MockHttpMessageHandler
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  commentId: T:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.html
  name: DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  nameWithType: DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync
  spec.csharp:
  - uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests
    name: DiscordRestChannelAPITests
    href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync
    name: StartThreadInForumChannelAsync
    href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.html
  spec.vb:
  - uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests
    name: DiscordRestChannelAPITests
    href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.html
  - name: .
  - uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync
    name: StartThreadInForumChannelAsync
    href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.html
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.#ctor*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.#ctor
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_StartThreadInForumChannelAsync__ctor_Remora_Discord_Rest_Tests_TestBases_RestAPITestFixture_
  name: StartThreadInForumChannelAsync
  nameWithType: DiscordRestChannelAPITests.StartThreadInForumChannelAsync.StartThreadInForumChannelAsync
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.StartThreadInForumChannelAsync
  nameWithType.vb: DiscordRestChannelAPITests.StartThreadInForumChannelAsync.New
  fullName.vb: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.New
  name.vb: New
- uid: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
  commentId: T:Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
  parent: Remora.Discord.Rest.Tests.TestBases
  href: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture.html
  name: RestAPITestFixture
  nameWithType: RestAPITestFixture
  fullName: Remora.Discord.Rest.Tests.TestBases.RestAPITestFixture
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsNormalRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsNormalRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_StartThreadInForumChannelAsync_PerformsNormalRequestCorrectly
  name: PerformsNormalRequestCorrectly
  nameWithType: DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsNormalRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsNormalRequestCorrectly
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsEmbedRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsEmbedRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_StartThreadInForumChannelAsync_PerformsEmbedRequestCorrectly
  name: PerformsEmbedRequestCorrectly
  nameWithType: DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsEmbedRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsEmbedRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsComponentRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsComponentRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_StartThreadInForumChannelAsync_PerformsComponentRequestCorrectly
  name: PerformsComponentRequestCorrectly
  nameWithType: DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsComponentRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsComponentRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsFileUploadRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsFileUploadRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_StartThreadInForumChannelAsync_PerformsFileUploadRequestCorrectly
  name: PerformsFileUploadRequestCorrectly
  nameWithType: DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsFileUploadRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsFileUploadRequestCorrectly
- uid: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsMultiFileUploadRequestCorrectly*
  commentId: Overload:Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsMultiFileUploadRequestCorrectly
  href: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.html#Remora_Discord_Rest_Tests_API_Channels_DiscordRestChannelAPITests_StartThreadInForumChannelAsync_PerformsMultiFileUploadRequestCorrectly
  name: PerformsMultiFileUploadRequestCorrectly
  nameWithType: DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsMultiFileUploadRequestCorrectly
  fullName: Remora.Discord.Rest.Tests.API.Channels.DiscordRestChannelAPITests.StartThreadInForumChannelAsync.PerformsMultiFileUploadRequestCorrectly
