### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailCondition
  commentId: T:Remora.Discord.Commands.Tests.Data.Events.AlwaysFailCondition
  id: AlwaysFailCondition
  parent: Remora.Discord.Commands.Tests.Data.Events
  children:
  - Remora.Discord.Commands.Tests.Data.Events.AlwaysFailCondition.CheckAsync(Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: AlwaysFailCondition
  nameWithType: AlwaysFailCondition
  fullName: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailCondition
  type: Class
  source:
    id: AlwaysFailCondition
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Events\ComplexGroup.cs
    startLine: 63
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Events
  summary: Always fails no matter what.
  example: []
  syntax:
    content: 'public class AlwaysFailCondition : ICondition<AlwaysFailConditionAttribute>, ICondition'
    content.vb: Public Class AlwaysFailCondition Implements ICondition(Of AlwaysFailConditionAttribute), ICondition
  inheritance:
  - System.Object
  implements:
  - Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute}
  - Remora.Commands.Conditions.ICondition
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailCondition.CheckAsync(Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Commands.Tests.Data.Events.AlwaysFailCondition.CheckAsync(Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute,System.Threading.CancellationToken)
  id: CheckAsync(Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute,System.Threading.CancellationToken)
  parent: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailCondition
  langs:
  - csharp
  - vb
  name: CheckAsync(AlwaysFailConditionAttribute, CancellationToken)
  nameWithType: AlwaysFailCondition.CheckAsync(AlwaysFailConditionAttribute, CancellationToken)
  fullName: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailCondition.CheckAsync(Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute, System.Threading.CancellationToken)
  type: Method
  source:
    id: CheckAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Tests\Remora.Discord.Commands.Tests\Data\Events\ComplexGroup.cs
    startLine: 66
  assemblies:
  - Remora.Discord.Commands.Tests
  namespace: Remora.Discord.Commands.Tests.Data.Events
  summary: Checks the condition against the given data, using contextual data available in the given attribute.
  example: []
  syntax:
    content: public ValueTask<Result> CheckAsync(AlwaysFailConditionAttribute attribute, CancellationToken ct = default)
    parameters:
    - id: attribute
      type: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute
      description: The attribute.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.ValueTask{Remora.Results.Result}
      description: A condition result which may or may not have succeeded.
    content.vb: Public Function CheckAsync(attribute As AlwaysFailConditionAttribute, ct As CancellationToken = Nothing) As ValueTask(Of Result)
  overload: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailCondition.CheckAsync*
  implements:
  - Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute}.CheckAsync(Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute,System.Threading.CancellationToken)
references:
- uid: Remora.Discord.Commands.Tests.Data.Events
  commentId: N:Remora.Discord.Commands.Tests.Data.Events
  href: Remora.html
  name: Remora.Discord.Commands.Tests.Data.Events
  nameWithType: Remora.Discord.Commands.Tests.Data.Events
  fullName: Remora.Discord.Commands.Tests.Data.Events
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Data
    name: Data
    href: Remora.Discord.Commands.Tests.Data.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Data.Events
    name: Events
    href: Remora.Discord.Commands.Tests.Data.Events.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Tests
    name: Tests
    href: Remora.Discord.Commands.Tests.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Data
    name: Data
    href: Remora.Discord.Commands.Tests.Data.html
  - name: .
  - uid: Remora.Discord.Commands.Tests.Data.Events
    name: Events
    href: Remora.Discord.Commands.Tests.Data.Events.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute}
  commentId: T:Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute}
  parent: Remora.Commands.Conditions
  definition: Remora.Commands.Conditions.ICondition`1
  href: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute.html
  name: ICondition<AlwaysFailConditionAttribute>
  nameWithType: ICondition<AlwaysFailConditionAttribute>
  fullName: Remora.Commands.Conditions.ICondition<Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute>
  nameWithType.vb: ICondition(Of AlwaysFailConditionAttribute)
  fullName.vb: Remora.Commands.Conditions.ICondition(Of Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute)
  name.vb: ICondition(Of AlwaysFailConditionAttribute)
  spec.csharp:
  - uid: Remora.Commands.Conditions.ICondition`1
    name: ICondition
    isExternal: true
  - name: <
  - uid: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute
    name: AlwaysFailConditionAttribute
    href: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute.html
  - name: '>'
  spec.vb:
  - uid: Remora.Commands.Conditions.ICondition`1
    name: ICondition
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute
    name: AlwaysFailConditionAttribute
    href: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute.html
  - name: )
- uid: Remora.Commands.Conditions.ICondition
  commentId: T:Remora.Commands.Conditions.ICondition
  parent: Remora.Commands.Conditions
  isExternal: true
  name: ICondition
  nameWithType: ICondition
  fullName: Remora.Commands.Conditions.ICondition
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Commands.Conditions.ICondition`1
  commentId: T:Remora.Commands.Conditions.ICondition`1
  isExternal: true
  name: ICondition<TAttribute>
  nameWithType: ICondition<TAttribute>
  fullName: Remora.Commands.Conditions.ICondition<TAttribute>
  nameWithType.vb: ICondition(Of TAttribute)
  fullName.vb: Remora.Commands.Conditions.ICondition(Of TAttribute)
  name.vb: ICondition(Of TAttribute)
  spec.csharp:
  - uid: Remora.Commands.Conditions.ICondition`1
    name: ICondition
    isExternal: true
  - name: <
  - name: TAttribute
  - name: '>'
  spec.vb:
  - uid: Remora.Commands.Conditions.ICondition`1
    name: ICondition
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TAttribute
  - name: )
- uid: Remora.Commands.Conditions
  commentId: N:Remora.Commands.Conditions
  isExternal: true
  name: Remora.Commands.Conditions
  nameWithType: Remora.Commands.Conditions
  fullName: Remora.Commands.Conditions
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Commands
    name: Commands
    isExternal: true
  - name: .
  - uid: Remora.Commands.Conditions
    name: Conditions
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Commands
    name: Commands
    isExternal: true
  - name: .
  - uid: Remora.Commands.Conditions
    name: Conditions
    isExternal: true
- uid: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailCondition.CheckAsync*
  commentId: Overload:Remora.Discord.Commands.Tests.Data.Events.AlwaysFailCondition.CheckAsync
  href: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailCondition.html#Remora_Discord_Commands_Tests_Data_Events_AlwaysFailCondition_CheckAsync_Remora_Discord_Commands_Tests_Data_Events_AlwaysFailConditionAttribute_System_Threading_CancellationToken_
  name: CheckAsync
  nameWithType: AlwaysFailCondition.CheckAsync
  fullName: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailCondition.CheckAsync
- uid: Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute}.CheckAsync(Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute,System.Threading.CancellationToken)
  commentId: M:Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute}.CheckAsync(Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute,System.Threading.CancellationToken)
  parent: Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute}
  definition: Remora.Commands.Conditions.ICondition`1.CheckAsync(`0,System.Threading.CancellationToken)
  href: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute.html
  name: CheckAsync(AlwaysFailConditionAttribute, CancellationToken)
  nameWithType: ICondition<AlwaysFailConditionAttribute>.CheckAsync(AlwaysFailConditionAttribute, CancellationToken)
  fullName: Remora.Commands.Conditions.ICondition<Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute>.CheckAsync(Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute, System.Threading.CancellationToken)
  nameWithType.vb: ICondition(Of AlwaysFailConditionAttribute).CheckAsync(AlwaysFailConditionAttribute, CancellationToken)
  fullName.vb: Remora.Commands.Conditions.ICondition(Of Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute).CheckAsync(Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute}.CheckAsync(Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute,System.Threading.CancellationToken)
    name: CheckAsync
    isExternal: true
  - name: (
  - uid: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute
    name: AlwaysFailConditionAttribute
    href: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute}.CheckAsync(Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute,System.Threading.CancellationToken)
    name: CheckAsync
    isExternal: true
  - name: (
  - uid: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute
    name: AlwaysFailConditionAttribute
    href: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute
  commentId: T:Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute
  parent: Remora.Discord.Commands.Tests.Data.Events
  href: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute.html
  name: AlwaysFailConditionAttribute
  nameWithType: AlwaysFailConditionAttribute
  fullName: Remora.Discord.Commands.Tests.Data.Events.AlwaysFailConditionAttribute
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.ValueTask{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.ValueTask{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<Result>
  nameWithType: ValueTask<Result>
  fullName: System.Threading.Tasks.ValueTask<Remora.Results.Result>
  nameWithType.vb: ValueTask(Of Result)
  fullName.vb: System.Threading.Tasks.ValueTask(Of Remora.Results.Result)
  name.vb: ValueTask(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
- uid: Remora.Commands.Conditions.ICondition`1.CheckAsync(`0,System.Threading.CancellationToken)
  commentId: M:Remora.Commands.Conditions.ICondition`1.CheckAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CheckAsync(TAttribute, CancellationToken)
  nameWithType: ICondition<TAttribute>.CheckAsync(TAttribute, CancellationToken)
  fullName: Remora.Commands.Conditions.ICondition<TAttribute>.CheckAsync(TAttribute, System.Threading.CancellationToken)
  nameWithType.vb: ICondition(Of TAttribute).CheckAsync(TAttribute, CancellationToken)
  fullName.vb: Remora.Commands.Conditions.ICondition(Of TAttribute).CheckAsync(TAttribute, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Commands.Conditions.ICondition`1.CheckAsync(`0,System.Threading.CancellationToken)
    name: CheckAsync
    isExternal: true
  - name: (
  - name: TAttribute
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Commands.Conditions.ICondition`1.CheckAsync(`0,System.Threading.CancellationToken)
    name: CheckAsync
    isExternal: true
  - name: (
  - name: TAttribute
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
